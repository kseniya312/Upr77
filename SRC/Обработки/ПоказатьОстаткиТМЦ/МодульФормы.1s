////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ОбъектАнализа, КонтСправочника;
Перем ОстаткиТМЦ, РезервыТМЦ, Заказы, ПартииНаличие, ПартииОтданные, РеализованныйТовар; 


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ЗаполнитьКолонкиТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
// 
// Описание:
//  Устанавливает фильтры на нужные регистры и определяет колонки таблицы формы.
//
Процедура ЗаполнитьКолонкиТаблицы()
	
	СпособПоказа = ОстаткиПо.ПолучитьЗначение(ОстаткиПо.ТекущаяСтрока());
	ТаблицаФормы.Очистить();	 
	
	Если СпособПоказа = "складам" Тогда
		
		ОстаткиТМЦ = СоздатьОбъект("Регистр.ОстаткиТМЦ");
		РезервыТМЦ = СоздатьОбъект("Регистр.РезервыТМЦ");
		
		ТаблицаФормы.НоваяКолонка("Склад"  ,       "Справочник.Склады"       ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Резерв",        "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		
	ИначеЕсли СпособПоказа = "фирмам" Тогда    
		
		ОстаткиТМЦ = СоздатьОбъект("Регистр.ОстаткиТМЦ");
		РезервыТМЦ = СоздатьОбъект("Регистр.РезервыТМЦ");
		Заказы     = СоздатьОбъект("Регистр.Заказы");
		
		ТаблицаФормы.НоваяКолонка("Фирма",         "Справочник.Фирмы"        ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Резерв",        "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Заказ",         "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		
	ИначеЕсли СпособПоказа = "складам и фирмам" Тогда    
		
		ОстаткиТМЦ = СоздатьОбъект("Регистр.ОстаткиТМЦ");
		
		ТаблицаФормы.НоваяКолонка("Склад",         "Справочник.Склады"       ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Фирма",         "Справочник.Фирмы"        ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		
	ИначеЕсли СпособПоказа = "юр.лицам" Тогда    
		
		ОстаткиТМЦ = СоздатьОбъект("Регистр.ОстаткиТМЦ");
		РезервыТМЦ = СоздатьОбъект("Регистр.РезервыТМЦ");
		Заказы     = СоздатьОбъект("Регистр.Заказы");
		
		ТаблицаФормы.НоваяКолонка("ЮрЛицо",        "Справочник.СвоиЮрЛица"   ,,,"Юр. лицо"      ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Резерв",        "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Заказ",         "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		
	ИначеЕсли СпособПоказа = "упр. аналитикам" Тогда    
		
		ОстаткиТМЦ = СоздатьОбъект("Регистр.ОстаткиТМЦ");
		РезервыТМЦ = СоздатьОбъект("Регистр.РезервыТМЦ");
		Заказы     = СоздатьОбъект("Регистр.Заказы");
		
		ТаблицаФормы.НоваяКолонка("УпрАналитика",  "Справочник.УпрАналитика" ,,,"Упр. аналитика",20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Резерв",        "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Заказ",         "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		
	ИначеЕсли СпособПоказа = "партиям в наличии" Тогда    
		
		ПартииНаличие = СоздатьОбъект("Регистр.ПартииНаличие");
		
		ТаблицаФормы.НоваяКолонка("Поставщик",     "Справочник.Контрагенты"  ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		ТаблицаФормы.НоваяКолонка("Цена",          "Строка"                  ,,,                ,10,,2);
		ТаблицаФормы.НоваяКолонка("Валюта",        "Строка"                  ,,,"Вал."          , 5,,2);
		ТаблицаФормы.НоваяКолонка("ВидСвойства",   "Справочник.ВидыСвойств"  ,,,"Вид"           ,15,,1);
		ТаблицаФормы.НоваяКолонка("Свойство",    "Справочник.ЗначенияСвойств",,,                ,10,,1);
		ТаблицаФормы.НоваяКолонка("Объект",        "Документ"                ,,,                ,  ,, );
		ТаблицаФормы.ВидимостьКолонки("Объект",0);
		
	ИначеЕсли СпособПоказа = "партиям, отданным на реализацию" Тогда    
		
		ПартииОтданные = СоздатьОбъект("Регистр.ПартииОтданные");
		
		ТаблицаФормы.НоваяКолонка("Комиссионер",   "Справочник.Контрагенты"  ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		ТаблицаФормы.НоваяКолонка("Цена",          "Строка"                  ,,,                ,10,,2);
		ТаблицаФормы.НоваяКолонка("Валюта",        "Строка"                  ,,,"Вал."          , 5,,2);
		ТаблицаФормы.НоваяКолонка("Объект",        "Документ"                ,,,                ,  ,, );
		ТаблицаФормы.ВидимостьКолонки("Объект",0);
		
	ИначеЕсли СпособПоказа = "партиям, принятым на реализацию" Тогда    
		
		РеализованныйТовар = СоздатьОбъект("Регистр.РеализованныйТовар");
		
		ТаблицаФормы.НоваяКолонка("Комитент",      "Справочник.Контрагенты"  ,,,                ,20,,1);
		ТаблицаФормы.НоваяКолонка("Остаток",       "Строка"                  ,,,                , 7,,2);
		ТаблицаФормы.НоваяКолонка("Единица",       "Строка"                  ,,,"Ед."           , 5,,2);
		ТаблицаФормы.НоваяКолонка("Цена",          "Строка"                  ,,,                ,10,,2);
		ТаблицаФормы.НоваяКолонка("Валюта",        "Строка"                  ,,,"Вал."          , 5,,2);
		ТаблицаФормы.НоваяКолонка("Объект",        "Документ"                ,,,                ,  ,, );
		ТаблицаФормы.ВидимостьКолонки("Объект",0);
		
	КонецЕсли;
	
	
КонецПроцедуры // ЗаполнитьКолонкиТаблицы()

//******************************************************************************
// ЗаполнитьПоСкладам()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по складам
//
Процедура ЗаполнитьПоСкладам()
	
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ОстаткиТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ОстаткиТМЦ.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблРезервов =СоздатьОбъект("ТаблицаЗначений"); 
	РезервыТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	РезервыТМЦ.ВыгрузитьИтоги(ТаблРезервов,1,1);
	
	ТаблОстатков.Свернуть("Склад","Количество");
	ТаблРезервов.Свернуть("Склад","Количество");
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Склад	 = ТаблОстатков.Склад;
			ТаблицаФормы.Остаток = ТаблОстатков.Количество;
			ТекСтрока = 0; 
			Если ТаблРезервов.НайтиЗначение(ТаблОстатков.Склад, ТекСтрока, "Склад") = 1 Тогда
		 		ТаблицаФормы.Резерв	= ТаблРезервов.ПолучитьЗначение(ТекСтрока,"Количество");
		 		ТаблРезервов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
		КонецЕсли; 
	КонецЦикла;
	
	ТаблРезервов.ВыбратьСтроки();
	Пока ТаблРезервов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые резервы при нулевых остатках
		Если ПустоеЗначение(ТаблРезервов.Склад) = 0 Тогда // резерв по фирме в целом (без склада) показывать не будем
			Если ТаблРезервов.Количество <> 0 Тогда
				ТаблицаФормы.НоваяСтрока();
				ТаблицаФормы.Склад	 = ТаблРезервов.Склад;
				ТаблицаФормы.Остаток = "";
				ТаблицаФормы.Резерв	 = ТаблРезервов.Количество;
				ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоСкладам()

//******************************************************************************
// ЗаполнитьПоФирмам()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по фирмам
//
Процедура ЗаполнитьПоФирмам()
	
                          
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ОстаткиТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ОстаткиТМЦ.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблРезервов =СоздатьОбъект("ТаблицаЗначений"); 
	РезервыТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	РезервыТМЦ.ВыгрузитьИтоги(ТаблРезервов,1,1);
	
	ТаблЗаказов =СоздатьОбъект("ТаблицаЗначений"); 
	Заказы.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	Заказы.ВыгрузитьИтоги(ТаблЗаказов,1,1);
	
	ТаблОстатков.Свернуть("Фирма","Количество");
	ТаблРезервов.Свернуть("Фирма","Количество");
	ТаблЗаказов. Свернуть("Фирма","КоличествоПриход");
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Фирма	 = ТаблОстатков.Фирма;
			ТаблицаФормы.Остаток = ТаблОстатков.Количество;
			ТекСтрока = 0; 
			Если ТаблРезервов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблицаФормы.Резерв	= ТаблРезервов.ПолучитьЗначение(ТекСтрока,"Количество");
		 		ТаблРезервов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблицаФормы.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
		КонецЕсли; 
	КонецЦикла;
	
	ТаблРезервов.ВыбратьСтроки();
	Пока ТаблРезервов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые резервы при нулевых остатках
		Если ТаблРезервов.Количество <> 0 Тогда
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Фирма	 = ТаблРезервов.Фирма;
			ТаблицаФормы.Остаток = "";
			ТаблицаФормы.Резерв	 = ТаблРезервов.Количество;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблРезервов.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблицаФормы.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
		КонецЕсли; 
	КонецЦикла;

	ТаблЗаказов.ВыбратьСтроки();
	Пока ТаблЗаказов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые заказы при нулевых остатках и резервах
		Если ТаблЗаказов.КоличествоПриход <> 0 Тогда
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Фирма	 = ТаблЗаказов.Фирма;
			ТаблицаФормы.Остаток = "";
			ТаблицаФормы.Резерв  = "";
			ТаблицаФормы.Заказ	 = ТаблЗаказов.КоличествоПриход;
			ТекСтрока = 0; 
			ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоФирмам()

//******************************************************************************
// ЗаполнитьПоСкладамИфирмам()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по складам и фирмам
//
Процедура ЗаполнитьПоСкладамИфирмам()
	
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ОстаткиТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ОстаткиТМЦ.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблОстатков.Свернуть("Фирма, Склад","Количество"); 
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Склад	 = ТаблОстатков.Склад;
			ТаблицаФормы.Фирма	 = ТаблОстатков.Фирма;
			ТаблицаФормы.Остаток = ТаблОстатков.Количество;
			ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоСкладамИфирмам()

//******************************************************************************
// ЗаполнитьПоЮрЛицам()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по юр. лицам
//
Процедура ЗаполнитьПоЮрЛицам()
	
    
	// Вначале заполним ТаблОстатков по фирмам, потом свернем по юр. лицам и перегрузим в ТЗ формы
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ОстаткиТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ОстаткиТМЦ.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблРезервов =СоздатьОбъект("ТаблицаЗначений"); 
	РезервыТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	РезервыТМЦ.ВыгрузитьИтоги(ТаблРезервов,1,1);
	
	ТаблЗаказов =СоздатьОбъект("ТаблицаЗначений"); 
	Заказы.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	Заказы.ВыгрузитьИтоги(ТаблЗаказов,1,1);
	
	ТаблОстатков.Свернуть("Фирма","Количество");
	ТаблРезервов.Свернуть("Фирма","Количество");
	ТаблЗаказов. Свернуть("Фирма","КоличествоПриход");
	
	ТаблОстатков.НоваяКолонка("ЮрЛицо","Справочник.СвоиЮрЛица");
	ТаблОстатков.НоваяКолонка("Остаток", "Число");
	ТаблОстатков.НоваяКолонка("Резерв",  "Число");
	ТаблОстатков.НоваяКолонка("Заказ",   "Число");
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТаблОстатков.ЮрЛицо  = ТаблОстатков.Фирма.ЮрЛицо;
			ТаблОстатков.Остаток = ТаблОстатков.Количество;
			ТекСтрока = 0; 
			Если ТаблРезервов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Резерв	= ТаблРезервов.ПолучитьЗначение(ТекСтрока,"Количество");
		 		ТаблРезервов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	ТаблРезервов.ВыбратьСтроки();
	Пока ТаблРезервов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые резервы при нулевых остатках
		Если ТаблРезервов.Количество <> 0 Тогда
			ТаблОстатков.НоваяСтрока();
			ТаблОстатков.Фирма	 = ТаблРезервов.Фирма;
			ТаблОстатков.ЮрЛицо  = ТаблОстатков.Фирма.ЮрЛицо;
			ТаблОстатков.Остаток = "";
			ТаблОстатков.Резерв	 = ТаблРезервов.Количество;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблРезервов.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;

	ТаблЗаказов.ВыбратьСтроки();
	Пока ТаблЗаказов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые заказы при нулевых остатках и резервах
		Если ТаблЗаказов.КоличествоПриход <> 0 Тогда
			ТаблОстатков.НоваяСтрока();
			ТаблОстатков.Фирма	 = ТаблЗаказов.Фирма;
			ТаблОстатков.ЮрЛицо  = ТаблОстатков.Фирма.ЮрЛицо;
			ТаблОстатков.Остаток = "";
			ТаблОстатков.Резерв  = "";
			ТаблОстатков.Заказ	 = ТаблЗаказов.КоличествоПриход;
		КонецЕсли; 
	КонецЦикла;
	
	ТаблОстатков.Свернуть("ЮрЛицо","Остаток,Резерв,Заказ");
	
	// Теперь построчно перепишем в ТЗ формы (диалог мигает при "выгрузить" или "свернуть")
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    ТаблицаФормы.НоваяСтрока();
		ТаблицаФормы.ЮрЛицо  = ТаблОстатков.ЮрЛицо;
		ТаблицаФормы.Остаток = ТаблОстатков.Остаток;
		ТаблицаФормы.Резерв  = ТаблОстатков.Резерв;
		ТаблицаФормы.Заказ   = ТаблОстатков.Заказ;
		ТаблицаФормы.Единица = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоЮрЛицам()

//******************************************************************************
// ЗаполнитьПоУпрАналитикам()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по упр. аналитикам
//
Процедура ЗаполнитьПоУпрАналитикам()
    
	// Вначале заполним ТаблОстатков по фирмам, потом свернем по юр. лицам и перегрузим в ТЗ формы
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ОстаткиТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ОстаткиТМЦ.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблРезервов =СоздатьОбъект("ТаблицаЗначений"); 
	РезервыТМЦ.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	РезервыТМЦ.ВыгрузитьИтоги(ТаблРезервов,1,1);
	
	ТаблЗаказов =СоздатьОбъект("ТаблицаЗначений"); 
	Заказы.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	Заказы.ВыгрузитьИтоги(ТаблЗаказов,1,1);
	
	ТаблОстатков.Свернуть("Фирма","Количество");
	ТаблРезервов.Свернуть("Фирма","Количество");
	ТаблЗаказов. Свернуть("Фирма","КоличествоПриход");
	
	ТаблОстатков.НоваяКолонка("УпрАналитика","Справочник.УпрАналитика");
	ТаблОстатков.НоваяКолонка("Остаток", "Число");
	ТаблОстатков.НоваяКолонка("Резерв",  "Число");
	ТаблОстатков.НоваяКолонка("Заказ",   "Число");
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТаблОстатков.УпрАналитика  = ТаблОстатков.Фирма.УпрАналитика;
			ТаблОстатков.Остаток       = ТаблОстатков.Количество;
			ТекСтрока = 0; 
			Если ТаблРезервов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Резерв	= ТаблРезервов.ПолучитьЗначение(ТекСтрока,"Количество");
		 		ТаблРезервов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблОстатков.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	ТаблРезервов.ВыбратьСтроки();
	Пока ТаблРезервов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые резервы при нулевых остатках
		Если ТаблРезервов.Количество <> 0 Тогда
			ТаблОстатков.НоваяСтрока();
			ТаблОстатков.Фирма	       = ТаблРезервов.Фирма;
			ТаблОстатков.УпрАналитика  = ТаблОстатков.Фирма.УпрАналитика;
			ТаблОстатков.Остаток       = "";
			ТаблОстатков.Резерв	       = ТаблРезервов.Количество;
			ТекСтрока = 0; 
			Если ТаблЗаказов.НайтиЗначение(ТаблРезервов.Фирма, ТекСтрока, "Фирма") = 1 Тогда
		 		ТаблОстатков.Заказ	= ТаблЗаказов.ПолучитьЗначение(ТекСтрока,"КоличествоПриход");
		 		ТаблЗаказов.УдалитьСтроку(ТекСтрока);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;

	ТаблЗаказов.ВыбратьСтроки();
	Пока ТаблЗаказов.ПолучитьСтроку()  = 1 Цикл          // если есть ненулевые заказы при нулевых остатках и резервах
		Если ТаблЗаказов.КоличествоПриход <> 0 Тогда
			ТаблОстатков.НоваяСтрока();
			ТаблОстатков.Фирма	       = ТаблЗаказов.Фирма;
			ТаблОстатков.УпрАналитика  = ТаблОстатков.Фирма.УпрАналитика;
			ТаблОстатков.Остаток       = "";
			ТаблОстатков.Резерв        = "";
			ТаблОстатков.Заказ	       = ТаблЗаказов.КоличествоПриход;
		КонецЕсли; 
	КонецЦикла;
	
	ТаблОстатков.Свернуть("УпрАналитика","Остаток,Резерв,Заказ");
	
	// Теперь построчно перепишем в ТЗ формы (диалог мигает при "выгрузить" или "свернуть")
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    ТаблицаФормы.НоваяСтрока();
		ТаблицаФормы.УпрАналитика  = ТаблОстатков.УпрАналитика;
		ТаблицаФормы.Остаток       = ТаблОстатков.Остаток;
		ТаблицаФормы.Резерв        = ТаблОстатков.Резерв;
		ТаблицаФормы.Заказ         = ТаблОстатков.Заказ;
		ТаблицаФормы.Единица       = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
	КонецЦикла;


КонецПроцедуры // ЗаполнитьПоУпрАналитикам()

//******************************************************************************
// ЗаполнитьПоПартиям()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по партиям
//
Процедура ЗаполнитьПоПартиям()
	
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ПартииНаличие.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ПартииНаличие.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблОстатков.Свернуть("Партия","Количество,СуммаУпр"); 
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТекПартия = ТаблОстатков.Партия;
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Поставщик      = ТекПартия.Поставщик;
			ТаблицаФормы.ВидСвойства    = ТекПартия.Свойство.Владелец;
			ТаблицаФормы.Свойство       = ТекПартия.Свойство;
			ТаблицаФормы.Остаток        = ТаблОстатков.Количество;
			ТаблицаФормы.Единица        = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
			ТаблицаФормы.Цена           = глФРМ(ТаблОстатков.СуммаУпр / ТаблОстатков.Количество);
			ТаблицаФормы.Валюта         = СокрЛП(глДоллары);
			ТаблицаФормы.Объект         = ТекПартия.ПриходныйДокумент;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоПартиям()

//******************************************************************************
// ЗаполнитьПоПартиямОтданным()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по партиям, отданным на реализацию
//
Процедура ЗаполнитьПоПартиямОтданным()
	
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	ПартииОтданные.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	ПартииОтданные.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблОстатков.Свернуть("Договор,Партия,ДокументПередачи","Количество,ПродСтоимость"); 
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТекДоговор = ТаблОстатков.Договор;
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Комиссионер    = ТекДоговор.Владелец;
			ТаблицаФормы.Остаток        = ТаблОстатков.Количество;
			ТаблицаФормы.Единица        = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
			ТаблицаФормы.Цена           = глФРМ(ТаблОстатков.ПродСтоимость/ ТаблОстатков.Количество);
			ТаблицаФормы.Валюта         = СокрЛП(ТекДоговор.ВалютаВзаиморасчетов);
			ТаблицаФормы.Объект         = ТаблОстатков.ДокументПередачи;
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоПартиямОтданным()

//******************************************************************************
// ЗаполнитьПоПартиямПринятым()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет таблицу значений формы остатками по партиям, принятым на реализацию, 
//  по которым еще не отчитались перед комитентом.
//
Процедура ЗаполнитьПоПартиямПринятым()
	
	ТаблОстатков =СоздатьОбъект("ТаблицаЗначений"); 
	РеализованныйТовар.УстановитьЗначениеФильтра("Номенклатура", ОбъектАнализа, 1);           
	РеализованныйТовар.ВыгрузитьИтоги(ТаблОстатков,1,1);
	
	ТаблОстатков.Свернуть("Договор,Партия,ДокПродажи","Количество,ПродСтоимость"); 
	
	ТаблОстатков.ВыбратьСтроки();
	Пока ТаблОстатков.ПолучитьСтроку() = 1 Цикл
	    Если ТаблОстатков.Количество <> 0 Тогда
	        
			ТекДоговор = ТаблОстатков.Договор;
			ТаблицаФормы.НоваяСтрока();
			ТаблицаФормы.Комитент       = ТекДоговор.Владелец;
			ТаблицаФормы.Остаток        = ТаблОстатков.Количество;
			ТаблицаФормы.Единица        = СокрЛП(ОбъектАнализа.БазоваяЕдиница);
			ТаблицаФормы.Цена           = глФРМ(ТаблОстатков.ПродСтоимость/ ТаблОстатков.Количество);
			ТаблицаФормы.Валюта         = СокрЛП(ТекДоговор.ВалютаВзаиморасчетов);
			ТаблицаФормы.Объект         = ТаблОстатков.ДокПродажи;
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоПартиямПринятым()

//******************************************************************************
// ЗаполнитьСтрокиТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет строки таблицы формы.
//
Процедура ЗаполнитьСтрокиТаблицы()
    
ТаблицаФормы.УдалитьСтроки();	
Если ПустоеЗначение(ОбъектАнализа) = 0 Тогда
    
	СпособПоказа = ОстаткиПо.ПолучитьЗначение(ОстаткиПо.ТекущаяСтрока());
	
	Если СпособПоказа = "складам" Тогда
		ЗаполнитьПоСкладам();
	ИначеЕсли СпособПоказа = "фирмам" Тогда    
		ЗаполнитьПоФирмам();
	ИначеЕсли СпособПоказа = "складам и фирмам" Тогда    
		ЗаполнитьПоСкладамИфирмам();
	ИначеЕсли СпособПоказа = "юр.лицам" Тогда    
		ЗаполнитьПоЮрЛицам();
	ИначеЕсли СпособПоказа = "упр. аналитикам" Тогда    
		ЗаполнитьПоУпрАналитикам();
	ИначеЕсли СпособПоказа = "партиям в наличии" Тогда    
		ЗаполнитьПоПартиям();
	ИначеЕсли СпособПоказа = "партиям, отданным на реализацию" Тогда
		ЗаполнитьПоПартиямОтданным();
	ИначеЕсли СпособПоказа = "партиям, принятым на реализацию" Тогда
		ЗаполнитьПоПартиямПринятым();
	КонецЕсли;

КонецЕсли;	
	
	
КонецПроцедуры // ЗаполнитьСтрокиТаблицы()

//******************************************************************************
// СформироватьИнформационнуюСтроку()
//
// Параметры:
//  Нет
//
//	Возвращаемое значение:
//  Нет
//
// Описание:
//  Формирует текст информационной строки формы. 
//
Функция СформироватьИнформационнуюСтроку()
	Перем ИнфСтрока;

	Если ТипЗначения(КонтСправочника) = 100 Тогда
		ТекЭлемент = КонтСправочника.ТекущийЭлемент();
		Если ТекЭлемент <> ОбъектАнализа Тогда
			ОбъектАнализа = ТекЭлемент; 
			ЗаполнитьСтрокиТаблицы();
		КонецЕсли;
		
		Если ПустоеЗначение(ОбъектАнализа) = 1 Тогда
			// не выбран элемент
			ИнфСтрока = "";
		Иначе
		
			Если ОбъектАнализа.ЭтоГруппа() = 0 Тогда
			
				ИнфСтрока = СокрЛП(ОбъектАнализа.ПолнНаименование) +
			    	        ?(ПустоеЗначение(ОбъектАнализа.Артикул) = 0, "  Артикул: " + СокрЛП(ОбъектАнализа.Артикул), "") +
		    	    	    ?(ПустоеЗначение(ОбъектАнализа.Комментарий) = 0, "  Комментарий: " + СокрЛП(ОбъектАнализа.Комментарий),	"");
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	Возврат ИнфСтрока;
	
КонецФункции // СформироватьИнформационнуюСтроку()                              

//******************************************************************************
// ПриДвойномЩелчкеНаТаблице()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Таблица значений формы
// 
// Описание:
//  При двойном щелчке на таблице значений открывает форму заданного объекта, если он определен
//
Процедура ПриДвойномЩелчкеНаТаблице()
	Перем Конт;
	
	Позиция	= ТаблицаФормы.ТекущаяСтрока();
	Если Позиция= 0 Тогда 
		Возврат 
	КонецЕсли;
	                              
	Попытка
		Конт = ТаблицаФормы.ПолучитьЗначение(Позиция, "Объект");
	Исключение КонецПопытки;

    ОткрытьФормуМодально(Конт);
	
	// Могли поменять отображаемую информацию
	ОбъектАнализа = "";
	СформироватьИнформационнуюСтроку();
	
	ТаблицаФормы.ТекущаяСтрока(Позиция);
	
	
	
КонецПроцедуры // ПриДвойномЩелчкеНаТаблице()

//******************************************************************************
// ПриИзмененииОстаткиПо()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  При изменении текущей строки в списке ОстаткиПо
// 
// Описание:
//  При изменении способа показа остатков вызывает процедуры, перезаполняющие таблицу значений
//
Процедура ПриИзмененииОстаткиПо()
	
	ЗаполнитьКолонкиТаблицы();
	ЗаполнитьСтрокиТаблицы();
	
КонецПроцедуры // ПриИзмененииОстаткиПо()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	    
	КонтСправочника = Форма.Параметр;
	Если ПустоеЗначение(КонтСправочника) = 1 Тогда
		Предупреждение("Данная обработка вызывается из других модулей конфигурации",60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ОстаткиПо.УдалитьВсе();                             
	ОстаткиПо.ДобавитьЗначение("складам");
	ОстаткиПо.ДобавитьЗначение("фирмам");
	ОстаткиПо.ДобавитьЗначение("складам и фирмам");
	ОстаткиПо.ДобавитьЗначение("юр.лицам");
	ОстаткиПо.ДобавитьЗначение("упр. аналитикам");
	ОстаткиПо.ДобавитьЗначение("партиям в наличии");
	ОстаткиПо.ДобавитьЗначение("партиям, отданным на реализацию");
	ОстаткиПо.ДобавитьЗначение("партиям, принятым на реализацию");
	ТекСтрока = ВосстановитьЗначение("СпособПоказаОстатковТМЦ");
	ОстаткиПо.ТекущаяСтрока(Макс(1,ТекСтрока));
	
	// Заполним таблицу значений формы
	ПриИзмененииОстаткиПо();                                          
	
КонецПроцедуры // ПриОткрытии() 

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии ()
	СохранитьЗначение("СпособПоказаОстатковТМЦ", ОстаткиПо.ТекущаяСтрока());
КонецПроцедуры // ПриЗакрытии ()
