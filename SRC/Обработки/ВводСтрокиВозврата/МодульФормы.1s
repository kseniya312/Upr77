Перем Фирма, Метод, Склад;
Перем внКонтекст;
Перем Номенклатура,Единица, Партия;
                      
//******************************************************************************
// УправлениеВидимостью()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  ВидСтатус.
//
// Описание:
//  Для случая учета по среднему надо отключать реквизиты партии.
//
Процедура УправлениеВидимостью()
	     
	Если (Метод <> Перечисление.МетодыРасчетаСебестоимости.FIFO)
	   и (Метод <> Перечисление.МетодыРасчетаСебестоимости.LIFO)
	   и (ВидСтатус <> глСП.Т_Принятый)
	   Тогда  
	    Форма.ИспользоватьСлой("Основной,НетПартии");
	Иначе
	   	Форма.ИспользоватьСлой("Основной,Партия");
	КонецЕсли;
	
КонецПроцедуры // УправлениеВидимостью()
                                      
//******************************************************************************
// ВыдатьПодсказкуОСреднем()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Текст подсказки.
//
// Вызывается из формул элементов диалога:
//  Текстовое поле в диалоге обработки.
//
// Описание:
//  Возвращает текст подсказки пользователю о ведении партионного учета
// при принятом методе формирования себестоимости "По среднему".
//
Функция ВыдатьПодсказкуОСреднем()
	
	Возврат ("Для юр. лица """+Фирма.ЮрЛицо.Наименование+""" установлен 
	| метод расчета себестоимости ТМЦ ""По среднему"". Информацию о поставщике
	| задавать не требуется.");
	
КонецФункции // ВыдатьПодсказкуОСреднем()
                                                   

//******************************************************************************
// ПоКнопкеОК()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопка "ОК".
//
// Описание:
//  Производит запись в список возврата выбранные параметры партии
//
Процедура ПоКнопкеОК()    
	
	Перем Описание, ФлагОшибки;
	
	// провека заполнение обязательных полей
	ФлагОшибки = 1;
	Описание = "Не заполнено поле ";
	
	Если ПустоеЗначение(ВидСтатус)=1 Тогда
		Описание = Описание + "'Вид (Статус)'";
		Активизировать("ВидСтатус");
		
	ИначеЕсли (ВидСтатус = глСП.Т_Принятый) 
	        и (ПустоеЗначение(Партия) = 1) 
		    Тогда
		Описание = Описание + "'Партия'";
		Активизировать("Партия");
		
	ИначеЕсли (ВидСтатус = глСП.Т_Принятый) 
	        и (ПустоеЗначение(Договор) = 1) 
			Тогда
		Описание = "В выбранной партии отсутствует информация о поставщике и договоре";
		Активизировать("Партия");
	Иначе
		ФлагОшибки = 0;
	КонецЕсли;
	
	Если ФлагОшибки = 1 Тогда
	    Предупреждение(Описание, 60);
		Возврат;
	КонецЕсли;
	
	Форма.Параметр.Установить("Партия",           Партия);
	Форма.Параметр.Установить("ВидСтатус",        ВидСтатус);
	Форма.Параметр.Установить("СебестоимостьЦена",СебестоимостьЦена);
	Форма.Параметр.Установить("СтатусВозврата",   1);
	                                                     
	Форма.Закрыть();
	
КонецПроцедуры // ПоКнопкеОК()

//******************************************************************************
// ПолучитьЦенуПартии(Партия)
//
// Параметры:
//  Партия - элемент справочника "Партии"
//
// Возвращаемое значение:
//  
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Возвращает цену в рублях выбранной партии (анализируя приходный документ).
//
Функция ПолучитьЦенуПартии(СпрПартия, ВыбВидСтатус)
	      
	ПрихДок = СпрПартия.ПриходныйДокумент;
	Если (ПустоеЗначение(ПрихДок) = 1) Тогда
		Возврат 0;
	КонецЕсли;
	
	РегПартии = СоздатьОбъект("Регистр.ПартииНаличие");
	РегПартии.ВыбратьДвиженияДокумента(ПрихДок);
	Пока РегПартии.ПолучитьДвижение()=1 Цикл

		Если (РегПартии.Приход=1) и (РегПартии.Партия = СпрПартия) Тогда
			
			Возврат ?(РегПартии.Количество = 0,0,(РегПартии.СуммаБезНДС/РегПартии.Количество));
				
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0; // не нашли...
	
КонецФункции // ПолучитьЦенуПартии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
		Предупреждение("Форма вызывается только для вызова из формы документа ""Возврат от покупателя""!", 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	 
	внКонтекст	= Форма.Параметр.Получить("Контекст");
	Фирма		= Форма.Параметр.Получить("Фирма");   
	Склад       = Форма.Параметр.Получить("Склад");  
	Номенклатура= Форма.Параметр.Получить("Номенклатура");
	Единица     = Форма.Параметр.Получить("Единица");
	Партия		= Форма.Параметр.Получить("Партия");
	ВыбВидСтатус= Форма.Параметр.Получить("ВидСтатус");  
	СебестоимостьЦена = Форма.Параметр.Получить("СебестоимостьЦена");  
	    
	ПолеПартия	= глПредставлениеПартии(Партия);
	Поставщик 	= Партия.Поставщик;
	Договор   	= Партия.ДоговорПоставщика;
	
	Если ПустоеЗначение(ВыбВидСтатус) = 1 Тогда
		ВыбВидСтатус = Перечисление.ВидыТМЦ.Товар;
	КонецЕсли;
	Форма.ВидСтатус.НазначитьТип("Перечисление." + ВыбВидСтатус.Вид());
	ВидСтатус = ВыбВидСтатус;
			
	Метод = Фирма.Юрлицо.МетодРасчетаСебестоимости.Получить(внКонтекст.ДатаДок);
	
	Форма.Параметр.Установить("СтатусВозврата"	, 0);
	
	УправлениеВидимостью();
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(Элемент, ФлагПродолжения)
	
	Если Элемент =  "ВидСтатус" Тогда
		
		СписокВидов = глСоздатьСписокЗначПеречисления("ВидыТМЦ", "Товар,Продукция,Материал");
		
		СписокВидов.ДобавитьЗначение(глСП.Т_Принятый);
		ВыбВидСтатус = ВидСтатус;
		
		Если СписокВидов.ВыбратьЗначение(ВыбВидСтатус,,,,2) = 1 Тогда
			Форма.ВидСтатус.НазначитьТип("Перечисление." + ВыбВидСтатус.Вид());
			ВидСтатус = ВыбВидСтатус;
		КонецЕсли;
		
		ФлагПродолжения = 0;
	
	ИначеЕсли Элемент =  "ПолеПартия" Тогда
		СпрПартии = СоздатьОбъект("Справочник.Партии");
		СпрПартии.ИспользоватьВладельца(Номенклатура);  
		
		// формируем список параметров для передачи в форму
		Параметр	= СоздатьОбъект("СписокЗначений");
		Параметр.ДобавитьЗначение(Фирма			, "Фирма");	
		Параметр.ДобавитьЗначение(Склад			, "Склад");	
		Параметр.ДобавитьЗначение(Номенклатура	, "Номенклатура");	
		Параметр.ДобавитьЗначение(Партия		, "Партия");	
		Параметр.ДобавитьЗначение(внКонтекст    , "Контекст");	
	
		// открываем форму 
		ОткрытьФормуМодально("Справочник.Партии.ДляВыбораПартии", Параметр);
	
		// получаем параметр возврата.
		Если Параметр.Получить("СтатусВозврата") = 0 Тогда
			Возврат;
		КонецЕсли;
	
		Партия	          = Параметр.Получить("Партия");
		ПолеПартия        = глПредставлениеПартии(Партия);
		Поставщик         = Партия.Поставщик;
		Договор           = Партия.ДоговорПоставщика;
		СебестоимостьЦена = ПолучитьЦенуПартии(Партия, ВидСтатус);
		СебестоимостьЦена = СебестоимостьЦена * Единица.Коэффициент;
			
		УправлениеВидимостью();	
	КонецЕсли;    
	
КонецПроцедуры // ПриНачалеВыбораЗначения()
