Перем Парам;	//Параметр формы
Перем РознПозиция;
перем КодР, КолвоР, ОстатокР, ОборотР, НазваниеР;

функция ЗаполниПоПозиции(КодР, КолвоР, нормКод)
	спр=СоздатьОбъект("Справочник.Номенклатура");	//Запишем в ТМП данные по позициям номенклатуры
	ТМП=создатьОбъект("СписокЗначений");

	//если КодР=0 тогда 
		//спр.ПорядокКодов();
		спр.НайтиПоКоду(нормКод,0);
//		спр.НайтиПоКоду("00004462",0);
		ТМП.ДобавитьЗначение(спр.ТекущийЭлемент());
	//Иначе
	//	спр.ВыбратьЭлементыПоРеквизиту("КодРозницы",КодР,0);	//учавствующим в отборе
	//	пока спр.ПолучитьЭлемент()=1 цикл
	//		ТМП.ДобавитьЗначение(спр.ТекущийЭлемент());
	//	КонецЦикла;
	//КонецЕсли;
	Рез=1;
	
	//Установим отборку по регистру ОстатокТМЦ и вычленим все остатки по основному складу и выбраным позициям товара
	Рег=СоздатьОбъект("Регистр.ОстаткиТМЦ");
	ТМП2=СоздатьОбъект("ТаблицаЗначений");
	
	Рег.УстановитьФильтр(,,Константа.ОсновнойСклад,,);
//	Рег.УстановитьЗначениеФильтра("Номенклатура",ТМП,2);
	Рег.ВыбратьИтоги();
	Рег.ВыгрузитьИтоги(ТМП2);	//Загнали все итоги в ТЗ, на ТА
	рег="";
	
	//*** Тоже самое, но по 2-му складу
	Рег=СоздатьОбъект("Регистр.ОстаткиТМЦ");
	ТМП3=СоздатьОбъект("ТаблицаЗначений");
	
	Рег.УстановитьФильтр(,,Константа.ДополнительныйСклад,,);
//	Рег.УстановитьЗначениеФильтра("Номенклатура",ТМП,2);
	Рег.ВыбратьИтоги();
	Рег.ВыгрузитьИтоги(ТМП3);	//Загнали все итоги в ТЗ, на ТА
	рег="";
	
	Кол=ТМП.РазмерСписка();
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По Кол Цикл
		ТЗ.НоваяСтрока();
		ТЗ.Номер=СчетчикЦикла;
		//Для склада 1
		Х=ПолучитьПустоеЗначение(Х);У=ПолучитьПустоеЗначение(У);
		тов=ТМП.ПолучитьЗначение(СчетчикЦикла);
		Если ТМП2.НайтиЗначение(тов,Х,У)=1 тогда
			ТЗ.КолСкладТест=ТМП2.ПолучитьЗначение(Х,4);
		КонецЕсли;
		//Для склада 2
		Х=ПолучитьПустоеЗначение(Х);У=ПолучитьПустоеЗначение(У);
		тов=ТМП.ПолучитьЗначение(СчетчикЦикла);
		Если ТМП3.НайтиЗначение(тов,Х,У)=1 тогда
			ТЗ.КолСкладТест2=ТМП3.ПолучитьЗначение(Х,4);
			ТЗ.КолСклад2=0;
		КонецЕсли;
		ТЗ.КолСклад=0;
		ТЗ.КолСклад2=0;
		ТЗ.Номенклатура=тов;
		ТЗ.Код=Тов.Код;
		ТЗ.Производитель=Тов.Производитель;
		ТЗ.Единица=тов.базоваяЕдиница;
		ТЗ.КолЗаказ=0;
	КонецЦикла;
    
	ТМП="";ТМП2="";ТМП3="";	//Очистим ТЗ от мусора
	
	ТЗ.ТекущаяКолонка("КолСклад");
	ТЗ.ТекущаяСтрока(ТЗ.КоличествоСтрок());
	РознПозиция="В рознице: 1. Код("+сокрЛП(КодР)+"), 2. Название("+НазваниеР+"), 3. Кол-во заказа("+сокрЛП(КолвоР);
	РознПозиция=РознПозиция+"), 4.Кол-во оборота("+ ОборотР+"), 5.Кол-во остатка в рознице("+ ОстатокР+").";
	
	//Начинаем автоматически списывать, то, что необходимо.
	
	ТЗ.ВыбратьСтроки();тест=0;
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
	   //Если только одна строка, то ...
		Если ТЗ.КоличествоСтрок()=1 тогда
			если (ТЗ.КолСкладТест=0) и (ТЗ.КолСкладТест2=0) тогда
	   			ТЗ.КолЗаказ=КолвоР;
	   			тест=1;
	   		КонецЕсли;
		КонецЕсли;	//Всего одна строка
	КонецЦикла;
	Если Тест=1 тогда		//Тогда можно закидывать данные в общую базу
		ТЗ.ВыбратьСтроки(); 	
		ТЗ.ПолучитьСтроку();	//Позиционирование на строке заказа
		
		Форма.Параметр.УдалитьВсе();
		Форма.Параметр.ДобавитьЗначение("==","Начало");
		Форма.Параметр.ДобавитьЗначение(ТЗ.Код,"Код");
		Форма.Параметр.ДобавитьЗначение(ТЗ.Номенклатура,"Номенклатура");
		Форма.Параметр.ДобавитьЗначение(ТЗ.Производитель,"Производитель");
		Форма.Параметр.ДобавитьЗначение(ТЗ.Единица,"Единица");
		Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад,"КолСклад");
		Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад2,"КолСклад2");
		Форма.Параметр.ДобавитьЗначение(ТЗ.КолЗаказ,"КолЗаказ");
		Рез=2;
	КонецЕсли;

	Возврат Рез;	
КонецФункции
	
Процедура ПриОткрытии()
	кодР		= Форма.Параметр.Получить("КодР");
	нормКод		= Форма.Параметр.Получить("нормКод");
	названиеР	= Форма.Параметр.Получить("НазваниеР");
	КолвоР		= Форма.Параметр.Получить("КолвоР");
	ОстатокР	= Форма.Параметр.Получить("ОстатокР");
	ОборотР		= Форма.Параметр.Получить("ОборотР");
	
	//Если (ПустоеЗначение(Форма.Параметр)=1) тогда// или (ПустоеЗначение(КодР)=1) тогда
	//	сообщить("Эта обработка может выполняться только в контексте других!");
	//	Форма.Параметр.ДобавитьЗначение("Ошибка");
	//	форма.закрыть();
	//конецЕсли;
	
	//Заполняем ТЗ
	ТЗ.НоваяКолонка("Номер","число",3,0,"N",4);
	ТЗ.НоваяКолонка("Код","строка",10,0,"Код",10);
	ТЗ.НоваяКолонка("Номенклатура","Справочник.Номенклатура",,,"Номенклатура",50);	//Подбор по коду, а не по ID
	ТЗ.НоваяКолонка("Производитель","Справочник.Производители",,,"Производитель",15);
	ТЗ.НоваяКолонка("Единица","Справочник.Единицы",,,"Ед.",7);
	ТЗ.НоваяКолонка("КолСклад","число",15,2,"Пр(склад 1)",9);
	ТЗ.НоваяКолонка("КолСклад2","число",15,2,"Пр(склад 2)",9);
	ТЗ.НоваяКолонка("КолЗаказ","число",15,2,"Заказ поставщикам",9);
	ТЗ.НоваяКолонка("КолСкладТест","число",15,2,"На складе1",9);
	ТЗ.НоваяКолонка("КолСкладТест2","число",15,2,"На складе2",9);
//	ТЗ.ВидимостьКолонки("КолСкладТест",0);
	
	
	зап=ЗаполниПоПозиции(КодР, КолвоР, нормКод);	//Заполним и запомним результат выполнения
	Если зап=-1 тогда
		сообщить("При расчёте остатков произошла ошибка!","!!!");
		Форма.Параметр.ДобавитьЗначение("Ошибка");
		Форма.Закрыть(0);
	иначеесли зап=2 тогда	//В параметр уже загнали данные на возврат, вылетаем обратно
		Форма.Закрыть(0);
	конецЕсли;
		
КонецПроцедуры //ПриОткрытии()

//*******************************************
Процедура Выполнить()
    //Тут проверям правильность заполнения данных, внесённых вручную и указываем на ошибки
	//если все ОК, тогда переносим позиции в Документ

	Форма.Параметр.УдалитьВсе();	//Чистим контекст передачи
	ТЗ.ВыбратьСтроки();
	тест=1;
	
	//Общая проверка
	Если (тз.итог("КолСклад")+тз.итог("КолСклад2"))>КолвоР тогда
		а=вопрос("Внимание!Вы хотите передать на склад больше чем было заказано. Продолжить?",4,15);
		Если а=7 Тогда
		    тест=0;
		иначе тест=1;
		КонецЕсли;
	КонецЕсли;
	Если (тз.итог("КолСклад")>тз.итог("КолСкладТест")) или (тз.итог("КолСклад2")>тз.итог("КолСкладТест2")) Тогда
	    а=Вопрос("Внимание! Вы пытаетесь списать со склада больше чем допустимо! Продолжить?",4,15);
		Если а=7 Тогда
		    тест=0;
		иначе тест=1;
		КонецЕсли;
	КонецЕсли;
	
	
	Пока (тз.получитьстроку()=1) и (тест=1) Цикл	//Отбираем, чего будем переносить в МнЧ
		Если (ТЗ.КолСклад+ТЗ.КолСклад2+ТЗ.КолЗаказ<>0) тогда	//Если ничего не заказывали, то и не переносим
			Форма.Параметр.ДобавитьЗначение("==","Начало");
			Форма.Параметр.ДобавитьЗначение(ТЗ.Код,"Код");
			Форма.Параметр.ДобавитьЗначение(ТЗ.Номенклатура,"Номенклатура");
			Форма.Параметр.ДобавитьЗначение(ТЗ.Производитель,"Производитель");
			Форма.Параметр.ДобавитьЗначение(ТЗ.Единица,"Единица");
			Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад,"КолСклад");
			Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад2,"КолСклад2");
			Форма.Параметр.ДобавитьЗначение(ТЗ.КолЗаказ,"КолЗаказ");
		КонецЕсли;
		тест=1;
	КонецЦикла;
	
	Если тест=1 тогда
		Форма.Закрыть(0);
	КонецЕсли;
	
КонецПроцедуры  

//*******************************************
процедура Отмени()
	Если Вопрос("Если вы отмените, то все значения подбора будут потеряны!",4,10)=6 тогда
		Форма.Параметр.ДобавитьЗначение("Ошибка");
		форма.закрыть();
	конецЕсли;
Конецпроцедуры

//Очистит количественные колонки ТЗ
Процедура Обнулить()
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.получитьСтроку()=1 Цикл
	    ТЗ.колСклад=0;
	    ТЗ.колСклад2=0;
		ТЗ.КолЗаказ=0;
	КонецЦикла;
КонецПроцедуры


//Позволяет изменять данные в ТЗ
Процедура Пересчет()
	кол=ТЗ.ТекущаяКолонка();
	стр=ТЗ.ТекущаяСтрока();
	Если ((кол="КолСклад") или (кол="КолСклад2")) или (кол="КолЗаказ") тогда
		деф=ТЗ.получитьЗначение(стр,кол);
		если ввестиЧисло(деф, "Введите значение",15,2,10)=1 тогда
			ТЗ.УстановитьЗначение(стр,кол,деф);
		КонецЕсли;
	конецЕсли;
конецпроцедуры

Процедура Пропустить()
    
	Форма.Закрыть(0);    
КонецПроцедуры

	//
	////Начинаем автоматическое списание
	//ТЗ.ВыбратьСтроки();
	//Пока ТЗ.получитьСтроку()=1 Цикл                                                                      
	//	если ((ТЗ.КолСкладТест>=КолвоР) и (ТЗ.КоличествоСтрок()=1)) или 
	//	((ТЗ.итог("КолСкладТест")=ТЗ.КолСкладТест) и (ТЗ.КолСкладТест>=КолвоР))
	//	тогда
	//		ТЗ.КолСклад=КолвоР; тест=1;
	//	иначеесли ((ТЗ.КолСкладТест=0) и (ТЗ.КоличествоСтрок()=1)) тогда
	//		ТЗ.КолЗаказ=КолвоР; тест=1;
	//	конецЕсли;
	//	Если Тест=1 тогда
	//		Форма.Параметр.УдалитьВсе();
	//		Форма.Параметр.ДобавитьЗначение("==","Начало");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Код,"Код");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Номенклатура,"Номенклатура");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Производитель,"Производитель");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Единица,"Единица");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад,"КолСклад");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад,"КолСклад2");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолЗаказ,"КолЗаказ");
	//		
	//		Рез=2;
	//		прервать;
	//	КонецЕсли;
	//КонецЦикла;
 
    
    
    //
    //
    //	Пока ТЗ.получитьстроку()=1 цикл
	//	Если (ТЗ.КолСклад>ТЗ.КолСкладТест) и (ТЗ.КолСклад>0) тогда
	//		сообщить("Вы пытаетесь списать со склада по позиции: "+ТЗ.номер+", больше чем есть на складе!");
	//		тест=0;возврат;
	//	иначе тест=1;
	//	КонецЕсли;
	//	
	//	Если (Тз.КолСклад<0) или (ТЗ.КолЗаказ<0) тогда
	//		тест=0;
	//	конецЕсли;
	//	
	//	Если (Тест=1) и (ТЗ.КолСклад+ТЗ.КолЗаказ<>0) тогда
	//		Форма.Параметр.ДобавитьЗначение("==","Начало");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Код,"Код");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Номенклатура,"Номенклатура");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Производитель,"Производитель");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Единица,"Единица");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолСклад,"КолСклад");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолЗаказ,"КолЗаказ");
	//	иначеесли (ТЗ.КолСклад<0) и (ТЗ.КолСклад<>0) тогда
	//		Форма.Параметр.ДобавитьЗначение("==","Начало");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Код,"Код");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Номенклатура,"Номенклатура");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Производитель,"Производитель");
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.Единица,"Единица");
	//		Форма.Параметр.ДобавитьЗначение(0,"КолСклад");	//Т.к. нам "-"не нужны
	//		Форма.Параметр.ДобавитьЗначение(ТЗ.КолЗаказ,"КолЗаказ");
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Если (ТЗ.итог("КолСклад")+ТЗ.итог("КолЗаказ"))>КолвоР Тогда
	//    если вопрос("Вы хотите передать больше чем необходимо. Вы уверены, что хотите это сделать?",4)=6 тогда
	//		тест=1;
	//	иначе 
	//		тест=0;
	//	конецЕсли;
	//КонецЕсли;
