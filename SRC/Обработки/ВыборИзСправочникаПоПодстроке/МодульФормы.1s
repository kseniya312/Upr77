////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ВидСправочника;             // Вид справочника

Перем СписокВведенныхПодстрок;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ПоискПоПодстроке()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Поле ввода подтстроки поиска
// 
// Описание:
//  Производит поиск элементов по подстроке, заполняя найденными значениями 
//  таблицу значений формы обработки.
//
Процедура ПоискПоПодстроке()
	
	Элементы.УдалитьСтроки();
	РеквизитПоиска = СокрЛП(СписокРеквизитовПоиска.ПолучитьЗначение(СписокРеквизитовПоиска.ТекущаяСтрока()));
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗапроса ="
	|ТекущийЭлемент = Справочник.*.ТекущийЭлемент;" + 
	РеквизитПоиска + " = Справочник.*." + РеквизитПоиска + ";
	|Группировка ТекущийЭлемент Без Упорядочивания Без Групп;
	|Условие(Найти(ВРег(" + РеквизитПоиска + "),ВРег(ПодСтрокаПоиска))>0);
	|Без итогов;";           
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"*",ВидСправочника);
	
 	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	Инд=0;
	Состояние("Обработано ");
	Пока Запрос.Группировка() = 1 Цикл
		Инд=Инд+1;
		Если Инд%100=0 Тогда
		    Состояние("Обработано "+Инд);
		КонецЕсли;
		
		ТекЭлемент = Запрос.ТекущийЭлемент;
		Элементы.НоваяСтрока();
		Элементы.Элемент      = ТекЭлемент;
		
		// Заполним колонки
		СчетчикЦикла = 0;
		Для СчетчикЦикла = 1 По СписокРеквизитовПоиска.РазмерСписка() Цикл
			ТекРеквизит   =  СокрЛП(СписокРеквизитовПоиска.ПолучитьЗначение(СчетчикЦикла));
			Элементы.УстановитьЗначение(Элементы.НомерСтроки, ТекРеквизит, СокрЛП(ТекЭлемент.ПолучитьАтрибут(ТекРеквизит)));
		КонецЦикла;
		
	КонецЦикла;
	
	Состояние("Обработано "+Инд);
	
	Форма.Открыть.Доступность(?(Элементы.КоличествоСтрок()>0,1,0));
	Форма.Выбрать.Доступность(?(Элементы.КоличествоСтрок()>0,1,0));
	
	// попытаемся найти подстроку в списке
	Поз	= СписокВведенныхПодстрок.НайтиЗначение(ПодСтрокаПоиска);
	Если Поз > 0 Тогда
	    // сместим значение в начало списка
		СписокВведенныхПодстрок.СдвинутьЗначение(1 - Поз, Поз);
	Иначе
		// добавим подстроку в начало списока
		СписокВведенныхПодстрок.ВставитьЗначение(1, ПодСтрокаПоиска);
		
		Пока СписокВведенныхПодстрок.РазмерСписка() > 15 Цикл
		    СписокВведенныхПодстрок.УдалитьЗначение(СписокВведенныхПодстрок.РазмерСписка());
		КонецЦикла;
		    
	КонецЕсли;
	
КонецПроцедуры // ПоискПоПодстроке()

//******************************************************************************
// ОбработкаВыбора()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  по двойному клику на таблице значений формы
//  по кнопке "Выбор"
// 
// Описание:
//  Обрабатывается выбор строки таблицы формы.
//
Процедура ОбработкаВыбора()
	
	Если Элементы.КоличествоСтрок() > 0 Тогда
	    
		Если Элементы.ТекущаяСтрока() = 0 Тогда      
			Элементы.ТекущаяСтрока(1);
		КонецЕсли;
		
		Если Форма.РежимВыбора()=0 Тогда       
			Если Форма.МодальныйРежим()=1 Тогда
			    Форма.Параметр=Элементы.Элемент;   // В модальном режиме выбранное значение передается через параметр формы
			КонецЕсли;
		    Форма.Закрыть();
		Иначе
			Форма.ВыполнитьВыбор(Элементы.Элемент); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()


//******************************************************************************
// ПоКнопкеОткрыть()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  по кнопке "Открыть".
// 
// Описание:
//  Открывает форму элемента справочника, соответствующую текущей строке таблицы значений формы.
//
Процедура ПоКнопкеОткрыть()
	Если Элементы.ТекущаяСтрока()>0 Тогда      
		ОткрытьФорму(Элементы.Элемент);
	КонецЕсли;
КонецПроцедуры // ПоКнопкеОткрыть()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	      
	СписокПараметров = Форма.Параметр;
	
	Если ПустоеЗначение(СписокПараметров) = 1 Тогда
		Предупреждение("Данная обработка вызывается из других процедур конфигурации",60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	// Считаем параметры
	ВидСправочника  = СписокПараметров.Получить("Вид");
	СписокПолей     = СокрЛП(СписокПараметров.Получить("СписокПолей"));
	ПодСтрокаПоиска = СокрЛП(СписокПараметров.Получить("ПодстрокаПоиска"));
	
	МДСправочник = Метаданные.Справочник(Строка(ВидСправочника));
	Если МДСправочник.Выбран()=0 Тогда
	    Предупреждение("Не задан справочник", 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли; 
	
	//Сформируем список реквизитов для поиска
	СписокРеквизитовПоиска.УдалитьВсе();
	СписокРеквизитовПоиска.ДобавитьЗначение("Код");
	СписокРеквизитовПоиска.ДобавитьЗначение("Наименование");
	Если ПустоеЗначение(СписокПолей) = 0 Тогда // есть доп. поля поиска
		Разделитель = ",";
		Поз = Найти(СписокПолей, Разделитель);
		Пока 0 < Поз Цикл     
			ТекРеквизит   = СокрП(Лев(СписокПолей, Поз-1));
			Представление = МДСправочник.Реквизит(ТекРеквизит).Представление();  
			СписокРеквизитовПоиска.ДобавитьЗначение(ТекРеквизит, Представление);
			СписокПолей = СокрЛ(Сред(СписокПолей, Поз+1));
			Поз = Найти(СписокПолей, Разделитель);
		КонецЦикла;
		
		// Последний не добавили
		ТекРеквизит = СписокПолей;
		Представление = МДСправочник.Реквизит(ТекРеквизит).Представление();  
		СписокРеквизитовПоиска.ДобавитьЗначение(ТекРеквизит, Представление);
	КонецЕсли;

	// Заполним колонки. Код и Наименвание - особые, поэтому заполним отдельно.
	Элементы.НоваяКолонка("Элемент"             ,"Справочник");
	Элементы.НоваяКолонка("Код"                 ,"Строка"    ,,,                     ,10,,?(МДСправочник.ТипКода="Текстовый",1,2));
	Элементы.НоваяКолонка("Наименование"        ,"Строка"    ,,, "Найденные элементы",50);
	
	// Добавим дополнительные колонки (если есть)
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 3 По СписокРеквизитовПоиска.РазмерСписка() Цикл  // код и наименование уже добавили
		ТекРеквизит   =  СокрЛП(СписокРеквизитовПоиска.ПолучитьЗначение(СчетчикЦикла));
		Представление = МДСправочник.Реквизит(ТекРеквизит).Представление();  
		Длина         = МДСправочник.Реквизит(ТекРеквизит).Длина; 
		Элементы.НоваяКолонка(ТекРеквизит       ,"Строка"    ,,, Представление       ,Длина);
	КонецЦикла;
	
	Элементы.ВидимостьКолонки("Элемент",0);
	
	// Восстановим прошлое значение поиска
	СписокРеквизитовПоиска.ТекущаяСтрока(Макс(1, ВосстановитьЗначение("НомерРеквизитаПоиска" + ВидСправочника)));
	Форма.Заголовок(МДСправочник.Представление() + " (поиск элементов по подстроке)", 0);
	
	Если МДСправочник.СпособРедактирования="ВСписке" Тогда
		Форма.Открыть.Видимость(0);
	КонецЕсли;
	
	// Если передали подстроку, то пытаемся сразу найти
	Если ПустоеЗначение(ПодСтрокаПоиска) = 0  Тогда
		ПоискПоПодстроке();       
		Если Элементы.КоличествоСтрок()= 1 Тогда // искали один элемент и уже нашли, форму можно не открвать
		    ОбработкаВыбора();
			СтатусВозврата(0);
			
		ИначеЕсли Элементы.КоличествоСтрок() > 1 Тогда	// нашли больше одного
			Активизировать("Элементы");
		КонецЕсли;
	КонецЕсли;
	
	СписокВведенныхПодстрок	= ВосстановитьЗначение("СписокПодстрокПоиска");
	Если ТипЗначенияСтр(СписокВведенныхПодстрок) <> "СписокЗначений" Тогда
	    СписокВведенныхПодстрок = СоздатьОбъект("СписокЗначений");
	Иначе 
		// если не передали подстроку, то по умолчанию делаем прошлое введенное значение.
		Если СписокВведенныхПодстрок.РазмерСписка() > 0 Тогда
			ПодСтрокаПоиска = СписокВведенныхПодстрок.ПолучитьЗначение(1);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	Перем ВыбПодстрока;
	
	Если "ПодСтрокаПоиска" = ИдентЭлемДиалога Тогда
		ФлагСтандОбр	= 0;
		
		Если СписокВведенныхПодстрок.ВыбратьЗначение(ВыбПодстрока, , , , 2) = 1 Тогда
			ПодСтрокаПоиска	= ВыбПодстрока;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	// Сохраним номер реквизита поиска
	СохранитьЗначение("НомерРеквизитаПоиска" + ВидСправочника, СписокРеквизитовПоиска.ТекущаяСтрока());
	СохранитьЗначение("СписокПодстрокПоиска", СписокВведенныхПодстрок);
	
КонецПроцедуры // ПриЗакрытии()