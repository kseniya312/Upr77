////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем КонтДок;                    // Контекст формы модифицируемого документа
Перем ВидКонтДок ;                // Вид документа
Перем КонтТипЦен, КонтДатаДок, КонтВалюта, КонтКурс; // реквизиты документа (чтобы каждый раз не считывать)
Перем ЕстьЦена, ЦенаНеРозничная;  // флаги наличия ценовых реквизитов в документе (если цена розничная, то цены надо брать из регистра)
Перем ЕстьВидТМЦ;                 // флаг наличия вида ТМЦ в документе
Перем ФиксВидТМЦ;				  // ВидТМЦ всегда Перечисление.ВидыТМЦ.Товар
Перем ТовОстатки;                 // Регистр Остатки ТМЦ для расчета розничных цен
Перем МеткаЕсть, МеткиНет;        // Номера иконок пометки строки таблицы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// СуммаИтого()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Статик текста суммы итого
// 
// Описание:
//  Считает сумму позиций, добавляемых в документ
//
Функция СуммаИтого()
	
	// Если есть колонка цен, то формируем сумму итого, нет - возвращаем пустую строку
	Если ЕстьЦена = 1 Тогда
		
		Рез = 0;
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитыаем
			КонецЕсли;
			Рез = Рез + ТаблицаНоменклатуры.Цена*ТаблицаНоменклатуры.Количество;
		КонецЦикла;
		
		Возврат ?(Рез = 0, "", "Всего: " +глФРМ(Рез, КонтВалюта));  
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции // СуммаИтого()
 
//******************************************************************************
// ПриДвойномЩелчкеНаТаблице()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Таблица значений ТаблицаНоменклатуры
//
// Описание:
//  Обрабатывает двойной щелчок (нажатие клавиши "Enter") на таблице формы
//
Процедура ПриДвойномЩелчкеНаТаблице()
	
	Если ТаблицаНоменклатуры.ТекущаяСтрока() > 0 Тогда
		
		Если ТаблицаНоменклатуры.ТекущаяКолонка() = "Пометка" Тогда
			
			Если ТаблицаНоменклатуры.Пометка = МеткаЕсть Тогда
				ТаблицаНоменклатуры.Пометка = МеткиНет;
			Иначе
				ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Количество" Тогда
			
			ВремКол = ТаблицаНоменклатуры.Количество; 
			Если ВвестиЧисло(ВремКол,"Задайте количество",14,3,60) = 1 Тогда
				ТаблицаНоменклатуры.Количество = ВремКол;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Цена" Тогда
			
			// Цену даем редактировать, только если на это есть право у текущего пользователя
			Если глПолучитьПолномочие("РазрешитьРедактированиеЦенВдокументах") = 1 Тогда
				ВремЦена = ТаблицаНоменклатуры.Цена; 
				Если ВвестиЧисло(ВремЦена,"Задайте цену",14,3,60) = 1 Тогда
					ТаблицаНоменклатуры.Цена = ВремЦена;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "ВидТМЦ" Тогда
			
			ВремВид = ТаблицаНоменклатуры.ВидТМЦ; 
			Если ВвестиПеречисление(ВремВид,"Выберите Вид ТМЦ",60) = 1 Тогда
				ТаблицаНоменклатуры.ВидТМЦ = ВремВид;
			КонецЕсли;
			
		Иначе	
			ОткрытьФормуМодально(ТаблицаНоменклатуры.Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриДвойномЩелчкеНаТаблице()

//******************************************************************************
// ГрупповаяПометка(Режим)
//
// Параметры: 
//  Режим:
//   1 - пометить все
//   2 - снять пометку
//   3 - инвертировать пометку
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
// кнопки групповой пометки
//
// Описание:
//  Производит групповые действия с пометкой строк таблицы формы
//
Процедура ГрупповаяПометка(Режим)
	
	ТаблицаНоменклатуры.ВыбратьСтроки();
	
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
		
		Если Режим=1 Тогда              
			
			ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			
		ИначеЕсли Режим=2 Тогда
			
			ТаблицаНоменклатуры.Пометка = МеткиНет;
			
		ИначеЕсли Режим=3 Тогда
			
			Если ТаблицаНоменклатуры.Пометка=МеткиНет Тогда
				ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			Иначе
				ТаблицаНоменклатуры.Пометка = МеткиНет;
			КонецЕсли;                           
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры // ГрупповаяПометка()         

//******************************************************************************
// ПоКнопкеПодбор()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  По кнопке "Подбор"
//
// Описание:
//  Открывает подбор документов, состав которых надо добавить
//
Процедура ПоКнопкеПодбор()
	
	// Заполним список видов документов, которые можем копировать
	СписокВидовДок = СоздатьОбъект("СписокЗначений");
	
	// В цикле отберем все документы, у которых есть в ТЧ реквизиты Номенклатура, Единица, Количество, Коэффициент
	Для Индекс = 1 По Метаданные.Документ() Цикл   
		ВидДок = Метаданные.Документ(Индекс).Идентификатор;
			Если (глЕстьРеквизитМнЧ("Номенклатура",ВидДок) = 1)
			   и (глЕстьРеквизитМнЧ("Единица",ВидДок)  = 1 ) 
			   и (глЕстьРеквизитМнЧ("Количество",ВидДок)  = 1 ) 
			   и (глЕстьРеквизитМнЧ("Коэффициент",ВидДок)  = 1 )   Тогда
				СписокВидовДок.Добавитьзначение(ВидДок, Метаданные.Документ(Индекс).Представление());	
			КонецЕсли;	
		КонецЦикла;	
	
	ВидДок = ВосстановитьЗначение("ВидДобавитьИзДокумента");
	Если СписокВидовДок.ВыбратьЗначение(ВидДок,"Выберите вид документа",1,60) = 1 Тогда
		ОткрытьПодбор("Документ." + СокрЛП(ВидДок),,,1);
		СохранитьЗначение("ВидДобавитьИзДокумента", ВидДок);
	КонецЕсли;

КонецПроцедуры // ПоКнопкеПодбор()

//******************************************************************************
// ПоКнопкеОК()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  По кнопке "ОК"
// 
// Описание:
//  Добавляет выбранные позиции номенклатуры в документ
//
Процедура ПоКнопкеОК()
	Перем ТаблицаВыбора;
	// Надо удалить не помеченные строки и строки с нулевым количеством 
	// Сделаем это в отдельной таблице
	ТаблицаНоменклатуры.Выгрузить(ТаблицаВыбора);
	ТекСтрока = 0;
	Пока ТаблицаВыбора.НайтиЗначение(МеткиНет, ТекСтрока, "Пометка") = 1 Цикл
		 ТаблицаВыбора.УдалитьСтроку(ТекСтрока);
		 ТекСтрока = 0;
	КонецЦикла;
	ТекСтрока = 0;
	Пока ТаблицаВыбора.НайтиЗначение(0, ТекСтрока, "Количество") = 1 Цикл
		 ТаблицаВыбора.УдалитьСтроку(ТекСтрока);
		 ТекСтрока = 0;
	КонецЦикла;
	Если ТаблицаВыбора.КоличествоСтрок() > 0 Тогда
		ТекЦенаВподборе = "";
		Если ЕстьЦена = 1 Тогда
			Если ЦенаНеРозничная = 1 Тогда
				ТекЦенаВподборе = "ИзСправочника";
			Иначе
				ТекЦенаВподборе = "Розница";	
			КонецЕсли;
		КонецЕсли;
		ПараметрыПодбора = СоздатьОбъект("СписокЗначений");
		ПараметрыПодбора.ДобавитьЗначение(ЕстьВидТМЦ     , "ЕстьВидТМЦ");
		ПараметрыПодбора.ДобавитьЗначение(ТекЦенаВподборе, "ЦенаВподборе");
		ПараметрыПодбора.ДобавитьЗначение(ТаблицаВыбора  , "ТаблицаПодбора");
		Форма.ВыполнитьВыбор(ПараметрыПодбора);		
	КонецЕсли;
	Форма.Закрыть();
КонецПроцедуры // ПоКнопкеОК()

//******************************************************************************
// ПоКнопкеЗакрыть()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  По кнопке Закрыть
// 
// Описание:
//  Спрашивает, нужно ли добавлять отобранные позиции. 
//  При согласии пользователя - добавляет выбранные позиции номенклатуры в документ
//
Процедура ПоКнопкеЗакрыть()
	Если ТаблицаНоменклатуры.КоличествоСтрок() > 0 Тогда
		Если Вопрос("Перенести отобранные позиции в документ?", "Да+Нет", 60) = "Да"  Тогда
			ПоКнопкеОк();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПоКнопкеЗакрыть()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	
	КонтДок = Форма.Параметр;
	Если ПустоеЗначение(КонтДок) = 1 Тогда
		Предупреждение("Данная обработка вызывается из других процедур конфигурации.
		               |Вручную ее вызывать запрещено.",60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ВидКонтДок      = КонтДок.Вид(); 
	ЕстьЦена        = глЕстьРеквизитМнЧ("Цена", ВидКонтДок)*глЕстьРеквизитШапки("Валюта", ВидКонтДок)*глЕстьРеквизитШапки("Курс", ВидКонтДок);
	ЦенаНеРозничная = глЕстьРеквизитШапки("ТипЦен", ВидКонтДок);
	ЕстьВидТМЦ      = глЕстьРеквизитМнЧ("ВидТМЦ", ВидКонтДок);
	КонтДатаДок     = КонтДок.ДатаДок;
	
	// Заполним колонки ТЗ формы
	ТаблицаНоменклатуры.НоваяКолонка("Пометка"              ,"Число"               ,  1,  ,                                   ,  4,, );
	Если ЕстьВидТМЦ = 1 Тогда
		ТаблицаНоменклатуры.НоваяКолонка("ВидТМЦ"           ,"Перечисление.ВидыТМЦ",   ,  ,"Вид ТМЦ"                          ,   ,,2);
	КонецЕсли;
	ТаблицаНоменклатуры.НоваяКолонка("Номенклатура"         ,                      ,   ,  ,                                   , 30,, );
	ТаблицаНоменклатуры.НоваяКолонка("Количество"           ,"Число"               , 14, 3,"Кол-во"                           , 10,,2);
	ТаблицаНоменклатуры.НоваяКолонка("Единица"              ,                      ,   ,  ,"Ед."                              ,  5,,2);
	ТаблицаНоменклатуры.НоваяКолонка("Коэффициент"          ,                      ,   ,  ,"К."                               ,  5,,2);
	Если ЕстьЦена = 1 Тогда
		КонтВалюта = КонтДок.Валюта;
		КонтКурс   = КонтДок.Курс;
		Если ЦенаНеРозничная = 1 Тогда
			КонтТипЦен = КонтДок.ТипЦен;
		Иначе
			ТовОстатки = СоздатьОбъект("Регистр.ОстаткиТМЦ");
			ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(КонтДок.Фирма);
			ТовОстатки.УстановитьЗначениеФильтра("Фирма", ФирмаДляОстатковТМЦ, 2);
			Если ПустоеЗначение(КонтДок.Склад) = 1 Тогда
				ТовОстатки.УстановитьЗначениеФильтра("Склад", , 0);
			Иначе	
				ТовОстатки.УстановитьЗначениеФильтра("Склад", КонтДок.Склад, 1);
			КонецЕсли;
		КонецЕсли;
		ТаблицаНоменклатуры.НоваяКолонка("Цена"             ,"Число"               , 15, 2,"Цена (" + СокрЛП(КонтВалюта) + ")",   ,,2);
	КонецЕсли;
	
	ТаблицаНоменклатуры.ВыводитьПиктограммы("Пометка",1);
	
	// для документа ПоступлениеТМЦ (комиссия колонку ВидТМЦ не показываем)
	Если КонтДок.Вид() = "ПоступлениеТМЦ" Тогда
		Если КонтДок.КодОперации = Перечисление.КодыОпераций.ПриемНаРеализацию Тогда
			ТаблицаНоменклатуры.ВидимостьКолонки("ВидТМЦ", 0);
			ФиксВидТМЦ	= Перечисление.ВидыТМЦ.Товар;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПодбора(ВыбЗнач)
	
	ВремВидТМЦ	=	ВосстановитьЗначение("ВидТМЦПоУмолчанию");
	Если ПустоеЗначение(ВремВидТМЦ)=1 Тогда
		ВремВидТМЦ = Перечисление.ВидыТМЦ.Товар;
	КонецЕсли;      
	
	ЕстьВидТМЦВыбЗнач = глЕстьРеквизитМнЧ("ВидТМЦ", ВыбЗнач.Вид());
	
	// Собственно обработка подбора
	ВыбЗнач.ВыбратьСтроки();
	Пока ВыбЗнач.ПолучитьСтроку() = 1 Цикл
	    
		// Поищем, м.б. уже есть такая позиция Номенклатуры
		Поз = 0;
		Если ТаблицаНоменклатуры.НайтиЗначение(ВыбЗнач.Единица, Поз, "Единица") = 1 Тогда
			
			// нашли, увеличиваем количество
			ТаблицаНоменклатуры.ПолучитьСтрокуПоНомеру(Поз);
			ТаблицаНоменклатуры.Количество = ТаблицаНоменклатуры.Количество + ВыбЗнач.Количество;
				
		Иначе // добавляем новую строку
			ТаблицаНоменклатуры.НоваяСтрока();
	    	ТаблицаНоменклатуры.Пометка       = МеткаЕсть;
	    	ТаблицаНоменклатуры.Номенклатура  = ВыбЗнач.Номенклатура;
	    	ТаблицаНоменклатуры.Количество    = ВыбЗнач.Количество;
	    	ТаблицаНоменклатуры.Единица       = ВыбЗнач.Единица;
	    	ТаблицаНоменклатуры.Коэффициент   = ВыбЗнач.Коэффициент;
			
			Если ЕстьВидТМЦ = 1 Тогда
				Если ПустоеЗначение(ФиксВидТМЦ) = 0 Тогда
					// если вид фиксированный, то прописываем его
					ТаблицаНоменклатуры.ВидТМЦ	= ФиксВидТМЦ;
				Иначе
					Если ЕстьВидТМЦВыбЗнач = 1 Тогда
						ТаблицаНоменклатуры.ВидТМЦ    = ВыбЗнач.ВидТМЦ;
					Иначе    
						ТаблицаНоменклатуры.ВидТМЦ    = ВремВидТМЦ;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьЦена = 1 Тогда // Заполним колонку цен
				Если ЦенаНеРозничная = 1 Тогда
				    
					ТаблицаНоменклатуры.Цена = глПолучитьЦену(ТаблицаНоменклатуры.Номенклатура,
					                                          КонтТипЦен, КонтДатаДок,
												              ТаблицаНоменклатуры.Единица, 
															  КонтВалюта, КонтКурс);
				Иначе // Розничные цены
					СтрокаВозврЦена = "";
					глПолучитьРозничныйОстатокЦену(ТаблицаНоменклатуры.Номенклатура, ТаблицаНоменклатуры.Единица, ТовОстатки, , СтрокаВозврЦена);
				
					СписВозврЦен = ЗначениеИзстроки(СтрокаВозврЦена);
					Если СписВозврЦен.РазмерСписка() > 0 Тогда
						ТаблицаНоменклатуры.Цена  = СписВозврЦен.ПолучитьЗначение(1);
					Иначе
						ТаблицаНоменклатуры.Цена  = 0;
					КонецЕсли;
					
				КонецЕсли; // Если ЦенаНеРозничная = 1
			КонецЕсли;  // Если ЕстьЦена = 1
			
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры // ОбработкаПодбора()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
МеткаЕсть = 2;  МеткиНет = 1; // Номера иконок пометки
