////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ОбъектАнализа, КонтСправочника;
Перем Покупатели, Поставщики; 


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ЗаполнитьКолонкиТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
// 
// Описание:
//  Устанавливает фильтры на нужные регистры и определяет колонки таблицы формы.
//
Процедура ЗаполнитьКолонкиТаблицы()
	
	ТаблицаФормы.Очистить();	 
	
	Покупатели = СоздатьОбъект("Регистр.Покупатели");
	Поставщики = СоздатьОбъект("Регистр.Поставщики");
	
	// Заполним список фирм всеми элементами справочника и установим фильтр на регистры взаиморасчетов (первое измерение)
	СписокФирм = СоздатьОбъект("СписокЗначений");
	СпрФирмы   = СоздатьОбъект("Справочник.Фирмы");
	СпрФирмы.ВыбратьЭлементы();
	Пока СпрФирмы.ПолучитьЭлемент() = 1 Цикл
		СписокФирм.ДобавитьЗначение(СпрФирмы.ТекущийЭлемент());
	КонецЦикла;
	
	Покупатели.УстановитьЗначениеФильтра("Фирма", СписокФирм, 2);           
	Поставщики.УстановитьЗначениеФильтра("Фирма", СписокФирм, 2);           

	ТаблицаФормы.НоваяКолонка("Объект",               ,  , ,"Документ"       ,20,          ,1);
	ТаблицаФормы.НоваяКолонка("ДолгКлиента","Число"   ,15,2,"Долг клиента"   ,10,"Ч015.2.'",2);
	ТаблицаФормы.НоваяКолонка("НашДолг",    "Число"   ,15,2,"Наш долг"       ,10,"Ч015.2.'",2);
	ТаблицаФормы.НоваяКолонка("Валюта",               ,  , ,"Вал."           , 5,          ,2);
		
	
КонецПроцедуры // ЗаполнитьКолонкиТаблицы()

//******************************************************************************
// ОбработкаТаблицыДолгов(ТаблДолгов)
//
// Параметры: 
//  ТаблДолгов - таблица значений итогов регистра взаиморасчетов
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет строки таблицы значений формы по таблице итогов взаиморасчетов
//
Процедура ОбработкаТаблицыДолгов(ТаблДолгов)
	
	ТаблДолгов.ВыбратьСтроки();
	Пока ТаблДолгов.ПолучитьСтроку() = 1 Цикл
	    ТаблицаФормы.НоваяСтрока();
		Долг = ТаблДолгов.СуммаВал;
		ТаблицаФормы.Объект      = ТаблДолгов.КредДокумент;
		ТаблицаФормы.ДолгКлиента = ?(Долг > 0, Долг,  "");
		ТаблицаФормы.НашДолг     = ?(Долг < 0, -Долг, "");
		ТаблицаФормы.Валюта      = СокрЛП(ТаблДолгов.Договор.ВалютаВзаиморасчетов);
	КонецЦикла; 
	
КонецПроцедуры // ОбработкаТаблицыДолгов()

//******************************************************************************
// ЗаполнитьСтрокиТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет строки таблицы формы.
//
Процедура ЗаполнитьСтрокиТаблицы()
    
ТаблицаФормы.УдалитьСтроки();	
Если ПустоеЗначение(ОбъектАнализа) = 0 Тогда
	Если ОбъектАнализа.ЭтоГруппа() = 0 Тогда
		
		// Заполним список договоров текущего клиента и установим фильтр на регистры взаиморасчетов
		СписокДоговоров = СоздатьОбъект("СписокЗначений"); 
		СпрДоговоры = СоздатьОбъект("Справочник.Договоры");
		СпрДоговоры.ИспользоватьВладельца(ОбъектАнализа);
		СпрДоговоры.ВыбратьЭлементы(); 
		Пока СпрДоговоры.ПолучитьЭлемент() = 1 Цикл
			ТекЭлемент = СпрДоговоры.ТекущийЭлемент();
			Если ТекЭлемент.ЭтоГруппа() = 1 Тогда
			    Продолжить;
			КонецЕсли;
			СписокДоговоров.ДобавитьЗначение(ТекЭлемент);
		КонецЦикла;
		
		Покупатели.УстановитьЗначениеФильтра("Договор", СписокДоговоров, 2);           
		Поставщики.УстановитьЗначениеФильтра("Договор", СписокДоговоров, 2);           
	    
		ТаблДолгов = СоздатьОбъект("ТаблицаЗначений"); 
		Поставщики.ВыгрузитьИтоги(ТаблДолгов, 1, 1);
		ОбработкаТаблицыДолгов(ТаблДолгов);
		Покупатели.ВыгрузитьИтоги(ТаблДолгов, 1, 1);
		ОбработкаТаблицыДолгов(ТаблДолгов);
		
		// Посчитаем итоги 
		ТаблицаФормы.Выгрузить(ТаблДолгов);
		ТаблДолгов.Свернуть("Валюта", "НашДолг, ДолгКлиента");
		ТаблДолгов.ВыбратьСтроки();
		Пока ТаблДолгов.ПолучитьСтроку() = 1 Цикл
			ИтогНашДолг				= ТаблДолгов.НашДолг;
			ИтогДолгКлиента			= ТаблДолгов.ДолгКлиента;
			
			ТаблицаФормы.НоваяСтрока(1);
			ТаблицаФормы.Объект		 = "Итого:";
			ТаблицаФормы.НашДолг	 = ?(ИтогНашДолг > ИтогДолгКлиента, ИтогНашДолг	 - ИтогДолгКлиента,	"");
			ТаблицаФормы.ДолгКлиента = ?(ИтогНашДолг < ИтогДолгКлиента, -ИтогНашДолг + ИтогДолгКлиента,	"");
			ТаблицаФормы.Валюта		 = СокрЛП(ТаблДолгов.Валюта);
		КонецЦикла;

	КонецЕсли;
КонецЕсли;	
	
	
КонецПроцедуры // ЗаполнитьСтрокиТаблицы()

//******************************************************************************
// СформироватьИнформационнуюСтроку()
//
// Параметры:
//  Нет
//
//	Возвращаемое значение:
//  Нет
//
// Описание:
//  Формирует текст информационной строки формы. 
//
Функция СформироватьИнформационнуюСтроку()
	Перем ИнфСтрока;

	Если ТипЗначения(КонтСправочника) = 100 Тогда
		ТекЭлемент = КонтСправочника.ТекущийЭлемент();
		Если ТекЭлемент <> ОбъектАнализа Тогда
			ОбъектАнализа = ТекЭлемент; 
			ЗаполнитьСтрокиТаблицы();
		КонецЕсли;
		
		Если ПустоеЗначение(ОбъектАнализа) = 1 Тогда
			// не выбран элемент
			ИнфСтрока = "";
		Иначе
		
			Если ОбъектАнализа.ЭтоГруппа() = 0 Тогда
			
				ИнфСтрока = СокрЛП(ОбъектАнализа.Наименование) +
				            ?(ПустоеЗначение(ОбъектАнализа.ЮрФизЛицо.Телефоны) = 0, " Телефоны: "     + СокрЛП(ОбъектАнализа.ЮрФизЛицо.Телефоны), "") +
				            ?(ПустоеЗначение(ОбъектАнализа.ЭлПочта) = 0, " Адрес эл.почты: " + СокрЛП(ОбъектАнализа.ЭлПочта),	"") +
				            ?(ПустоеЗначение(ОбъектАнализа.Комментарий) = 0, " Комментарий: "    + СокрЛП(ОбъектАнализа.Комментарий),	"");
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	Возврат ИнфСтрока;
	
КонецФункции // СформироватьИнформационнуюСтроку()                              

//******************************************************************************
// ПриДвойномЩелчкеНаТаблице()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Таблица значений формы
// 
// Описание:
//  При двойном щелчке на таблице значений открывает форму заданного объекта, если он определен
//
Процедура ПриДвойномЩелчкеНаТаблице()
	Перем Конт;
	
	Позиция	= ТаблицаФормы.ТекущаяСтрока();
	Если Позиция= 0 Тогда 
		Возврат 
	КонецЕсли;
	                              
	Попытка
		Конт = ТаблицаФормы.ПолучитьЗначение(Позиция, "Объект");
	Исключение КонецПопытки;

    ОткрытьФормуМодально(Конт);
	
	// Могли поменять отображаемую информацию
	ОбъектАнализа = "";
	СформироватьИнформационнуюСтроку();
	
	ТаблицаФормы.ТекущаяСтрока(Позиция);
	
	
	
КонецПроцедуры // ПриДвойномЩелчкеНаТаблице()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	    
	КонтСправочника = Форма.Параметр;
	Если ПустоеЗначение(КонтСправочника) = 1 Тогда
		Предупреждение("Данная обработка вызывается из других модулей конфигурации",60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	
	// Заполним таблицу значений формы
	ЗаполнитьКолонкиТаблицы();
	ЗаполнитьСтрокиТаблицы();
	
КонецПроцедуры // ПриОткрытии() 

