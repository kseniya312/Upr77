//******************************************************************************
// Выполнить()
//
// Параметры:
//  нет
//
// Возвращаемое значение: 
//  нет
//
// Описание: 
//  получает остатки товаров выбранной фирмы на выбранном розничном складе,
//  формирует таблицу значений, в которую записывает полученную инфрмацию и
//  и вызывает функцию для загрузки этой информации в выбранную ККМ.
//
Процедура Выполнить()
	Перем ОписаниеОш;
	
	Если ПустоеЗначение(ВыбКасса) = 1 Тогда
	    Предупреждение("Не выбрана касса.", 60);
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбСклад) = 1 Тогда
	    Предупреждение("Не выбран розничный торговый склад.", 60);
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ВыбФирма) = 1 Тогда
	    Предупреждение("Не выбрана Фирма.", 60);
		Возврат;
	КонецЕсли;
	
	ТекстОстРозн = 
	"//{{ЗАПРОС(ОстаткиРозницы)
	|Фирма = Регистр.ОстаткиТМЦ.Фирма;
	|Товар = Регистр.ОстаткиТМЦ.Номенклатура;
	|Склад = Регистр.ОстаткиТМЦ.Склад;
	|Цена = Регистр.ОстаткиТМЦ.ЦенаПрод;
	|Колво = Регистр.ОстаткиТМЦ.Количество;
	|Функция Количество = КонОст(Колво);
	|Группировка Товар без групп;
	|Группировка Цена;
	|Условие(Фирма = ВыбФирма);
	|Условие(Склад = ВыбСклад);
	|"//}}ЗАПРОС
	;
	
	ОстРозн = СоздатьОбъект("Запрос");
	
	Если ОстРозн.Выполнить(ТекстОстРозн) = 0 Тогда
	    Предупреждение("Не выполнился запрос по остаткам", 60);
		Возврат;
	КонецЕсли;
	
	СписокТоваров = СоздатьОбъект("ТаблицаЗначений");
	СписокТоваров.НоваяКолонка("Код");
	СписокТоваров.НоваяКолонка("Штрихкод");
	СписокТоваров.НоваяКолонка("Наименование");
	СписокТоваров.НоваяКолонка("Цена");
	СписокТоваров.НоваяКолонка("Количество");
	
	Пока ОстРозн.Группировка("Товар") = 1 Цикл
		Пока ОстРозн.Группировка("Цена") = 1 Цикл
			Товар = ОстРозн.Товар;
		    
			СписокТоваров.НоваяСтрока();
			СписокТоваров.Код          = СокрЛП(Товар.Код);
			СписокТоваров.Штрихкод     = СокрЛП(Товар.БазоваяЕдиница.Штрихкод);
			СписокТоваров.Наименование = СокрЛП(Товар.ПолнНаименование);
			СписокТоваров.Цена         = ОстРозн.Цена;
			СписокТоваров.Количество   = ОстРозн.Количество;
		КонецЦикла;
	КонецЦикла;
	
	Если СписокТоваров.КоличествоСтрок() = 0 Тогда
	    Предупреждение("Перечень товаров для загрузки пуст.", 60);
		Возврат;
	КонецЕсли;
	
	Если глККМЗагрузитьТовары(ВыбКасса, ВыбСклад.НомерСекции, СписокТоваров, ОписаниеОш) = 1 Тогда
		Предупреждение("Загрузка номенклатуры успешно завершена.", 60);
		Форма.Закрыть();
	Иначе
		Предупреждение(ОписаниеОш, 60);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	Перем ВыбЗнач;
	
	Если ИдентЭлемДиалога = "ВыбСклад" Тогда
		ФлагСтандОбр = 0;
		
		СпрСклады      = СоздатьОбъект("Справочник.Склады");
		СписРозСкладов = СоздатьОбъект("СписокЗначений");
		
		СпрСклады.ВыбратьЭлементы();
		Пока СпрСклады.ПолучитьЭлемент() = 1 Цикл
		    Если (СпрСклады.Выбран() = 1) И (СпрСклады.РозничныйСклад = 1) Тогда
		        СписРозСкладов.ДобавитьЗначение(СпрСклады.ТекущийЭлемент());
		    КонецЕсли;
		КонецЦикла;
		
		Если СписРозСкладов.РазмерСписка() = 0 Тогда
		    Предупреждение("Нет зарегистрированно ни одного розничного склада.", 60);
			Возврат;
		КонецЕсли;
		
		Если СписРозСкладов.ВыбратьЗначение(ВыбЗнач, , , 60, 2) = 1 Тогда
			ВыбСклад = ВыбЗнач;
		КонецЕсли;
	    
	ИначеЕсли ИдентЭлемДиалога = "ВыбКасса" Тогда
		ФлагСтандОбр = 0;
		
		СпрКассы = СоздатьОбъект("Справочник.Кассы");
		СписКасс = СоздатьОбъект("СписокЗначений");
		
		СпрКассы.ВыбратьЭлементы();
		Пока СпрКассы.ПолучитьЭлемент() = 1 Цикл
		    Если (СпрКассы.Выбран() = 1) И (СпрКассы.РежимККМ = Перечисление.РежимыККМ.OffLine) Тогда
		        СписКасс.ДобавитьЗначение(СпрКассы.ТекущийЭлемент());
		    КонецЕсли;
		КонецЦикла;
	    
		Если СписКасс.РазмерСписка() = 0 Тогда
		    Предупреждение("Не зарегистрированно ни одной ККМ в режиме Off-Line.", 60);
			Возврат;
		КонецЕсли;

		Если СписКасс.ВыбратьЗначение(ВыбЗнач, , , 60, 2) = 1 Тогда
			ВыбКасса = ВыбЗнач;
		КонецЕсли;
	    
	КонецЕсли;
          
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии(ФлагЧтенияНастройки)
	
	Если ФлагЧтенияНастройки = 0 Тогда
	    Склад = глЗначениеПоУмолчанию("ОсновнойСклад");
		Если Склад.РозничныйСклад = 1 Тогда
		    ВыбСклад = Склад;
		КонецЕсли;
		
	    Касса = глЗначениеПоУмолчанию("ОсновнаяКасса");
		Если Касса.РежимККМ = Перечисление.РежимыККМ.OffLine Тогда
		    ВыбКасса = Касса;
		КонецЕсли;
	КонецЕсли;
	
	ВыбФирма = глЗначениеПоУмолчанию("ОсновнаяФирма");
	
КонецПроцедуры // ПриОткрытии()


