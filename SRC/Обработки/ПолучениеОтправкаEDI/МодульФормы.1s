Процедура ПолучитьЗаказыПокупателяMSSOAP(ДатаНачала, ДатаКонца, Login="Ваш логин", Password="Ваш пароль", Partner_ID="GLN Партнера", OUR_ID="GLN Наш") Далее  
Процедура ОтправитьПодтверждениеОтгрузкиMSSOAP(Login="Ваш логин", Password="Ваш пароль", Partner_ID="GLN Партнера", ДокументЗаказ) Далее      
Процедура Получить() Далее 
Процедура Отправить() Далее
//*******************************************
Процедура ПриОткрытии()
	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ() + "v7plus.dll") <> 1 Тогда
		Если ЗагрузитьВнешнююКомпоненту(КаталогИБ() + "ExtForms\" + "v7plus.dll") <> 1 Тогда
			Если ЗагрузитьВнешнююКомпоненту(КаталогПрограммы() + "v7plus.dll") <> 1 Тогда
				Предупреждение("Компонента v7plus.dll не найдена!", 60);
				Возврат;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;   
	
	Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
		ВыбКоманда = Форма.Параметр;
		Если ВыбКоманда = "Получить" Тогда
			Получить();
			СтатусВозврата(0);
			Возврат;   
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
		Если Форма.Параметр.Получить("Команда") = "ОтправитьЗакрыть" Тогда  
			//Док = СоздатьОбъект("Документ");                  
			ДокОтправки = Форма.Параметр.Получить("ДокОтправки");
			//Док.НайтиДокумент(ДокОтправки.ТекущийДокумент());
			ДокументПодтверждения = ДокОтправки.ТекущийДокумент();
			Отправить();
			Сообщить("Подтверждение отправлено.");
			СтатусВозврата(0);Возврат;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры	

Процедура Получить() 
	ДатаНачала = ТекущаяДата();
	ДатаКонца = ТекущаяДата()-15;
    //ПолучитьЗаказыПокупателяMSSOAP(ДатаНачала, ДатаКонца, "4650061879990EC", "9S3bV64yH", "4630016679998","4650061879990");  
	ПолучитьЗаказыПокупателяMSSOAP(ДатаНачала, ДатаКонца, "4607099828520EC", "mzkWtC7m", "4630016679998","4607099828520");
КонецПроцедуры
  
Процедура Отправить()
	//ОтправитьПодтверждениеОтгрузкиMSSOAP("4650061879990EC", "9S3bV64yH", "4630016679998", ДокументПодтверждения);
	ОтправитьПодтверждениеОтгрузкиMSSOAP("4607099828520EC", "mzkWtC7m", "4630016679998", ДокументПодтверждения);	
КонецПроцедуры	                                                                                                                                                    

Функция ПривестиДатуКВидуECOD(ВходящаяДата)

    Возврат Формат(ВходящаяДата, "ДФ=""гггг-ММ-дд""");

КонецФункции
     
Процедура ЗаполнитьШапку(ДокЗ)
	глЗаполнитьШапку(ДокЗ, 0,"Продажа");

	ДокЗ.ДатаОтгрузки	= ТекущаяДата() + Константа.БазовоеЧислоДнейРезерва.Получить(ТекущаяДата());

	ДокЗ.ВидОперации = Перечисление.ВидыОперацийЗаявок.Неподтвержденная;  
	ДокЗ.Проект = "";
	   
	// Документы оптовой торговли можно оформлять только с оптового склада
	Если (ДокЗ.Склад.РозничныйСклад = 1) Тогда
	    ДокЗ.Склад = "";
	КонецЕсли;
	
    ДокЗ.ДатаВремяСозданиеЗаявки = "" + ТекущаяДата() +" "+ ТекущееВремя();
КонецПроцедуры	
      
Функция НайтиЗаявку(ТекИдентификаторEDO)
	ДокЗаявка = "";
	
	Запрос = СоздатьОбъект("Запрос");  
	ТекстЗапроса = "
	|док	 			= Документ.ЗаявкаПокупателя.ТекущийДокумент;
	|ИдентификаторEDO	= Документ.ЗаявкаПокупателя.ИдентификаторEDO;
	|Группировка док;
	|Условие(ИдентификаторEDO = ТекИдентификаторEDO);
	|";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат "";
	КонецЕсли;       
	
	Пока Запрос.Группировка() = 1 Цикл
		ДокЗаявка = Запрос.док;
		Прервать;		
	КонецЦикла; 
	
	Возврат ДокЗаявка;
КонецФункции	
                        
Функция ПолучитьТоварПоШК(ТекШтрихКод)
	Номен = "";
	
	Запрос = СоздатьОбъект("Запрос");  
	ТекстЗапроса = "
	|Ном	 	= Справочник.Номенклатура.ТекущийЭлемент;
	|ШтрихКод	= Справочник.Номенклатура.БазоваяЕдиница.ШтрихКод;
	|Группировка Ном без групп;
	|Условие(ШтрихКод = ТекШтрихКод);
	|";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат "";
	КонецЕсли;       
	
	Пока Запрос.Группировка() = 1 Цикл
		Номен = Запрос.Ном;
		Прервать;		
	КонецЦикла; 
	
	Возврат Номен;	
КонецФункции

Функция ПолучитьШКТовара(ТекТовар)
	ТекШК = "";
	
	Запрос = СоздатьОбъект("Запрос");  
	ТекстЗапроса = "
	|Ном	 	= Справочник.Номенклатура.ТекущийЭлемент;
	|ШтрихКод	= Справочник.Номенклатура.БазоваяЕдиница.ШтрихКод;
	|Группировка Ном без групп;
	|Условие(Ном = ТекТовар);
	|";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат "";
	КонецЕсли;       
	
	Пока Запрос.Группировка() = 1 Цикл
		ТекШК = Запрос.ШтрихКод;
		Прервать;		
	КонецЦикла; 
	
	Возврат ТекШК;	
КонецФункции

Процедура ЗаполнитьТаблЧасть(ДокЗаявка, СтрокаХML)
	XML_Документ = СоздатьОбъект("MSXML2.DOMDocument.4.0");
	//XML_Документ.Load(ИмяФайла);
	XML_Документ.LoadXML(СтрокаХML);
	 
	Если XML_Документ.parseError.errorCode <> 0 Тогда
		Сообщить("Ошибка: XML файл не валидный");	
		Возврат;
	КонецЕсли;
	   
	НомПрочее = СоздатьОбъект("Справочник.Номенклатура");
	НомПрочее.НайтиПоКоду("30010297");
	      
	 
	colNodes = XML_Документ.getElementsByTagName("DeliveryPoint");
	Если colNodes.length > 0 Тогда 
		Для Индекс = 0 По colNodes.length - 1 Цикл
			Node = colNodes.Item(Индекс);
			ДокЗаявка.Комментарий = ДокЗаявка.Комментарий + " " + Node.text;
		КонецЦикла;
	КонецЕсли;
	
	colNodes = XML_Документ.getElementsByTagName("OrderNumber");
	//colNodes.reset();
	
	Если colNodes.length > 0 Тогда 
		Для Индекс = 0 По colNodes.length - 1 Цикл
			Node = colNodes.Item(Индекс);
			ДокЗаявка.НомерEDO = Node.text; 
			ДокЗаявка.Комментарий = ДокЗаявка.Комментарий + " №" + Node.text; 
		КонецЦикла;
	КонецЕсли;	
	
	colNodes = XML_Документ.getElementsByTagName("Line-Item");
	//colNodes = XML_Документ.getElementsByTagName("tracking-id");
	//colNodes.reset();
	//nodeLine = colNodes.childNodes;     
	СпрНом = СоздатьОбъект("Справочник.Номенклатура");
	
	Если colNodes.length > 0 Тогда 
		Для Индекс = 0 По colNodes.length - 1 Цикл
			Node = colNodes.Item(Индекс);
			
			НомерСтр = Node.childNodes(0).text;
			//Сообщить(НомерСтр);
			     
			ШтрихКод 		= Node.childNodes(1).text;
			BuyerItemCode 	= Node.childNodes(2).text;
			Количество 		= Число(Node.childNodes(4).text);
			Цена	 		= Число(Node.childNodes(7).text);
			
			НаименованиеТовара = Node.childNodes(3).text;
			//Сообщить(НомерСтр);
			   
			ТекНом = ПолучитьТоварПоШК(ШтрихКод);
			     
			
			
			Если ТекНом <> "" Тогда    
				Если BuyerItemCode <> "" Тогда
					СпрНом.НайтиЭлемент(ТекНом.ТекущийЭлемент());
					СпрНом.BuyerItemCode = BuyerItemCode;
					СпрНом.Записать();
				КонецЕсли;
				
				ДокЗаявка.НоваяСтрока();
				ДокЗаявка.Номенклатура = ТекНом;
				глПересчетТаблЧасти(ДокЗаявка,"Номенклатура");
				ДокЗаявка.Количество = Количество;
				ДокЗаявка.Цена = Цена;      
				глПересчетТаблЧасти(ДокЗаявка,"Цена");
				Если ДокЗаявка.Номенклатура.Код = "30012214" Тогда
					ДокЗаявка.Количество = Количество * 200; 
				ИначеЕсли ДокЗаявка.Номенклатура.Код = "42935" Тогда
					ДокЗаявка.Количество = Количество * 2; 
				КонецЕсли	
			Иначе
				Сообщить("Не найден товар по штрихкоду:"+ШтрихКод);
				ДокЗаявка.НоваяСтрока();
				ДокЗаявка.Номенклатура = НомПрочее.ТекущийЭлемент();
				глПересчетТаблЧасти(ДокЗаявка,"Номенклатура");
				ДокЗаявка.Количество = Количество;
				ДокЗаявка.Цена = Цена;      
				глПересчетТаблЧасти(ДокЗаявка,"Цена");
				ДокЗаявка.Коммент = ШтрихКод;
			КонецЕсли;	
			
			//Для Индекс = 0 По colNodes.childNodes.Length - 1 Цикл  
			//	Node = 
			//	ЗначениеАтрибута = Node.getAttribute("tracking-id");
			//	Tag = Nodes.Item(Индекс);                
			//	МассивИдентификаторов.Добавить(ЗначениеАтрибута);
			//КонецЦикла;     
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры	

Процедура СформироватьЗаказПокупателяECODИзСтрокиXML(СтрокаХML, ТекИдентификаторEDO)  
	//получим документ по идентификатору
	//если нет создаем новый, если есть отбой
	ДокЗаявка = "";
	      
	ДокЗаявка = НайтиЗаявку(ТекИдентификаторEDO);
		 
	Если ДокЗаявка = "" Тогда
		ДокЗаявка = СоздатьОбъект("Документ.ЗаявкаПокупателя");
	    ДокЗаявка.Новый(); 
		ДокЗаявка.ИдентификаторEDO = ТекИдентификаторEDO;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	//заполняем шакпку документа
	ЗаполнитьШапку(ДокЗаявка);
	//заполняем табл часть документа   
	//ДокЗаявка.СуммаВклНДС = 0;
	ЗаполнитьТаблЧасть(ДокЗаявка, СтрокаХML);
	//записываем документ
	Если ДокЗаявка.КоличествоСтрок() > 0 Тогда
		ДокЗаявка.Записать();
		Сообщить("Записан документ: "+ДокЗаявка);
	КонецЕсли;	
	//сообщяем что записали и какой документ
КонецПроцедуры	
               
Функция ПолучитьМассивИдентификаторовДокументовECOD(СтрокаХML)

    МассивИдентификаторов = СоздатьОбъект("СписокЗначений");
                                            
	//ИмяФайла = ""+КаталогИБ()+"\ПриемОтправкаEDO\ФайлЗагрузки.xml";
	 
	//ТекстДляФайла = СоздатьОбъект("Текст"); 
	//ТекстДляФайла.КодоваяСтраница(1);
	//ТекстДляФайла.ДобавитьСтроку(СтрокаХML);
	//ТекстДляФайла.Записать(ИмяФайла);
	
	
	XML_Документ = СоздатьОбъект("MSXML2.DOMDocument.4.0");
	//XML_Документ.Load(ИмяФайла);
	XML_Документ.LoadXML(СтрокаХML);
	 
	Если XML_Документ.parseError.errorCode <> 0 Тогда
		Сообщить("Ошибка: XML файл не валидный");	
		Возврат МассивИдентификаторов;
	КонецЕсли;
	  
	//colNodes = xmlParser.getElementsByTagName("document-info");
	
	colNodes = XML_Документ.getElementsByTagName("tracking-id");
	//colNodes.reset();
	
	Если colNodes.length > 0 Тогда 
		Для Индекс = 0 По colNodes.length - 1 Цикл
			Node = colNodes.Item(Индекс);
			МассивИдентификаторов.ДобавитьЗначение(Node.text)
		КонецЦикла;
	КонецЕсли;
	
	
	//colNodes = XML_Документ.getElementsByTagName("tracking-id");
	//colNodes.reset();
	//
	//nodeTitle = colNodes.nextNode;
	//Попытка
	//	Пока nodeTitle <> "" Цикл
	//		//Сообщить(nodeTitle.text); 
	//		МассивИдентификаторов.ДобавитьЗначение(nodeTitle.text);
	//		nodeTitle = colNodes.nextNode; 
	//	КонецЦикла;	
	//Исключение
	//КонецПопытки;
	
	//Выбрать узлы 
	//Nodes 		= XML_Документ.documentElement;
	//currNode 	= Nodes.firstChild;
	//
	//Пока currNode <> "" Цикл
	//	ЗначениеАтрибута = currNode.getAttribute("tracking-id");
	//	МассивИдентификаторов.Добавить(ЗначениеАтрибута);  
	//	currNode = currNode.nextSibling;
	//КонецЦикла;	
	
	
	//Nodes = XML_Документ.SelectNodes("document-info");
	//	
	//Для Индекс = 0 По Nodes.Length - 1 Цикл
	//	ЗначениеАтрибута = Nodes.Item(Индекс).getAttribute("tracking-id");
	//	Tag = Nodes.Item(Индекс);                
	//	МассивИдентификаторов.Добавить(ЗначениеАтрибута);
	//КонецЦикла;
	
	
	
	//Анализатор = СоздатьОбъект("AddIn.XMLParser");  
	//
	//Чтение = Анализатор.СоздатьДокумент();
	//Если ПустоеЗначение(Чтение) = 1 Тогда
	//	Возврат МассивИдентификаторов; 
	//КонецЕсли;
	//Чтение.Загрузить(ИмяФайла);
	//  
	//Выборка = Чтение.ВыбратьУзлы("Документ");
	//Для й = 1 По Выборка.КоличествоУзлов Цикл
	//	Док = Выборка.ПолучитьУзел(й-1);
	//	МассивИдентификаторов.Добавить(Док.Значение);
	//КонецЦикла;	
		
    Возврат МассивИдентификаторов;

КонецФункции


Функция ПолучитьМассивИдентификаторовДокументовECOD_ОЛД(СтрокаХML)

    МассивИдентификаторов = СоздатьОбъект("СписокЗначений");
                                            
	ИмяФайла = ""+КаталогИБ()+"\ПриемОтправкаEDO\ФайлЗагрузки.xml";
	 
	ТекстДляФайла = СоздатьОбъект("Текст"); 
	ТекстДляФайла.КодоваяСтраница(1);
	ТекстДляФайла.ДобавитьСтроку(СтрокаХML);
	ТекстДляФайла.Записать(ИмяФайла);
	
	Анализатор = СоздатьОбъект("AddIn.XMLParser");  
	
	Чтение = Анализатор.СоздатьДокумент();
	Если ПустоеЗначение(Чтение) = 1 Тогда
		Возврат МассивИдентификаторов; 
	КонецЕсли;
	Чтение.Загрузить(ИмяФайла);
	  
	Выборка = Чтение.ВыбратьУзлы("Документ");
	Для й = 1 По Выборка.КоличествоУзлов Цикл
		Док = Выборка.ПолучитьУзел(й-1);
		МассивИдентификаторов.Добавить(Док.Значение);
	КонецЦикла;	
	
	
    //Чтение.УстановитьСтроку(СтрокаХML);
    //Пока Чтение.Прочитать() Цикл
    //    ИмяУзла = Чтение.Имя;
    //    Если ИмяУзла <> "tracking-id" Тогда  // Пропускаем все узлы, кроме tracking-id
    //        Продолжить;
    //    КонецЕсли;
    //    Если ИмяУзла = "tracking-id" Тогда
    //        Чтение.Прочитать();
    //        Если Чтение.ТипУзла = ТипУзлаXML.Текст Тогда
    //            МассивИдентификаторов.Добавить(Чтение.Значение);
    //        КонецЕсли;
    //    КонецЕсли;
    //КонецЦикла;    
	
	
	
    Возврат МассивИдентификаторов;

КонецФункции
               
Функция ПолучитьДанныеXMLДокумента(ДокументЗаказ) 
	 
	Если ДокументЗаказ.Итог("Количество") = ДокументЗаказ.Итог("Отгрузка2") Тогда
		КодПодтверждения = 29;	
	Иначе
		КодПодтверждения = 4;
	КонецЕсли;	
	       
	ExpectedDeliveryDate 	= ""+ДатаГод(ДокументЗаказ.ДатаДок+5)+"-"+Прав("0"+ДатаМесяц(ДокументЗаказ.ДатаДок+5),2)+"-"+Прав("0"+ДатаЧисло(ДокументЗаказ.ДатаДок+5),2);
	OrderResponseDate 		= ""+ДатаГод(ДокументЗаказ.ДатаДок)+"-"+Прав("0"+ДатаМесяц(ДокументЗаказ.ДатаДок),2)+"-"+Прав("0"+ДатаЧисло(ДокументЗаказ.ДатаДок),2);
	
	Текст = "
	|<Document-OrderResponse xmlns:ns2=""http://exchange.mule.ptr/"" xmlns:ns3=""http://www.comarch.com/"">
	|   <OrderResponse-Header> 
	|		<OrderResponseNumber>"+ДокументЗаказ.НомерДок+"</OrderResponseNumber>
	|       <OrderResponseDate>"+OrderResponseDate+"</OrderResponseDate> 
	|       <ExpectedDeliveryDate>"+ExpectedDeliveryDate+"</ExpectedDeliveryDate> 
	|       <ExpectedDeliveryTime>08:00</ExpectedDeliveryTime>
	|       <OrderNumber>"+СокрЛП(ДокументЗаказ.НомерEDO)+"</OrderNumber>
	|       <OrderDate>"+OrderResponseDate+"</OrderDate> 
	|       <ResponseType>"+КодПодтверждения+"</ResponseType>
	//|       <MessageType>OR</MessageType>
	|   </OrderResponse-Header>  
	|   <OrderResponse-Parties>
	|		<Buyer><ILN>4630016679998</ILN></Buyer>
	|		<Seller><ILN>4650061879990</ILN></Seller>
	//|		<DeliveryPoint><ILN>4630016670063</ILN></DeliveryPoint>
	|	</OrderResponse-Parties>
	|   <OrderResponse-Lines>";
	
	      
	ВсегоСтрок 		= 0;
	ИтогоКоличество = 0; 
	
	ИтогоБезНДС 	= 0; 
	ИтогоСНДС 		= 0;
	

	ДокументЗаказ.ВыбратьСтроки();
	Пока ДокументЗаказ.ПолучитьСтроку() = 1 Цикл
		//Если ДокументЗаказ.Отгрузка1 <> 0 Тогда
		ВсегоСтрок 		= ВсегоСтрок + 1;
		   
		ТекСуммаСНДС 	= ?(ДокументЗаказ.СуммаВклНДС = 1, ДокументЗаказ.Сумма, ДокументЗаказ.Сумма + ДокументЗаказ.СуммаНДС);
		ТекСуммаБезНДС 	= ?(ДокументЗаказ.СуммаВклНДС = 1, ДокументЗаказ.Сумма - ДокументЗаказ.СуммаНДС, ДокументЗаказ.Сумма);
		ТекСуммаНДС 	= ДокументЗаказ.СуммаНДС;
		
		Если ДокументЗаказ.Отгрузка2 = ДокументЗаказ.Количество Тогда
			LineItemStatus = 5; //5 - Accepted without amendment;
		ИначеЕсли ДокументЗаказ.Отгрузка2 <> 0 Тогда
			LineItemStatus = 3; //3 - Changed        
			ТекСуммаСНДС 	= ТекСуммаСНДС/ДокументЗаказ.Количество*ДокументЗаказ.Отгрузка2;
			ТекСуммаБезНДС 	= ТекСуммаБезНДС/ДокументЗаказ.Количество*ДокументЗаказ.Отгрузка2;
			ТекСуммаНДС 	= ТекСуммаНДС/ДокументЗаказ.Количество*ДокументЗаказ.Отгрузка2;
		Иначе	
			LineItemStatus = 7; //7 - Not accepted   
			ТекСуммаСНДС 	= 0;
			ТекСуммаБезНДС 	= 0;
			ТекСуммаНДС 	= 0;
		КонецЕсли;	
		 
		
		ИтогоКоличество = ИтогоКоличество + ДокументЗаказ.Отгрузка2; 
		
		ИтогоБезНДС 	= ИтогоБезНДС 	+ ТекСуммаБезНДС; 
		ИтогоСНДС 		= ИтогоСНДС 	+ ТекСуммаСНДС;
		        
		КоличествоЗаказа =ДокументЗаказ.Количество; 
		КоличествоПодтверждения = ДокументЗаказ.Отгрузка2;
		
		Если ДокументЗаказ.Номенклатура.Код = "30012214" Тогда
			КоличествоЗаказа 		= КоличествоЗаказа / 200; 
			КоличествоПодтверждения = КоличествоПодтверждения / 200; 
		ИначеЕсли ДокументЗаказ.Номенклатура.Код = "42935" Тогда
			КоличествоЗаказа 		= КоличествоЗаказа / 2;
			КоличествоПодтверждения = КоличествоПодтверждения / 2; 
		КонецЕсли;
		
		Текст = Текст + "
		|      <Line>
		|			<Line-Item>       
		|			<LineNumber>"+ВсегоСтрок+"</LineNumber>
		//|			<OrderLineNumber>"+ВсегоСтрок+"</OrderLineNumber>
		|			<EAN>"+ПолучитьШКТовара(ДокументЗаказ.Номенклатура)+"</EAN>
		|			<LineItemStatus>"+LineItemStatus+"</LineItemStatus>    
		|			<BuyerItemCode>"+СокрЛП(ДокументЗаказ.Номенклатура.BuyerItemCode)+"</BuyerItemCode>
		|			<ItemDescription>"+СокрЛП(ДокументЗаказ.Номенклатура.Наименование)+"</ItemDescription>
		|			<OrderedQuantity>"+КоличествоЗаказа+"</OrderedQuantity>
		|			<QuantityToBeDelivered>"+КоличествоПодтверждения+"</QuantityToBeDelivered>
		|			<UnitOfMeasure>PCE</UnitOfMeasure>   
		|			<Currency>RUB</Currency>
		|			<OrderedUnitNetPrice>"+ДокументЗаказ.Цена+"</OrderedUnitNetPrice>
		|			<OrderedUnitGrossPrice>"+ДокументЗаказ.Цена+"</OrderedUnitGrossPrice>  
		|			<TaxRate>18.00</TaxRate>    
		|			<TaxAmount>"+ТекСуммаНДС+"</TaxAmount>
		|			<NetAmount>"+ТекСуммаБезНДС+"</NetAmount>
		|			<GrossAmount>"+ТекСуммаСНДС+"</GrossAmount>
		|			</Line-Item>
		|	   </Line>";
		
		
		//КонецЕсли;	
	КонецЦикла;	
	
	Текст = Текст + "
	|   </OrderResponse-Lines> 
	|   <OrderResponse-Summary>
	|	<TotalLines>"+ВсегоСтрок+"</TotalLines>
	//|	<TotalOrderedAmount>"+ИтогоКоличество+"</TotalOrderedAmount>
	//|	<TotalNetAmount>"+ИтогоБезНДС+"</TotalNetAmount>
	//|	<TotalGrossAmount>"+ИтогоСНДС+"</TotalGrossAmount>
	|	</OrderResponse-Summary>
	|</Document-OrderResponse>
	|";
	
	ИмяФайла = ""+КаталогИБ()+"ПриемОтправкаEDO\ФайлПодтверждения.xml";
	
	ТекстДляФайла = СоздатьОбъект("Текст");
	ТекстДляФайла.КодоваяСтраница(1);
	ТекстДляФайла.ДобавитьСтроку(Текст);
	ТекстДляФайла.Записать(ИмяФайла);
	
	Возврат Текст;
КонецФункции	
               
Процедура ЗаписатьИдентификаторДокумента(ДокументЗаказ, ИдентификаторДокументаXML)
	 ДокЗаказ = СоздатьОбъект("Документ");
	 ДокЗаказ.НайтиДокумент(ДокументЗаказ.ТекущийДокумент());
	 ДокЗаказ.ИдентификаторEDO = ИдентификаторДокументаXML;
	 ДокЗаказ.Записать();
КонецПроцедуры

Процедура ЗаписатьИдентификаторПодтвержденияДокумента(ДокументЗаказ, ИдентификаторДокументаXML)
	 ДокЗаказ = СоздатьОбъект("Документ");
	 ДокЗаказ.НайтиДокумент(ДокументЗаказ.ТекущийДокумент());
	 ДокЗаказ.ИдентификаторПодтвEDO = ИдентификаторДокументаXML;
	 ДокЗаказ.Записать();
КонецПроцедуры

Процедура ОтправитьПодтверждениеОтгрузкиMSSOAP(Login="Ваш логин", Password="Ваш пароль", Partner_ID="GLN Партнера", ДокументЗаказ)

    ИмяСервиса = "https://www.ecod.pl/webserv2/EDIservice.asmx?WSDL";

    Попытка
        oSOAPClient = СоздатьОбъект("MSSOAP.SoapClient30");
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Попытка
        Инициализация = oSOAPClient.mssoapinit(ИмяСервиса, "", "", "");
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Попытка
        Подключение = oSOAPClient.Relationships(Login, Password, "5000");
        СтрокаХML = Подключение.item(1).text;  
		ИмяФайла = ""+КаталогИБ()+"ПриемОтправкаEDO\ФайлСодинения.xml";
	 
		ТекстДляФайла = СоздатьОбъект("Текст");
		ТекстДляФайла.ДобавитьСтроку(СтрокаХML);
		ТекстДляФайла.Записать(ИмяФайла);
		
        КодОшибкиПодключения = Подключение.item(0).text;
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Если КодОшибкиПодключения <> "00000000" Тогда
        Сообщить("Код ошибки подключения = " + КодОшибкиПодключения);
        Возврат;
    КонецЕсли;
         
	ТекстXMLДокумента 	= ПолучитьДанныеXMLДокумента(ДокументЗаказ);
	ControlNumber 		= ДокументЗаказ.НомерДок;
	
	Попытка
		Документ = oSOAPClient.Send(Login, Password, Partner_ID, "ORDERRSP","ECODRU1", "XML", "P", ControlNumber, ТекстXMLДокумента, "5000");
		ИдентификаторДокументаXML = Документ.item(1).text;
		КодОшибкиДокументаXML 	= Документ.item(0).text;
		Если КодОшибкиДокументаXML <> "00000000" Тогда
			Сообщить("Код ошибки доставки документа " + ControlNumber + " = " + КодОшибкиДокументаXML);
		КонецЕсли;
		ЗаписатьИдентификаторПодтвержденияДокумента(ДокументЗаказ, ИдентификаторДокументаXML);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
    

КонецПроцедуры

Процедура ПолучитьЗаказыПокупателяMSSOAP(ДатаНачала, ДатаКонца, Login="Ваш логин", Password="Ваш пароль", Partner_ID="GLN Партнера", OUR_ID="GLN Наш")

    ИмяСервиса = "https://www.ecod.pl/webserv2/EDIservice.asmx?WSDL";

    Попытка
        oSOAPClient = СоздатьОбъект("MSSOAP.SoapClient30");
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Попытка
        Инициализация = oSOAPClient.mssoapinit(ИмяСервиса, "", "", "");
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Попытка
        Подключение = oSOAPClient.Relationships(Login, Password, "5000");
        СтрокаХML = Подключение.item(1).text;  
		ИмяФайла = ""+КаталогИБ()+"ПриемОтправкаEDO\ФайлСодинения.xml";
	 
		ТекстДляФайла = СоздатьОбъект("Текст");
		ТекстДляФайла.ДобавитьСтроку(СтрокаХML);
		ТекстДляФайла.Записать(ИмяФайла);
		
        КодОшибкиПодключения = Подключение.item(0).text;
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Если КодОшибкиПодключения <> "00000000" Тогда
        Сообщить("Код ошибки подключения = " + КодОшибкиПодключения);
        Возврат;
    КонецЕсли;

    ДатаНачалаECOD = ПривестиДатуКВидуECOD(ДатаНачала);
    ДатаКонцаECOD  = ПривестиДатуКВидуECOD(ДатаКонца);

    // Возвращает массив tracking-id документов, доставленных пользователю ECOD
    Попытка
        Доставка = oSOAPClient.ListMBEx(Login, Password, Partner_ID, "ORDER", "RU1", "XML", "P",
                        "", "", "", "", "N", "5000");
        СтрокаДоставки = Доставка.item(1).text;
		
		ИмяФайла = ""+КаталогИБ()+"ПриемОтправкаEDO\ФайлДоставки.xml";
	 
		ТекстДляФайла = СоздатьОбъект("Текст");
		ТекстДляФайла.ДобавитьСтроку(СтрокаДоставки);
		ТекстДляФайла.Записать(ИмяФайла);
		
        КодОшибкиДоставки = Доставка.item(0).text;
    Исключение
        Сообщить(ОписаниеОшибки());
        Возврат;
    КонецПопытки;

    Если КодОшибкиДоставки <> "00000000" Тогда
        Сообщить("Код ошибки идентификации документов = " + КодОшибкиДоставки);
        Возврат;
    КонецЕсли;

    // Теперь соберём массив идентификаторов документов tracking-id
    МассивИдентификаторов = ПолучитьМассивИдентификаторовДокументовECOD(СтрокаДоставки);

    // Теперь для каждого идентификатора получим документ    
	КолЭлементов = МассивИдентификаторов.РазмерСписка();
    Для эл=1 по КолЭлементов Цикл    
		Элемент = "";
		Элемент = МассивИдентификаторов.ПолучитьЗначение(эл);
        Попытка
            Документ = oSOAPClient.Receive(Login, Password, Partner_ID, "ORDER", Элемент, "XML", "R", "5000");
            СтрокаДокументаXML 		= Документ.item(1).text;
            КодОшибкиДокументаXML 	= Документ.item(0).text;
            Если КодОшибкиДокументаXML <> "00000000" Тогда
                Сообщить("Код ошибки доставки документа " + Элемент + " = " + КодОшибкиДокументаXML);
                Продолжить;
			КонецЕсли;   
			
			ИмяФайла = ""+КаталогИБ()+"ПриемОтправкаEDO\ФайлДокумента"+эл+".xml";
			ТекстДляФайла = СоздатьОбъект("Текст");
			ТекстДляФайла.ДобавитьСтроку(СтрокаДокументаXML);
			ТекстДляФайла.Записать(ИмяФайла);
		
            СформироватьЗаказПокупателяECODИзСтрокиXML(СтрокаДокументаXML, Элемент);
        Исключение
            Сообщить(ОписаниеОшибки());
            Продолжить;
        КонецПопытки;
    КонецЦикла;

КонецПроцедуры