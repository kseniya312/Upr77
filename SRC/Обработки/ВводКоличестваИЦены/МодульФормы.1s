////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем Номенклатура, Валюта, Коэффициент, ПарамЦена;
Перем ВиденФлагКомплектующие, ОтработалаПриИзмененииЦены;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ПриИзмененииФлагаДобавитьКомплектующие()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//     
// Вызывается из формул диалога
// при изменении флага ДобавитьКомплектующие
//
// Описание:
//  ТекстОписания
//
Процедура ПриИзмененииФлагаДобавитьКомплектующие()
	
	Если ДобавлятьКомплектующие = 1 Тогда
		// В этом случае цены не задаются (они заданы для каждого комплектующего в отдельности)
		Форма.Цена.Доступность(0);
	Иначе
		Форма.Цена.Доступность(1);
	КонецЕсли;

КонецПроцедуры // ПриИзмененииФлагаДобавитьКомплектующие()

//******************************************************************************
// ОК()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  кнопка "Ок"
//
// Описание:
//  Передаем в вызывавший обработку модуль результаты
//
Процедура ОК()
	
	Форма.Параметр.Установить("Количество"	, Количество);
	Форма.Параметр.Установить("Единица"		, Единица);
	Форма.Параметр.Установить("Цена"		, Цена);
	Форма.Параметр.Установить("ДобавлятьКомплектующие"		, ДобавлятьКомплектующие);
	Форма.Параметр.Установить("СтатусВозврата"	, 1);
	
КонецПроцедуры

//******************************************************************************
// ПриИзмененииЕдиницы()
//
// Параметры: 
//  Нет
//
// Вызывается из формул элементов диалога
// Поле ввода единица
// 
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Пересчитывает цену при изменении единицы
Процедура ПриИзмененииЕдиницы()
	
	// сохраним старый коэффициент
	ВремКоэфф = Коэффициент;
	
	// заполним коэффициент из единицы
	Коэффициент = Единица.Коэффициент;
	Если ВремКоэфф <> 0 Тогда
		
		// цена была за другой коэффициент. Пересчитываем
		Цена = Цена * Коэффициент / ВремКоэфф;         
	КонецЕсли;
		
КонецПроцедуры // ПриИзмененииЕдиницы()

//******************************************************************************
// ПриИзмененииЦены()
//
// Параметры: 
//  Нет
//
// Вызывается из формул элементов диалога
// Поле ввода цена
// 
// Возвращаемое значение:
//  Нет
//
// Описание:
//  При нажатии на кнопку Enter в поле Цена выполняет действия,
//  как по кнопке ОК, и закрывает форму
//
Процедура ПриИзмененииЦены()
	
	Если (Цена <> 0) И (ВиденФлагКомплектующие = 0) Тогда
		
		// Количество и цену в возвращаемый параметр прописываем при закрытии
        ОтработалаПриИзмененииЦены = 1;
		Форма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииЦены()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
// *****************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
		Предупреждение("Обработка вызывается только из формы подбора!", 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Номенклатура = Форма.Параметр.Получить("Номенклатура");
	Количество   = Форма.Параметр.Получить("Количество");
	Единица		 = Форма.Параметр.Получить("Единица");
	ПарамЦена	 = Форма.Параметр.Получить("Цена");
	Валюта 		 = Форма.Параметр.Получить("Валюта");
	Коэффициент  = Единица.Коэффициент; // заполним коэффициент из единицы
	
	Если ТипЗначенияСтр(ПарамЦена) = "СписокЗначений" Тогда
		// запрещаем редактировать цену. только выбор из спсика
		Форма.Цена.Редактирование(0);
		Если ПарамЦена.РазмерСписка() > 0 Тогда
			Цена = ПарамЦена.ПолучитьЗначение(1);
		КонецЕсли;
	Иначе
		Цена = ПарамЦена;
	КонецЕсли;
	
	Если ПустоеЗначение(глКомплектуется(Номенклатура)) = 0 Тогда
		ВиденФлагКомплектующие	= 1;
		
		// Работает с комплектом
		ДобавлятьКомплектующие =  ВосстановитьЗначение("ДобавлятьКомплектующие");
		Если ПустоеЗначение(ДобавлятьКомплектующие) = 1  Тогда
		    ДобавлятьКомплектующие = 0;
		Иначе
			ДобавлятьКомплектующие = 1;
			
			// В этом случае цены не задаются (они заданы для каждого комплектующего в отдельности)
			Форма.Цена.Доступность(0);
		КонецЕсли;
		
	Иначе // Обычный товар или услуга
		ВиденФлагКомплектующие	= 0;
		Форма.ДобавлятьКомплектующие.Видимость(0);
	КонецЕсли;
	
	Форма.Заголовок("Количество и цена """ + Номенклатура+ """");
	Форма.Параметр.Установить("СтатусВозврата"	, 0);     
	
	Если (глПолучитьПолномочие("РазрешитьРедактированиеЦенВдокументах") = 0)
	   и (ТипЗначенияСтр(ПарамЦена) <> "СписокЗначений") Тогда
		Форма.Цена.Доступность(0);
	КонецЕсли;
	
	Если ТипЗначенияСтр(ПарамЦена) = "СписокЗначений" Тогда
		Форма.Единица.Доступность(0);
	КонецЕсли;
	
	Активизировать("Количество");

КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	Перем Параметр;
	
	Если ИдентЭлемДиалога = "Цена" Тогда
		Если ТипЗначенияСтр(ПарамЦена) = "СписокЗначений" Тогда
			ФлагСтандОбр = 0;
			ПарамЦена.ВыбратьЗначение(Цена,,, 60,2);
		КонецЕсли;
	ИначеЕсли ИдентЭлемДиалога = "Единица" Тогда
		ФлагСтандОбр = 0;
		Параметр = Номенклатура;
		ОткрытьФорму("Справочник.Единицы", Параметр);
		
		Если Форма.МодальныйРежим() = 1 Тогда
			Единица = Параметр;
			ПриИзмененииЕдиницы();
		КонецЕсли;
	КонецЕсли;                             
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	Если Форма.АктивныйЭлемент() = "кнОтмена" Тогда  // Нажата кнопка "Отмена"
		Форма.Параметр.Установить("СтатусВозврата"	, 0);
	ИначеЕсли ОтработалаПриИзмененииЦены = 1 Тогда // Прописываем возвращаемые количество и цену
		ОК();
	КонецЕсли;
	Если ПустоеЗначение(глКомплектуется(Номенклатура)) = 0 Тогда
		// Работаем с комплектом
		СохранитьЗначение("ДобавлятьКомплектующие", ДобавлятьКомплектующие);
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
ОтработалаПриИзмененииЦены = 0;