////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем КонтДок;                             // Контекст формы модифицируемого документа
Перем КонтДокВид;                          // Вид документа
Перем КонтДокВалюта, КонтДокПроцентСкидки,
      КонтДокДатаДок, КонтДокКурс;         // Реквизиты документа
Перем СписокКолонокТаблицы;                // Список колонок таблицы формы
Перем МеткаЕсть, МеткиНет;                 // Номера иконок пометки строки таблицы
Перем ТаблицаЭталон;                       // Таблица значений, отформатированная (параметры колонки) эталонным образом
Перем СуммаВклНДС, СуммаВклНП;             // Флаги учета сумм налогов
Перем МожноОприходоватьПродукцию;          // Флаг того, что можно устанавливать вид ТМЦ "Продукция"
Перем ЕстьПолномочиеМенятьЦены;            // Флаг того, что полномочия пользователя разрешают вручную менять стоимостные характеристики           
Перем БылиИзменения;                       // Флаг того, что были сделаны изменения спецификации документа 
Перем СписокУдаленныхСтрок;                // Список, содержащий номера строк, которые надо удалить из документа

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПриИзмененииТекущегоДействия()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Список действий
// 
// Описание:
//  Изменяет тип выбираемого значения взависимости от текущего действия
//
Процедура ПриИзмененииТекущегоДействия()
	
	ТекСтрока = СписокДействий.ТекущаяСтрока();
	Если ТекСтрока > 0 Тогда
		ВыбЗначение = "";
		ТекДействие = СписокДействий.ПолучитьЗначение(ТекСтрока);
		Если ТекДействие = "Изменить цену на (в %)" Тогда
			Форма.ВыбЗначение.НазначитьТип("Число",7,3);
		ИначеЕсли ТекДействие = "Изменить цену на (в ед. валюты)" Тогда
			Форма.ВыбЗначение.НазначитьТип("Число",15,2);
		ИначеЕсли ТекДействие = "Округлить цены до" Тогда
			Форма.ВыбЗначение.НазначитьТип("Перечисление.ПорядкиОкругления");
		ИначеЕсли ТекДействие = "Распределить сумму по суммам" Тогда
			Форма.ВыбЗначение.НазначитьТип("Число",15,2);
		ИначеЕсли ТекДействие = "Распределить сумму по количеству" Тогда
			Форма.ВыбЗначение.НазначитьТип("Число",15,2);
		КонецЕсли;
		
		// При удалении выбирать нечего
		Если ТекДействие = "Удалить" Тогда
			Форма.ВыбЗначение.Видимость(0);
		Иначе    
			Форма.ВыбЗначение.Видимость(1);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры // ПриИзмененииТекущегоДействия()


//******************************************************************************
// ЕстьКолонка(КодКолонки)
//
// Параметры: 
//  КодКолонки - строка с кодом колонки.
//
// Возвращаемое значение:
//  1 - есть колонка, 
//  0 - если колонки с таким кодом нет
//
// Описание:
//  Опеределяет есть ли в таблице формы колонка с тем или иным кодом
//
Функция ЕстьКолонка(КодКолонки)
	Возврат ?(СписокКолонокТаблицы.НайтиЗначение(КодКолонки) > 0, 1, 0); 
КонецФункции // ЕстьКолонка()

//******************************************************************************
// СуммаИтого()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Статик текста суммы итого
// 
// Описание:
//  Считает сумму помеченных позиций таблицы, выводит информационную строку
//
Функция СуммаИтого()
	
	Результат = "";
	РезСумма  = 0;
	РезНДС    = 0;
	РезНП     = 0;
	
	ЕстьСумма = ЕстьКолонка("Сумма");
	ЕстьНДС   = ЕстьКолонка("СуммаНДС"); 
	ЕстьНП    = ЕстьКолонка("СуммаНП");
	
	ТаблицаНоменклатуры.ВыбратьСтроки();
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
			Продолжить; // не помеченные строки не учитыаем
		КонецЕсли;
		
		Если ЕстьСумма = 1 Тогда
			РезСумма = РезСумма + ТаблицаНоменклатуры.Сумма;
		КонецЕсли;
		
		Если ЕстьНДС = 1 Тогда
			РезНДС = РезНДС + ТаблицаНоменклатуры.СуммаНДС;
		КонецЕсли;
		Если ЕстьНП = 1 Тогда
			РезНП  = РезНП + ТаблицаНоменклатуры.СуммаНП;
		КонецЕсли;
	КонецЦикла;
		
	Если (ЕстьСумма   = 1)
	   и (СуммаВклНДС = 0) Тогда
		РезСумма = РезСумма + РезНДС;
	КонецЕсли;
	
	Если (ЕстьСумма   = 1)
	   и (СуммаВклНП  = 0) Тогда
		РезСумма = РезСумма + РезНП;
	КонецЕсли;
	
		Результат = Результат + ?(РезСумма = 0, "", "Итого: " + глФРМ(РезСумма, КонтДокВалюта));  
		Результат = Результат + ?(РезНДС   = 0, "", ?(ПустоеЗначение(Результат) = 1,"",", ") + 
		                                            "НДС: "   + глФРМ(РезНДС ,  КонтДокВалюта));  
		Результат = Результат + ?(РезНП    = 0, "", ?(ПустоеЗначение(Результат) = 1,"",", ") + 
		                                            "НП: "    + глФРМ(РезНП,    КонтДокВалюта));  
	Возврат	Результат;
	
КонецФункции // СуммаИтого()
 
//******************************************************************************
// ГрупповаяПометка(Режим)
//
// Параметры: 
//  Режим:
//   1 - пометить все
//   2 - снять пометку
//   3 - инвертировать пометку
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
// кнопки групповой пометки
//
// Описание:
//  Производит групповые действия с пометкой строк таблицы формы
//
Процедура ГрупповаяПометка(Режим)
	
	ТаблицаНоменклатуры.ВыбратьСтроки();
	
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
		
		Если Режим=1 Тогда              
			
			ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			
		ИначеЕсли Режим=2 Тогда
			
			ТаблицаНоменклатуры.Пометка = МеткиНет;
			
		ИначеЕсли Режим=3 Тогда
			
			Если ТаблицаНоменклатуры.Пометка=МеткиНет Тогда
				ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			Иначе
				ТаблицаНоменклатуры.Пометка = МеткиНет;
			КонецЕсли;                           
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры // ГрупповаяПометка()

//******************************************************************************
// ПолучитьЦенуИзСправочника(Цена, ТипЦен)
//
// Параметры:
//  Цена   - цена полученная из справочника
//  ТипЦен - тип цены, который необходимо получить
//
// Возвращаемое значение:
//  1 - если есть такая цена, пераметры цены заполнены
//  0 - нет такой цены, или она помечена на удаление
//
// Описание:
//  Возвращает через параметр цену текущего ТМЦ,
// полученную из справочника, пересчитанную согласно контекста
//
Функция ПолучитьЦенуИзСправочника(Цена, ТипЦен)
	
	Перем ЕдЦены, ВалютаЦены;
	
	ТекТМЦ = ТаблицаНоменклатуры.Номенклатура;
	
 	Если ПустоеЗначение(ТекТМЦ) = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	// получим параметры цены из справочника
	Если глВернутьЦену(ТекТМЦ, ТипЦен, КонтДокДатаДок,
					  Цена, ЕдЦены, ВалютаЦены) <> 1 Тогда
		Сообщить("Для ТМЦ: "+ТекТМЦ.Наименование+" не удалось определить цену. Цена не обновлена.");
		Возврат 0; // для ТМЦ цены нет
	КонецЕсли;
	
	ЦенаВклНП	= ТипЦен.ЦенаВклНП;
	ЦенаВклНДС	= ТипЦен.ЦенаВклНДС;
	
	// Учитываем флаги включения налогов
	// Если в документе флаг "Учитывать налог" выключен, 
	// то цены должны браться напрямую из справочника.
	// Если же флаг включен, то цены должны пересчитываться при подстановке в документ: 
	// налог должен включаться или исключаться…
	НадоВключитьНП   = 0;
	НадоИсключитьНП  = 0;
	НадоВключитьНДС  = 0;
	НадоИсключитьНДС = 0;               
	
	// получим ставки налогов из справочника
	СтавкаНПТМЦ  = ТекТМЦ.СтавкаНП.Ставка;
	СтавкаНДСТМЦ = ТекТМЦ.СтавкаНДС;
	
	Если (ЕстьКолонка("СуммаНП") = 1) и (ЕстьКолонка("СтавкаНП") = 1) Тогда
		СтавкаНПКонт = ТаблицаНоменклатуры.СтавкаНП.Ставка;
		Если (СуммаВклНП = 1) и (ЦенаВклНП = 0) Тогда
			НадоВключитьНП = 1; // Надо добавлять НП
		ИначеЕсли (СуммаВклНП = 0) и (ЦенаВклНП = 1) Тогда
			НадоИсключитьНП = 1; // Надо исключать НП
		КонецЕсли;
	КонецЕсли;
	
	Если (ЕстьКолонка("СуммаНДС") = 1) и (ЕстьКолонка("СтавкаНДС") = 1) Тогда
		СтавкаНДСКонт = ТаблицаНоменклатуры.СтавкаНДС;
		Если (СуммаВклНДС = 1) и (ЦенаВклНДС = 0 ) Тогда
			НадоВключитьНДС = 1; // Надо добавлять НДС
		ИначеЕсли (СуммаВклНДС = 0) и (ЦенаВклНДС = 1 ) Тогда
			НадоИсключитьНДС = 1; // Надо исключать НДС
		КонецЕсли;
	КонецЕсли;
	
	Если НадоИсключитьНП = 1 Тогда
		Цена = (Цена*100)/(100+ СтавкаНПТМЦ);
	КонецЕсли;
	Если НадоИсключитьНДС = 1 Тогда
		Цена = Цена - Цена*глВыделяемыйНДС(СтавкаНДСТМЦ);
	КонецЕсли;
	Если НадоВключитьНДС = 1 Тогда
		Цена = Цена + Цена*глНачисляемыйНДС(СтавкаНДСКонт);
	КонецЕсли;     
	Если НадоВключитьНП = 1 Тогда
		Цена = (Цена*(100+ СтавкаНПКонт))/100;
	КонецЕсли;
		
	// пересчет единиц
 	Если ЕстьКолонка("Единица") = 1 Тогда
 		Если ЕстьКолонка("Коэффициент") = 1 Тогда
			ВремКоэфф = ЕдЦены.Коэффициент; // сохраним коэффициент цены из справочника
			Если ВремКоэфф <> 0 Тогда
				Цена = Цена * ТаблицаНоменклатуры.Коэффициент / ВремКоэфф;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// пересчет валюты
	Цена = глПересчет(Цена, ВалютаЦены, КонтДокДатаДок, КонтДокВалюта, КонтДокКурс);
	
	Возврат 1; // цену определить удалось

КонецФункции // ПолучитьЦенуИзСправочника()

//******************************************************************************
// ПолучитьРозничнуюЦенуИзСправочника(РознЦена)
//
// Параметры:
//  РознЦена - цена полученная из справочника
//
// Возвращаемое значение:
//  1 - если есть такая цена, пераметры цены заполнены
//  0 - нет такой цены, или она помечена на удаление
//
// Описание:
//  Возвращает через параметр розничную цену текущего ТМЦ,
// полученную из справочника, пересчитанную согласно контекста
//
Функция ПолучитьРозничнуюЦенуИзСправочника(РознЦена)
	
	Перем ЕдЦены, ВалютаЦены;
	
	ТипЦен = Константа.РозничныйТипЦен;
	ТекТМЦ = ТаблицаНоменклатуры.Номенклатура;
	
 	Если ПустоеЗначение(ТекТМЦ) = 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	// получим параметры цены из справочника
	Если глВернутьЦену(ТекТМЦ, ТипЦен, КонтДокДатаДок,
					  РознЦена, ЕдЦены, ВалютаЦены) <> 1 Тогда
		Сообщить("Для ТМЦ: "+ТекТМЦ.Наименование+" не удалось определить розничную цену. Розничная цена не обновлена.");
		Возврат 0; // для ТМЦ цены нет
	КонецЕсли;
	ЦенаВклНП	= ТипЦен.ЦенаВклНП;
	ЦенаВклНДС	= ТипЦен.ЦенаВклНДС;
	
	// Учитываем флаги включения налогов
	// Если в справочнике флаг "Налог включен в цену" включен, 
	// то цены должны браться напрямую из справочника.
	// Если же флаг выключен, то цены должны пересчитываться: 
	// налог должен включаться.
	НадоИсключитьНП  = 0;
	НадоВключитьНДС  = 0;
	НадоВключитьНП   = 0;
	
	// получим ставки налогов из справочника
	СтавкаНПТМЦ  = ТекТМЦ.СтавкаНП.Ставка;
	СтавкаНДСТМЦ = ТекТМЦ.СтавкаНДС;
		
	Если ЦенаВклНДС = 0 Тогда
		НадоВключитьНДС = 1; // Надо добавлять НДС
	КонецЕсли;
	Если ЦенаВклНП = 0 Тогда
		НадоВключитьНП = 1; // Надо добавлять НП
	КонецЕсли;
	Если (ЦенаВклНДС = 0) и (ЦенаВклНП = 1) Тогда
		НадоИсключитьНП = 1;	// Надо сначала исключать НП,
		НадоВключитьНП = 1;		// а потом добавлять НП
	КонецЕсли;
	
	Если НадоИсключитьНП = 1 Тогда
		РознЦена = (РознЦена*100)/(100+ СтавкаНПТМЦ);
	КонецЕсли;
	Если НадоВключитьНДС = 1 Тогда
		РознЦена = РознЦена + РознЦена*глНачисляемыйНДС(СтавкаНДСТМЦ);
	КонецЕсли;     
	Если НадоВключитьНП = 1 Тогда
		РознЦена = (РознЦена*(100+ СтавкаНПТМЦ))/100;
	КонецЕсли;
	
	// пересчет единиц
 	Если ЕстьКолонка("Единица") = 1 Тогда
 		Если ЕстьКолонка("Коэффициент") = 1 Тогда
 			
			// сохраним коэффициент цены из справочника
			ВремКоэфф = ЕдЦены.Коэффициент;
		
			Если ВремКоэфф <> 0 Тогда
			
				// цена в справочнике указана за другой коэффициент. Пересчитываем
				РознЦена = РознЦена * ТаблицаНоменклатуры.Коэффициент / ВремКоэфф;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// пересчет валюты
	РознЦена = глПересчет(РознЦена, ВалютаЦены, КонтДокДатаДок, глРубли, КонтДокДатаДок);
	
	Возврат 1; // розн.цену определить удалось

КонецФункции // ПолучитьРозничнуюЦенуИзСправочника()

//******************************************************************************
//  РасчетНалога(Конт,ВидНалога) 
//
// Параметры: 
//  ВидНалога - строка "НДС" или "НП"
//
// Возвращаемое значение: 
//  Нет
//
// Описание:
// 	Рассчитываем сумму налога в текущей строке таблицы формы.
//
Процедура РасчетНалога(ВидНалога) 
	                                                       
	ЕстьНП		= ЕстьКолонка("СуммаНП");
	СтНП=0;
	Если ЕстьНП=1 Тогда
		СтНП	=?(ЕстьКолонка("СтавкаНП") = 1, ТаблицаНоменклатуры.СтавкаНП.Ставка / 100, 0);
	КонецЕсли;
	
	СтавкаНДС	=?(ЕстьКолонка("СтавкаНДС") = 1,ТаблицаНоменклатуры.СтавкаНДС,Перечисление.СтавкиНДС.БезНДС);
	
	Если Врег(ВидНалога) = "НДС" Тогда
		БазаНалога=ТаблицаНоменклатуры.Сумма;
		Если ЕстьНП=1 Тогда
			Если СуммаВклНП = 1 Тогда
				БазаНалога = ТаблицаНоменклатуры.Сумма / (1 + СтНП);
			КонецЕсли;	
		КонецЕсли;
		Если СуммаВклНДС = 1 Тогда
			ТаблицаНоменклатуры.СуммаНДС = БазаНалога * глВыделяемыйНДС(СтавкаНДС); 
		Иначе
			ТаблицаНоменклатуры.СуммаНДС = БазаНалога * глНачисляемыйНДС(СтавкаНДС);
		КонецЕсли;
		
	ИначеЕсли Врег(ВидНалога) = "НП" Тогда
		Если СуммаВклНДС = 1 Тогда
			БазаНалога = ТаблицаНоменклатуры.Сумма;
		Иначе     
			БазаНалога = ТаблицаНоменклатуры.Сумма * ( 1 + глНачисляемыйНДС(СтавкаНДС));
		КонецЕсли;
		Если СуммаВклНП = 1 Тогда
			ТаблицаНоменклатуры.СуммаНП = БазаНалога * СтНП / (1 + СтНП);
		Иначе     
			ТаблицаНоменклатуры.СуммаНП = БазаНалога * СтНП;
		КонецЕсли;             
	Иначе
		Сообщить("РасчетНалога(ВидНалога):неверный вид налога: "+ВидНалога,"i");
	КонецЕсли;     
	
КонецПроцедуры //РасчетНалога()

//******************************************************************************
// ПолучитьЦенуСНалогами()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  число - цена с налогами в текущей строке таблицы
//
// Описание:
//  Нет
//
Функция ПолучитьЦенуСНалогами()
	
	Перем ЦенаСНалогами;
	
	ЕстьНП    = ЕстьКолонка("СуммаНП");
	СтавкаНП=0;
	Если ЕстьНП=1 Тогда
		СтавкаНП=?(ЕстьКолонка("СтавкаНП") = 1, ТаблицаНоменклатуры.СтавкаНП.Ставка / 100, 0);
	КонецЕсли;
	ЕстьНДС   = ЕстьКолонка("СуммаНДС");
	Если ЕстьНДС = 1 Тогда
		СтавкаНДС	=?(ЕстьКолонка("СтавкаНДС") = 1,ТаблицаНоменклатуры.СтавкаНДС,Перечисление.СтавкиНДС.БезНДС);
	КонецЕсли;

	ЦенаСНалогами = ТаблицаНоменклатуры.Цена;
	Если ЕстьНДС = 1 Тогда
		Если СуммаВклНДС = 0 Тогда // Надо включить НДС
			ЦенаСНалогами= ЦенаСНалогами + ЦенаСНалогами * глНачисляемыйНДС(СтавкаНДС);
		КонецЕсли;
	КонецЕсли;
	Если ЕстьНП = 1 Тогда
		Если СуммаВклНП = 0 Тогда // Надо включить НП
			ЦенаСНалогами = (ЦенаСНалогами*(100+ СтавкаНП))/100;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЦенаСНалогами;
	
КонецФункции // ПолучитьЦенуСНалогами()

//******************************************************************************
// ПересчитатьСтрокуТаблицы(КодКолонки)
//
// Параметры: 
//  КодКолонки - строка, код колонки, которую поменяли.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Пересчитывает текущую строку таблицы формы, в зависимости от измененной колонки
//
Процедура ПересчитатьСтрокуТаблицы(КодКолонки)
	
	Перем ПорядокОкрРозничнойЦены; // порядок округления розничной цены
	
	ПорядокОкрРозничнойЦены = 0.01;
	Если Константа.РозничныйТипЦен.Выбран() = 1 Тогда
		ПорядокОкрРозничнойЦены = Константа.РозничныйТипЦен.ПорядокОкругления;			    
	КонецЕсли;
	
	Если КодКолонки = "Количество" Тогда
		
	 	Если (ЕстьКолонка("Сумма") = 1)
	 	   и (ЕстьКолонка("Цена")  = 1) Тогда
			ТаблицаНоменклатуры.Сумма = ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество -
			                            КонтДокПроцентСкидки / 100 * ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество;
	 	КонецЕсли;                
									
	 	Если ЕстьКолонка("СуммаНП")  = 1 Тогда
		    РасчетНалога("НП");
		КонецЕсли;
		
	 	Если ЕстьКолонка("СуммаНДС") = 1 Тогда
		    РасчетНалога("НДС");
		КонецЕсли;
		
	 	Если ЕстьКолонка("ТаможеннаяСтоимость")  = 1 Тогда
			ТаблицаНоменклатуры.ТаможеннаяСтоимость = глПересчет(ТаблицаНоменклатуры.Сумма,КонтДокВалюта,КонтДокКурс,глРубли,КонтДокДатаДок);
			
		 	Если ( ЕстьКолонка("СуммаПошлиныРуб")  = 1)
		 	   и ( ЕстьКолонка("СтавкаПошлины")    = 1) 
		 	   и ( ЕстьКолонка("СтавкаНДС")        = 1) 
		 	   и ( ЕстьКолонка("СуммаНДСРуб")      = 1) Тогда // ПоступлениеТМЦИмпорт
				ТаблицаНоменклатуры.СуммаПошлиныРуб 	= ТаблицаНоменклатуры.ТаможеннаяСтоимость * ТаблицаНоменклатуры.СтавкаПошлины / 100;
        	    БазаНДС = ТаблицаНоменклатуры.ТаможеннаяСтоимость + ТаблицаНоменклатуры.СуммаПошлиныРуб;
				ТаблицаНоменклатуры.СуммаНДСРуб	= БазаНДС * глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);//0.20, 0.20004...
			КонецЕсли;
		КонецЕсли;
		
	 	ПересчитатьСтрокуТаблицы("БезСкидки");
	 	ПересчитатьСтрокуТаблицы("СуммаСкидки");
	 	ПересчитатьСтрокуТаблицы("Всего");
	 	
	ИначеЕсли (КодКолонки = "Единица") и (ЕстьКолонка("Коэффициент") = 1) Тогда
	 	
		// сохраним старый коэффициент
		ВремКоэфф = ТаблицаНоменклатуры.Коэффициент;
	
		// заполним коэффициент в документе из единицы
		ТаблицаНоменклатуры.Коэффициент = ТаблицаНоменклатуры.Единица.Коэффициент;
		Если (ВремКоэфф <> 0) Тогда
			Если ЕстьКолонка("Цена") = 1 Тогда
				// цена была за другой коэффициент. Пересчитываем
				ТаблицаНоменклатуры.Цена = ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Коэффициент / ВремКоэфф;
		 		Если ЕстьКолонка("Сумма") = 1 Тогда
					ТаблицаНоменклатуры.Сумма = ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество - 
					                            КонтДокПроцентСкидки / 100 * ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество;
					Если ЕстьКолонка("СуммаНП")  = 1 Тогда
						РасчетНалога("НП");
					КонецЕсли;
					Если ЕстьКолонка("СуммаНДС") = 1 Тогда
						РасчетНалога("НДС");
					КонецЕсли;
					
					ПересчитатьСтрокуТаблицы("БезСкидки");
					ПересчитатьСтрокуТаблицы("СуммаСкидки");
					ПересчитатьСтрокуТаблицы("Всего");
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьКолонка("РозничнаяЦена") = 1 Тогда
				
				// Розничная цена была за другой коэффициент. Пересчитываем и округляем
				ТаблицаНоменклатуры.РозничнаяЦена = глОкруглить(ТаблицаНоменклатуры.РозничнаяЦена * ТаблицаНоменклатуры.Коэффициент / ВремКоэфф, ПорядокОкрРозничнойЦены);
			КонецЕсли;
	 		
		КонецЕсли;
		
	 	Если ЕстьКолонка("ТаможеннаяСтоимость")  = 1 Тогда
			ТаблицаНоменклатуры.ТаможеннаяСтоимость = глПересчет(ТаблицаНоменклатуры.Сумма,КонтДокВалюта,КонтДокКурс,глРубли,КонтДокДатаДок);
			
		 	Если ( ЕстьКолонка("СуммаПошлиныРуб")  = 1)
		 	   и ( ЕстьКолонка("СтавкаПошлины")    = 1) 
		 	   и ( ЕстьКолонка("СтавкаНДС")        = 1) 
		 	   и ( ЕстьКолонка("СуммаНДСРуб")      = 1) Тогда // ПоступлениеТМЦИмпорт
				ТаблицаНоменклатуры.СуммаПошлиныРуб 	= ТаблицаНоменклатуры.ТаможеннаяСтоимость * ТаблицаНоменклатуры.СтавкаПошлины / 100;
        	    БазаНДС = ТаблицаНоменклатуры.ТаможеннаяСтоимость + ТаблицаНоменклатуры.СуммаПошлиныРуб;
				ТаблицаНоменклатуры.СуммаНДСРуб	= БазаНДС * глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);//0.20, 0.20004...
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "Цена" Тогда
		
 		Если ЕстьКолонка("Сумма") = 1 Тогда
			ТаблицаНоменклатуры.Сумма = ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество - 
			                            КонтДокПроцентСкидки / 100 * ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество;
			Если ЕстьКолонка("СуммаНП")  = 1 Тогда
				РасчетНалога("НП");
			КонецЕсли;
			Если ЕстьКолонка("СуммаНДС") = 1 Тогда
				РасчетНалога("НДС");
			КонецЕсли;
					
		 	Если ЕстьКолонка("ТаможеннаяСтоимость")  = 1 Тогда
				ТаблицаНоменклатуры.ТаможеннаяСтоимость = глПересчет(ТаблицаНоменклатуры.Сумма,КонтДокВалюта,КонтДокКурс,глРубли,КонтДокДатаДок);
				
		 		Если ( ЕстьКолонка("СуммаПошлиныРуб")  = 1)
			 	   и ( ЕстьКолонка("СтавкаПошлины")    = 1) 
			 	   и ( ЕстьКолонка("СтавкаНДС")        = 1) 
			 	   и ( ЕстьКолонка("СуммаНДСРуб")      = 1) Тогда // ПоступлениеТМЦИмпорт
					ТаблицаНоменклатуры.СуммаПошлиныРуб 	= ТаблицаНоменклатуры.ТаможеннаяСтоимость * ТаблицаНоменклатуры.СтавкаПошлины / 100;
        	    	БазаНДС = ТаблицаНоменклатуры.ТаможеннаяСтоимость + ТаблицаНоменклатуры.СуммаПошлиныРуб;
					ТаблицаНоменклатуры.СуммаНДСРуб	= БазаНДС * глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);//0.20, 0.20004...
				КонецЕсли;
			КонецЕсли;
			
			ПересчитатьСтрокуТаблицы("БезСкидки");
			ПересчитатьСтрокуТаблицы("СуммаСкидки");
			ПересчитатьСтрокуТаблицы("Всего");
		КонецЕсли;
		
		Если ЕстьКолонка("РозничнаяНаценка") = 1 Тогда
			ПересчитатьСтрокуТаблицы("РозничнаяНаценка"); // Если есть розничная цена, то расчитаем ее из наценки
		КонецЕсли;
		
	ИначеЕсли (КодКолонки = "РозничнаяЦена") и (ЕстьКолонка("РозничнаяНаценка") = 1) Тогда
 			
		// Рассчитаем и установим розничную наценку
		ЦенаСНалогами = ПолучитьЦенуСНалогами();
		Если ЦенаСНалогами <> 0 Тогда                                                     
			РознЦена = ТаблицаНоменклатуры.РозничнаяЦена;
			Если ПустоеЗначение(КонтДокВалюта) = 0 Тогда 
				РознЦена = глПересчет(ТаблицаНоменклатуры.РозничнаяЦена, глРубли, 1, КонтДокВалюта, КонтДокКурс);
			КонецЕсли;
			ТаблицаНоменклатуры.РозничнаяНаценка = (РознЦена - ЦенаСНалогами) / ЦенаСНалогами * 100;    
		Иначе
			ТаблицаНоменклатуры.РозничнаяНаценка = 0;
		КонецЕсли;
		
	ИначеЕсли (КодКолонки = "РозничнаяНаценка") и (ЕстьКолонка("РозничнаяЦена") = 1) Тогда // рассчитаем и установим розничную цену
		
		// Розничная цена идет со всеми налогами
		РознЦена = ПолучитьЦенуСНалогами();
		
		// Пересчитаем в глРубли
		Если ПустоеЗначение(КонтДокВалюта) = 0 Тогда 
	        РознЦена = глПересчет(РознЦена, КонтДокВалюта, КонтДокКурс, глРубли, 1);
		КонецЕсли;
		
		// Наценим и округлим
		ТаблицаНоменклатуры.РозничнаяЦена= глОкруглить(РознЦена * (100 + ТаблицаНоменклатуры.РозничнаяНаценка) / 100, ПорядокОкрРозничнойЦены);
		
	ИначеЕсли КодКолонки = "Сумма" Тогда
		Если ЕстьКолонка("СуммаНП")  = 1 Тогда
			РасчетНалога("НП");
		КонецЕсли;
		Если ЕстьКолонка("СуммаНДС") = 1 Тогда
			РасчетНалога("НДС");
		КонецЕсли;
					
		Если ЕстьКолонка("Цена") = 1  Тогда
			Если КонтДокПроцентСкидки > 0 Тогда
				ТаблицаНоменклатуры.Цена = ?(ТаблицаНоменклатуры.Количество = 0, 0, 
				                           ?(ТаблицаНоменклатуры.Цена=0,ТаблицаНоменклатуры.Сумма / 
										     ТаблицаНоменклатуры.Количество,ТаблицаНоменклатуры.Цена));
			Иначе     
				ТаблицаНоменклатуры.Цена = ?(ТаблицаНоменклатуры.Количество = 0, 0, 
				                             ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество);
			КонецЕсли;
		КонецЕсли;
		                          
		Если (ЕстьКолонка("СуммаРуб")  = 1)
		   и (ЕстьКолонка("СтавкаНДС") = 1) 
		   и (ЕстьКолонка("СтавкаНП")  = 1) Тогда // Ввод остатков ТМЦ
			СтНДС = глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);
			СтНП  = ТаблицаНоменклатуры.СтавкаНП.Ставка / 100;
			ТаблицаНоменклатуры.СуммаРуб = ТаблицаНоменклатуры.Сумма * (СтНДС + 1) * (СтНП + 1) /((СтНДС + 1) * СтНП + 1);
			ТаблицаНоменклатуры.СуммаУпр = ?(глРубли = глДоллары, ТаблицаНоменклатуры.СуммаРуб, 
			                                 глПересчет(ТаблицаНоменклатуры.СуммаРуб, глРубли, глКурсДляВалюты(глРубли, КонтДокДатаДок), глДоллары, КонтДокДатаДок));
		    
		КонецЕсли;
								
	 	Если ЕстьКолонка("ТаможеннаяСтоимость")  = 1 Тогда
			ТаблицаНоменклатуры.ТаможеннаяСтоимость = глПересчет(ТаблицаНоменклатуры.Сумма,КонтДокВалюта,КонтДокКурс,глРубли,КонтДокДатаДок);
			
		 	Если ( ЕстьКолонка("СуммаПошлиныРуб")  = 1)
		 	   и ( ЕстьКолонка("СтавкаПошлины")    = 1) 
		 	   и ( ЕстьКолонка("СтавкаНДС")        = 1) 
		 	   и ( ЕстьКолонка("СуммаНДСРуб")      = 1) Тогда // ПоступлениеТМЦИмпорт
				ТаблицаНоменклатуры.СуммаПошлиныРуб 	= ТаблицаНоменклатуры.ТаможеннаяСтоимость * ТаблицаНоменклатуры.СтавкаПошлины / 100;
        	    БазаНДС = ТаблицаНоменклатуры.ТаможеннаяСтоимость + ТаблицаНоменклатуры.СуммаПошлиныРуб;
				ТаблицаНоменклатуры.СуммаНДСРуб	= БазаНДС * глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);//0.20, 0.20004...
			КонецЕсли;
		КонецЕсли;
		
		ПересчитатьСтрокуТаблицы("БезСкидки");
		ПересчитатьСтрокуТаблицы("СуммаСкидки");
		ПересчитатьСтрокуТаблицы("Всего");
		
	ИначеЕсли КодКолонки = "БезСкидки" Тогда
	 	
	 	Если ЕстьКолонка("БезСкидки") = 1 Тогда
		    ТаблицаНоменклатуры.БезСкидки = ТаблицаНоменклатуры.Цена * ТаблицаНоменклатуры.Количество;
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "СуммаСкидки" Тогда
	 	
	 	Если ЕстьКолонка("СуммаСкидки") = 1 Тогда
		    ТаблицаНоменклатуры.СуммаСкидки = глСтрокаСкидки(ТаблицаНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "Всего" Тогда
	 	
	 	Если ЕстьКолонка("Всего") = 1 Тогда
		    ТаблицаНоменклатуры.Всего= ТаблицаНоменклатуры.Сумма + ?((СуммаВклНДС = 1) или (ЕстьКолонка("СуммаНДС") = 0) ,0,ТаблицаНоменклатуры.СуммаНДС) + 
			                            ?((СуммаВклНП = 1) или (ЕстьКолонка("СуммаНП") = 0) ,0,ТаблицаНоменклатуры.СуммаНП);
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "ТекстПартия" Тогда
	 	
	 	Если (ЕстьКолонка("ТекстПартия") = 1)
	 	   и (ЕстьКолонка("Партия") = 1)Тогда
		    ТаблицаНоменклатуры.ТекстПартия = глПредставлениеПартии(ТаблицаНоменклатуры.Партия);
		КонецЕсли;
		
	ИначеЕсли (КодКолонки = "СтавкаНДС")
	      или (КодКолонки = "СтавкаНП" ) Тогда
	 	Если ЕстьКолонка("СуммаНП") = 1 Тогда
		    РасчетНалога("НП");
	 	КонецЕсли;
	 	Если ЕстьКолонка("СуммаНДС") = 1 Тогда
		    РасчетНалога("НДС");
	 	КонецЕсли;
	 	ПересчитатьСтрокуТаблицы("Всего");
	 	
		Если (ЕстьКолонка("СуммаРуб")  = 1)
		   и (ЕстьКолонка("СтавкаНДС") = 1) 
		   и (ЕстьКолонка("СтавкаНП")  = 1) Тогда // Ввод остатков ТМЦ
			СтНДС = глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);
			СтНП  = ТаблицаНоменклатуры.СтавкаНП.Ставка / 100;
			ТаблицаНоменклатуры.СуммаРуб = ТаблицаНоменклатуры.Сумма * (СтНДС + 1) * (СтНП + 1) /((СтНДС + 1) * СтНП + 1);
			ТаблицаНоменклатуры.СуммаУпр = ?(глРубли = глДоллары, ТаблицаНоменклатуры.СуммаРуб, 
			                                 глПересчет(ТаблицаНоменклатуры.СуммаРуб, глРубли, глКурсДляВалюты(глРубли, КонтДокДатаДок), глДоллары, КонтДокДатаДок));
		    
		КонецЕсли;
								
	 	Если ЕстьКолонка("ТаможеннаяСтоимость")  = 1 Тогда
			ТаблицаНоменклатуры.ТаможеннаяСтоимость = глПересчет(ТаблицаНоменклатуры.Сумма,КонтДокВалюта,КонтДокКурс,глРубли,КонтДокДатаДок);
			
		 	Если ( ЕстьКолонка("СуммаПошлиныРуб")  = 1)
		 	   и ( ЕстьКолонка("СтавкаПошлины")    = 1) 
		 	   и ( ЕстьКолонка("СтавкаНДС")        = 1) 
		 	   и ( ЕстьКолонка("СуммаНДСРуб")      = 1) Тогда // ПоступлениеТМЦИмпорт
				ТаблицаНоменклатуры.СуммаПошлиныРуб 	= ТаблицаНоменклатуры.ТаможеннаяСтоимость * ТаблицаНоменклатуры.СтавкаПошлины / 100;
        	    БазаНДС = ТаблицаНоменклатуры.ТаможеннаяСтоимость + ТаблицаНоменклатуры.СуммаПошлиныРуб;
				ТаблицаНоменклатуры.СуммаНДСРуб	= БазаНДС * глНачисляемыйНДС(ТаблицаНоменклатуры.СтавкаНДС);//0.20, 0.20004...
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (КодКолонки = "СуммаНДС")
	      или (КодКолонки = "СуммаНП" ) Тогда
	 	ПересчитатьСтрокуТаблицы("Всего");
	 	
	ИначеЕсли КодКолонки = "ГТД" Тогда
	 	
	 	Если ЕстьКолонка("Партия") = 1 Тогда
		    ТаблицаНоменклатуры.ГТД = ТаблицаНоменклатуры.Партия.ГТД;
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "СтранаПроисхождения" Тогда
	 	
	 	Если ЕстьКолонка("Партия") = 1 Тогда
		    ТаблицаНоменклатуры.СтранаПроисхождения = ТаблицаНоменклатуры.Партия.СтранаПроисхождения;
		КонецЕсли;
		
	ИначеЕсли КодКолонки = "Свойство" Тогда
	 	
	 	Если ЕстьКолонка("Партия") = 1 Тогда
		    ТаблицаНоменклатуры.Свойство = ТаблицаНоменклатуры.Партия.Свойство;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры // ПересчитатьСтрокуТаблицы()

//******************************************************************************
// УстановитьРеквизитПартии(СпрПартии,ТекПартия,ИдРеквизита,ВыбЗначение)
//
// Параметры: СпрПартии   - объект, справочник партий, владелец установлен
//            ТекПартия   - элемент, текщая партия, если не выбран, то создается новая
//            ИдРеквизита - строка, идентификатор устанавливаемого реквизита
//            ВыбЗначение - новое значение реквизита
//
// Возвращаемое значение:
//  Записанный элемент
//
// Описание:
//  Устанавливает заданный реквизит партии. Если партия неизвестна, то создается новая
//
Функция УстановитьРеквизитПартии(СпрПартии,ТекПартия,ИдРеквизита,ВыбЗначение)
	
	Если ТекПартия.Выбран() = 1 Тогда
		СпрПартии.НайтиЭлемент(ТекПартия);
	Иначе
		СпрПартии.Новый();
	КонецЕсли;
	СпрПартии.УстановитьАтрибут(ИдРеквизита, ВыбЗначение);
	СпрПартии.Записать();
	Возврат СпрПартии.ТекущийЭлемент();
	
КонецФункции // УстановитьРеквизитПартии()

//******************************************************************************
// ПриДвойномЩелчкеНаТаблице()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  Таблица значений ТаблицаНоменклатуры
//
// Описание:
//  Обрабатывает двойной щелчок (нажатие клавиши "Enter") на таблице формы
//
Процедура ПриДвойномЩелчкеНаТаблице()
	
	Если ТаблицаНоменклатуры.ТекущаяСтрока() > 0 Тогда
		
		Если ТаблицаНоменклатуры.ТекущаяКолонка() = "Пометка" Тогда
			
			Если ТаблицаНоменклатуры.Пометка = МеткаЕсть Тогда
				ТаблицаНоменклатуры.Пометка = МеткиНет;
			Иначе
				ТаблицаНоменклатуры.Пометка = МеткаЕсть;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Количество" Тогда
			
			ВремКол = ТаблицаНоменклатуры.Количество; 
			Если ВвестиЧисло(ВремКол,"Задайте количество",14,3,60) = 1 Тогда
				Если ТаблицаНоменклатуры.Количество <> ВремКол Тогда;
					ТаблицаНоменклатуры.Количество = ВремКол;
					ПересчитатьСтрокуТаблицы("Количество");
					БылиИзменения = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Единица" Тогда
			
			Если ПустоеЗначение(ТаблицаНоменклатуры.Номенклатура) = 0 Тогда
			    
				СпрЕдиниц = СоздатьОбъект("Справочник.Единицы");
				СпрЕдиниц.ИспользоватьВладельца(ТаблицаНоменклатуры.Номенклатура);
				Если СпрЕдиниц.Выбрать("Выберите единицу", "ФормаСписка") = 1 Тогда
					Если ТаблицаНоменклатуры.Единица <> СпрЕдиниц.ТекущийЭлемент() Тогда;
						ТаблицаНоменклатуры.Единица = СпрЕдиниц.ТекущийЭлемент();
						ПересчитатьСтрокуТаблицы("Единица");
						БылиИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (ТаблицаНоменклатуры.ТекущаяКолонка()  = "Цена")
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "РозничнаяЦена") 
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "РозничнаяНаценка")
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "ЦенаНовая")
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "Сумма") 
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "СуммаНДС") 
		      или (ТаблицаНоменклатуры.ТекущаяКолонка()  = "СуммаНП")  Тогда
			
			ТекКолонка = ТаблицаНоменклатуры.ТекущаяКолонка();
			ТекСтрока  = ТаблицаНоменклатуры.ТекущаяСтрока();
			
			// Цену даем редактировать, только если на это есть право у текущего пользователя
			Если ЕстьПолномочиеМенятьЦены= 1 Тогда
				ВремЗнач = ТаблицаНоменклатуры.ПолучитьЗначение(ТекСтрока, ТекКолонка); 
				ТекстВопроса = "Задайте ";
				Если ТекКолонка = "Цена" Тогда
					ТекстВопроса = ТекстВопроса + "цену";
				ИначеЕсли ТекКолонка = "РозничнаяЦена" Тогда
					ТекстВопроса = ТекстВопроса + "розничную цену";
				ИначеЕсли ТекКолонка = "РозничнаяНаценка" Тогда
					ТекстВопроса = ТекстВопроса + "розничную наценку";
				ИначеЕсли ТекКолонка = "ЦенаНовая" Тогда
					ТекстВопроса = ТекстВопроса + "цену";
				ИначеЕсли ТекКолонка = "Сумма" Тогда    
					ТекстВопроса = ТекстВопроса + "сумму";
				ИначеЕсли ТекКолонка = "СуммаНДС" Тогда    
					ТекстВопроса = ТекстВопроса + "сумму НДС";
				ИначеЕсли ТекКолонка = "СуммаНП" Тогда    
					ТекстВопроса = ТекстВопроса + "суммуНП";
				КонецЕсли;
				Если ВвестиЧисло(ВремЗнач,ТекстВопроса,14,3,60) = 1 Тогда
					Если ТаблицаНоменклатуры.ПолучитьЗначение(ТекСтрока, ТекКолонка)  <> ВремЗнач Тогда
						ТаблицаНоменклатуры.УстановитьЗначение(ТекСтрока, ТекКолонка, ВремЗнач); 
						ПересчитатьСтрокуТаблицы(ТекКолонка);
						БылиИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Предупреждение("Редактирование цен запрещено в соответствии
				|с установленными полномочиями пользователя!", 60);
			КонецЕсли;
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "ВидТМЦ" Тогда
			
			ВремВид = ТаблицаНоменклатуры.ВидТМЦ; 
			Если ВвестиПеречисление(ВремВид,"Выберите вид ТМЦ",60) = 1 Тогда
				Если ТаблицаНоменклатуры.ВидТМЦ <> ВремВид Тогда
					Если (МожноОприходоватьПродукцию = 0) 
					   и (ВремВид = Перечисление.ВидыТМЦ.Продукция) Тогда
					   	
						Предупреждение("Продукцию закупать нельзя! Для оприходования продукции
						| на склад используйте документ ""Оприходование ТМЦ""",60);
					Иначе   	
						ТаблицаНоменклатуры.ВидТМЦ = ВремВид;
						БылиИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "СтавкаНДС" Тогда
			
			ВремСтавкаНДС = ТаблицаНоменклатуры.СтавкаНДС; 
			Если ВвестиПеречисление(ВремСтавкаНДС,"Выберите ставку НДС",60) = 1 Тогда
				Если ТаблицаНоменклатуры.СтавкаНДС <> ВремСтавкаНДС Тогда;
					ТаблицаНоменклатуры.СтавкаНДС = ВремСтавкаНДС;
					ПересчитатьСтрокуТаблицы("СтавкаНДС");
					БылиИзменения = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "СтавкаНП" Тогда
			
			    
			СпрНП = СоздатьОбъект("Справочник.СтавкиНП");
			Если СпрНП.Выбрать("Выберите ставку налога с продаж", "ФормаСписка") = 1 Тогда
				Если ТаблицаНоменклатуры.СтавкаНП <> СпрНП.ТекущийЭлемент() Тогда;
					ТаблицаНоменклатуры.СтавкаНП = СпрНП.ТекущийЭлемент();
					ПересчитатьСтрокуТаблицы("СтавкаНП");
					БылиИзменения = 1;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "ГТД" Тогда
			
			Если ПустоеЗначение(ТаблицаНоменклатуры.Номенклатура) = 0  Тогда
			    
				СпрГТД = СоздатьОбъект("Справочник.ГТД");
				СпрГТД.НайтиЭлемент(ТаблицаНоменклатуры.ГТД);
				Если СпрГТД.Выбрать("Выберите номер ГТД", "ФормаСписка") = 1 Тогда
					Если ТаблицаНоменклатуры.ГТД <> СпрГТД.ТекущийЭлемент() Тогда;
						СпрПартии = СоздатьОбъект("Справочник.Партии");
						СпрПартии.ИспользоватьВладельца(ТаблицаНоменклатуры.Номенклатура);
						ТаблицаНоменклатуры.Партия = УстановитьРеквизитПартии(СпрПартии,ТаблицаНоменклатуры.Партия ,"ГТД", СпрГТД.ТекущийЭлемент());
						ПересчитатьСтрокуТаблицы("ГТД");
						БылиИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "СтранаПроисхождения" Тогда
			
			Если ПустоеЗначение(ТаблицаНоменклатуры.Номенклатура) = 0  Тогда
			    
				СпрСтран = СоздатьОбъект("Справочник.ОКСМ");
				СпрСтран .НайтиЭлемент(ТаблицаНоменклатуры.СтранаПроисхождения);
				Если СпрСтран.Выбрать("Выберите страну", "ФормаСписка") = 1 Тогда
					Если ТаблицаНоменклатуры.СтранаПроисхождения <> СпрСтран.ТекущийЭлемент() Тогда;
						СпрПартии = СоздатьОбъект("Справочник.Партии");
						СпрПартии.ИспользоватьВладельца(ТаблицаНоменклатуры.Номенклатура);
						ТаблицаНоменклатуры.СтранаПроисхождения = УстановитьРеквизитПартии(СпрПартии,ТаблицаНоменклатуры.Партия,"СтранаПроисхождения", СпрСтран.ТекущийЭлемент());
						ПересчитатьСтрокуТаблицы("СтранаПроисхождения");
						БылиИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Свойство" Тогда
			
			Если ПустоеЗначение(ТаблицаНоменклатуры.Номенклатура) = 0  Тогда
			    
				СпрСвойств = СоздатьОбъект("Справочник.ВидыСвойств");
				Если СпрСвойств.Выбрать("Выберите вид свойства", "ФормаСписка") = 1 Тогда
					СпрЗначений= СоздатьОбъект("Справочник.ЗначенияСвойств");
					СпрЗначений.ИспользоватьВладельца(СпрСвойств.ТекущийЭлемент());
					СпрЗначений.НайтиЭлемент(ТаблицаНоменклатуры.Свойство);
					Если СпрЗначений.Выбрать("Выберите значение свойства", "ФормаСписка") = 1 Тогда
						Если ТаблицаНоменклатуры.Свойство <> СпрЗначений.ТекущийЭлемент() Тогда;
							СпрПартии = СоздатьОбъект("Справочник.Партии");
							СпрПартии.ИспользоватьВладельца(ТаблицаНоменклатуры.Номенклатура);
							ТаблицаНоменклатуры.Свойство = УстановитьРеквизитПартии(СпрПартии,ТаблицаНоменклатуры.Партия,"Свойство", СпрЗначений.ТекущийЭлемент());
							ПересчитатьСтрокуТаблицы("Свойство");
							БылиИзменения = 1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТаблицаНоменклатуры.ТекущаяКолонка()  = "Номенклатура" Тогда
			ОткрытьФормуМодально(ТаблицаНоменклатуры.Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриДвойномЩелчкеНаТаблице()

//******************************************************************************
// УстановитьРеквизитПартийТаблицы(ИдРеквизита, ВыбЗначение)
//
// Параметры: 
//  ИдРеквизита - строковый идентификатор реквизита (совпадает с кодом колонки),
//  ВыбЗначение - новое значение реквизита
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Проставляет выбранное значение в заданный реквизит во всех партиях табличной части
//
Функция УстановитьРеквизитПартийТаблицы(ИдРеквизита, ВыбЗначение)
	
	ЧислоОбработанныхПозиций = 0;
	
	Если ПустоеЗначение(ВыбЗначение) = 1 Тогда
		Предупреждение("Не выбрано значение " + СокрЛП(ИдРеквизита) + "!",60);
	Иначе
		
		СпрПартии = СоздатьОбъект("Справочник.Партии"); 
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитыаем
			КонецЕсли;
			                                     
			ТекНоменклатура = ТаблицаНоменклатуры.Номенклатура;
			Если ПустоеЗначение(ТекНоменклатура) = 1  Тогда
				Продолжить; // Строки с пустой номенклатурой пропускаем
			КонецЕсли;
			
			СпрПартии.ИспользоватьВладельца(ТекНоменклатура); 
			ТекПартия = ТаблицаНоменклатуры.Партия;
			ТаблицаНоменклатуры.Партия = УстановитьРеквизитПартии(СпрПартии,ТекПартия,ИдРеквизита,ВыбЗначение);
			ПересчитатьСтрокуТаблицы(ИдРеквизита);
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;                                                                                   
	КонецЕсли;
	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // УстановитьРеквизитПартийТаблицы()

//******************************************************************************
// УстановитьРеквизитТаблицы(КодКолонки, ВыбЗначение)
//
// Параметры: 
//  КодКолонки  - строковый идентификатор колонки,
//  ВыбЗначение - новое значение реквизита
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Проставляет заданный реквизит в заданной колонке таблицы
//
Функция УстановитьРеквизитТаблицы(КодКолонки, Знак, ВыбЗначение)
	
	ЧислоОбработанныхПозиций = 0;
	Если ПустоеЗначение(ВыбЗначение) = 1 Тогда
		Предупреждение("Не выбрано значение!",60);
	Иначе
		
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитыаем
			КонецЕсли;              
			Если Знак = "=" Тогда 
				НовоеЗначение = ВыбЗначение;
			ИначеЕсли Знак = "+" Тогда 
				НовоеЗначение = ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки,КодКолонки) + ВыбЗначение;
			ИначеЕсли Знак = "*" Тогда 
				ТекЗначение = ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки,КодКолонки);
				НовоеЗначение = ТекЗначение + ТекЗначение*ВыбЗначение;
			ИначеЕсли Знак = "~" Тогда 
				ТекЗначение = ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки,КодКолонки);
				НовоеЗначение = глОкруглить(ТекЗначение, ВыбЗначение);
			КонецЕсли;
			
			ТаблицаНоменклатуры.УстановитьЗначение(ТаблицаНоменклатуры.НомерСтроки,КодКолонки, НовоеЗначение);

			ПересчитатьСтрокуТаблицы(КодКолонки);
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // УстановитьРеквизитТаблицы()

//******************************************************************************
// УстановитьЦенуПоТипу(КодКолонки, ВыбЗначение)
//
// Параметры: 
//  КодКолонки  - строковый идентификатор колонки,
//  ВыбЗначение - новое значение реквизита
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Проставляет цену из справочника в заданной колонке таблицы по выбранному типу цен
//
Функция УстановитьЦенуПоТипу(КодКолонки, ВыбЗначение)
	
	Перем Цена;
	
	ЧислоОбработанныхПозиций = 0;
	Если ПустоеЗначение(ВыбЗначение) = 1 Тогда
		Предупреждение("Не выбрано значение!",60);
	Иначе
		
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитыаем
			КонецЕсли;
			
			// Получим цену из справочника
			Если ПолучитьЦенуИзСправочника(Цена, ВыбЗначение) = 0 Тогда
				Продолжить; // не удалось определить цену   
			КонецЕсли;
			
			ТаблицаНоменклатуры.УстановитьЗначение(ТаблицаНоменклатуры.НомерСтроки, "Цена", Цена);
			
			ПересчитатьСтрокуТаблицы("Цена");
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // УстановитьЦенуПоТипу()

//******************************************************************************
// УстановитьРеквизитРозничнаяЦенаТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Проставляет розничную цену из справочника в заданной колонке таблицы
//
Функция УстановитьРеквизитРозничнаяЦенаТаблицы()
	
	Перем РознЦена;
	
	ЧислоОбработанныхПозиций = 0;
	Если ПустоеЗначение(ВыбЗначение) = 1 Тогда
		Предупреждение("Не задано значение!",60);
	Иначе
		
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитыаем
			КонецЕсли;
			
			// Получим розничную цену из справочника
			Если ПолучитьРозничнуюЦенуИзСправочника(РознЦена) = 0 Тогда
				Продолжить; // не удалось определить розн.цену   
			КонецЕсли;
			
			ТаблицаНоменклатуры.УстановитьЗначение(ТаблицаНоменклатуры.НомерСтроки, "РозничнаяЦена", РознЦена);
	
			ПересчитатьСтрокуТаблицы("РозничнаяЦена");
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // УстановитьРеквизитРозничнаяЦенаТаблицы()

//******************************************************************************
// РаспределитьСуммуПоКолонке(КодКолонки, КодКолонкиСумма, ДобСумма)
//
// Параметры: 
//  КодКолонки     - cтрока, код колонки, по которой распределяется сумма
//  КодКолонкиСума - cтрока, код колонки, содержащей изменяемое значение ("Сумма")
//  ДобСумма       - число, распределяемая сумма
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Распределяет заданную сумму по выбранной колонке 
//
Функция РаспределитьСуммуПоКолонке(КодКолонки, КодКолонкиСумма, ДобСумма)
	
	// Посчитаема общую сумму
	ОбщаяСумма = 0;
	ЧислоОбработанныхПозиций = 0;
	
	ТаблицаНоменклатуры.ВыбратьСтроки();
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
			Продолжить; // не помеченные строки не учитываем
		КонецЕсли;              
		ОбщаяСумма = ОбщаяСумма + ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонки);
	КонецЦикла;                                                                                   
	
	
	Если ОбщаяСумма = 0 Тогда
		Предупреждение("Общая сумма нулевая!
		|распределение невозможно.",60);
		
	Иначе	
		
		// Теперь  распределяем
		СтрокаМаксимальнойСуммы = 0;
		МаксимальнаяСумма       = 0;
		НепогСумма              = ВыбЗначение;
		ТаблицаНоменклатуры.ВыбратьСтроки();
		Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
			Если ТаблицаНоменклатуры.Пометка = МеткиНет Тогда
				Продолжить; // не помеченные строки не учитываем
			КонецЕсли;   
			ТекЗначение = ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонки);
			Дельта = ВыбЗначение * ТекЗначение / ОбщаяСумма;
			Дельта = ?(НепогСумма < 0,?(Дельта < НепогСумма, НепогСумма, Дельта),
			?(Дельта > НепогСумма, НепогСумма, Дельта)
			); // Если Дельта по модулю оказалась больше, чем осталось погасить
			                       
			ТекСумма = ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонкиСумма);
			Если ТекСумма > МаксимальнаяСумма  Тогда
			    МаксимальнаяСумма       = ТекСумма;
				СтрокаМаксимальнойСуммы = ТаблицаНоменклатуры.НомерСтроки;
			КонецЕсли;
			ТаблицаНоменклатуры.УстановитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонкиСумма, ТекСумма + Дельта);
			
			// Остаток нераспределенной суммы надо уменьшать на реальное изменение
			НепогСумма = НепогСумма + ТекСумма - ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонкиСумма);
			ПересчитатьСтрокуТаблицы(КодКолонкиСумма);
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЦикла;  
		
		// Если что-то осталось, кидаем на последнюю строку
		Если (НепогСумма              > 0)
		   и (СтрокаМаксимальнойСуммы > 0) Тогда
			
			// Для этого сделаем её текущей (иначе строка не пересчитается)
			ТаблицаНоменклатуры.ПолучитьСтрокуПоНомеру(СтрокаМаксимальнойСуммы);
			ТаблицаНоменклатуры.УстановитьЗначение(СтрокаМаксимальнойСуммы, КодКолонкиСумма, 
			ТаблицаНоменклатуры.  ПолучитьЗначение(СтрокаМаксимальнойСуммы, КодКолонкиСумма) + НепогСумма);
			ПересчитатьСтрокуТаблицы("Сумма");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // РаспределитьСуммуПоКолонке()

//******************************************************************************
// УдалитьСтрокиТаблицы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Число обработанных позиций
//
// Описание:
//  Удаляет отмеченные строки таблицы
//
Функция УдалитьСтрокиТаблицы()  
	
	ЧислоОбработанныхПозиций = 0;
	ЧислоСтрок = ТаблицаНоменклатуры.КоличествоСтрок();
	Для Сч = 1 По ЧислоСтрок Цикл
		НомерСтроки = ЧислоСтрок + 1 - Сч;
		Если ТаблицаНоменклатуры.ПолучитьЗначение(НомерСтроки,"Пометка") = МеткаЕсть Тогда
			
			// Сначала запомним номера удаленных строк
			СписокУдаленныхСтрок.ДобавитьЗначение(ТаблицаНоменклатуры.ПолучитьЗначение(НомерСтроки,"НомерСтрокиДокумента"));
			
			// Запомнили - можно удалить
			ТаблицаНоменклатуры.УдалитьСтроку(НомерСтроки);
			ЧислоОбработанныхПозиций = ЧислоОбработанныхПозиций + 1;
		КонецЕсли;	
	КонецЦикла;	
	Возврат ЧислоОбработанныхПозиций;
	
КонецФункции // УдалитьСтрокиТаблицы()

//******************************************************************************
// ПоКнопкеВыполнить()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  По кнопке "Выполнить".
// 
// Описание:
//  Выполняет необходимые действия по кнопке.
//
Процедура ПоКнопкеВыполнить()
	
	ТекСтрока = СписокДействий.ТекущаяСтрока(); 
	ЧислоОбработанныхПозиций = 0;
	Если ТекСтрока > 0 Тогда
		ТекДействие = СписокДействий.ПолучитьЗначение(ТекСтрока);
		Если ТекДействие = "Изменить цену на (в %)" Тогда
			ЧислоОбработанныхПозиций = УстановитьРеквизитТаблицы("Цена", "*", ВыбЗначение/100);
			
		ИначеЕсли ТекДействие = "Изменить цену на (в ед. валюты)" Тогда
			ЧислоОбработанныхПозиций = УстановитьРеквизитТаблицы("Цена", "+", ВыбЗначение);
			
		ИначеЕсли ТекДействие = "Округлить цены до" Тогда
			ЧислоОбработанныхПозиций = УстановитьРеквизитТаблицы("Цена", "~", ВыбЗначение);
			
		ИначеЕсли ТекДействие = "Распределить сумму по суммам" Тогда
			ЧислоОбработанныхПозиций = РаспределитьСуммуПоКолонке("Сумма", "Сумма", ВыбЗначение);
			
		ИначеЕсли ТекДействие = "Распределить сумму по количеству" Тогда
			ЧислоОбработанныхПозиций = РаспределитьСуммуПоКолонке("Количество", "Сумма", ВыбЗначение);
			
		ИначеЕсли ТекДействие = "Округлить розн. цены до" Тогда
			ЧислоОбработанныхПозиций = УстановитьРеквизитТаблицы("РозничнаяЦена", "~", ВыбЗначение);
		ИначеЕсли ТекДействие = "Удалить" Тогда
			ЧислоОбработанныхПозиций  = УдалитьСтрокиТаблицы();
			
		Иначе 	
			Сообщить("Не известное действие!","!");
			Возврат;
		КонецЕсли;
	Иначе
		Предупреждение("Не выбрано действие!",60);
		Возврат;
	КонецЕсли;  
	
	//Сообщить("Групповая обработка завершена. Число обработанных позиций: "+Строка(ЧислоОбработанныхПозиций));
    Если ЧислоОбработанныхПозиций>0 Тогда    
		БылиИзменения = 1;
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеВыполнить()

//******************************************************************************
// ПоКнопкеОК()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  По кнопке "ОК"
// 
// Описание:
//  Добавляет выбранные позиции номенклатуры в документ
//
Процедура ПоКнопкеОК()  
	
	// Синхронизация ТЗ с документом по номеру строки
	ТаблицаНоменклатуры.ВыбратьСтроки();
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
		Если КонтДок.ПолучитьСтрокуПоНомеру(ТаблицаНоменклатуры.НомерСтрокиДокумента) = 1 Тогда
			
			// Заполним Все реквизиты документа, расчетные колонки должны сами рассчитаться
		    СчетчикЦикла = 0;
		    Для СчетчикЦикла = 1 По СписокКолонокТаблицы.РазмерСписка() Цикл
			 	КодКолонки = СписокКолонокТаблицы.ПолучитьЗначение(СчетчикЦикла);
			 	
			 	Если глЕстьРеквизитМнЧ(КодКолонки, КонтДокВид) = 1 Тогда
				 	КонтДок.УстановитьАтрибут(КодКолонки, 
				 	                          ТаблицаНоменклатуры.ПолучитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонки));
			 	КонецЕсли;
		     КонецЦикла;
		КонецЕсли;
	КонецЦикла;
    
	// Если нужно удалить строки в мн. ч. документа
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По СписокУдаленныхСтрок.РазмерСписка() Цикл
	    Если КонтДок.ПолучитьСтрокуПоНомеру(СписокУдаленныхСтрок.ПолучитьЗначение(СчетчикЦикла)) = 1 Тогда
		    КонтДок.УдалитьСтроку();  
		КонецЕсли;
	КонецЦикла; 			
	БылиИзменения = 0; // Если и были изменения, то уже перенесли
	Форма.Закрыть();
	
КонецПроцедуры // ПоКнопкеОК()

//******************************************************************************
// ДобавитьКолонку(КодКолонки)
//
// Параметры: 
//  КодКолонки - строка, название колонки, соответствует имени реквизита 
//               табл. части формы документа
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Определяет надо ли добавлять в таблицу формы колонку с данным реквизитом
//
Процедура ДобавитьКолонку(КодКолонки)
	
	Перем ДобавитьКолонку;
	                     
	ДобавитьКолонку = 0;
	
	// Определять есть ли в форме документа такая колонка
	// (не обязательно реквизит документа, возможны и текстовые колонки формы) 
	// будем пытаясь в попытке определить видимость реквизита формы
	Попытка
		
		// Если колонка "спрятана" (видимость = 0), то и в форме обработки она не нужна
		Объект = КонтДок.Форма.ПолучитьАтрибут(КодКолонки);
		ДобавитьКолонку = Объект.Видимость(); 
	Исключение
		ДобавитьКолонку = 0; //В форме документа нет такой колонки
	КонецПопытки;
	
	Если ДобавитьКолонку = 1 Тогда
		СписокКолонокТаблицы.ДобавитьЗначение(КодКолонки);    
		ТаблицаНоменклатуры.НоваяКолонка(КодКолонки);
	КонецЕсли;
	
КонецПроцедуры // ДобавитьКолонку()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	    
	Перем Тип, Длина, Точность, Заголовок, Ширина, ФорматКолонки, Положение;
	
	КонтДок = Форма.Параметр;
	Если ПустоеЗначение(КонтДок) = 1 Тогда
		Предупреждение("Данная обработка вызывается из других процедур конфигурации.
		               |Вручную ее вызывать запрещено.",60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	      
	// Запомним используемые реквизиты документа
	КонтДокВид     = КонтДок.Вид();     
	КонтДокДатаДок = КонтДок.ДатаДок;
	Если глЕстьРеквизитШапки("Валюта", КонтДокВид) = 1 Тогда
	    КонтДокВалюта = КонтДок.Валюта;
	Иначе
	    КонтДокВалюта = "";
	КонецЕсли;            
	Если глЕстьРеквизитШапки("Курс", КонтДокВид) = 1 Тогда
	    КонтДокКурс = КонтДок.Курс;
	Иначе
	    КонтДокКурс = 1;
	КонецЕсли;            
	
	Если глЕстьРеквизитШапки("Скидка", КонтДокВид) = 1 Тогда
		КонтДокПроцентСкидки = ?(ПустоеЗначение(КонтДок.Скидка) = 1, 0, КонтДок.Скидка.Процент);
	Иначе
		КонтДокПроцентСкидки = 0;
	КонецЕсли;            
	
	// сформируем список колонок таблицы формы, которые надо показывать и загружать из документа
	// на основании того что есть в эталоной таблице и какие колонки есть в форме документа
	СписокКолонокТаблицы = СоздатьОбъект("СписокЗначений"); 
	
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По ТаблицаЭталон.КоличествоКолонок() Цикл
		ДобавитьКолонку(ТаблицаЭталон.ТекущаяКолонка(СчетчикЦикла));
	КонецЦикла;
	
	// Если есть партионные колонки, то надо добавлять и партию (но не показывать ее)
	Если ( ЕстьКолонка("ТекстПартия") = 1) 
	 или ( ЕстьКолонка("ГТД") = 1) 
	 или ( ЕстьКолонка("СтранаПроисхождения") = 1) 
	 или ( ЕстьКолонка("Свойство") = 1)	 Тогда
		СписокКолонокТаблицы.ДобавитьЗначение("Партия");    
		ТаблицаНоменклатуры.НоваяКолонка("Партия","Справочник.Партии");
		ТаблицаНоменклатуры.ВидимостьКолонки("Партия", 0);
	КонецЕсли;
	
	//Установим параметры колонок формы по эталону
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По ТаблицаЭталон.КоличествоКолонок() Цикл
		КодКолонки = ТаблицаЭталон.ПолучитьПараметрыКолонки(СчетчикЦикла,Тип, Длина, Точность, Заголовок, Ширина, ФорматКолонки, Положение);
		Если ЕстьКолонка(КодКолонки) = 1 Тогда
			ТаблицаНоменклатуры.УстановитьПараметрыКолонки(КодКолонки,Тип, Длина, Точность, Заголовок, Ширина, ФорматКолонки, Положение);
		КонецЕсли;
	КонецЦикла;
	
	// служебная колонка (невидимая) - номер строки документа
	// нужна для синхронизации строк ТЗ и МнЧ  документа 
	// чтобы не очищать в документе не редактиремые данной обработкой колонки
	ТаблицаНоменклатуры.НоваяКолонка("НомерСтрокиДокумента","Число");
	ТаблицаНоменклатуры.ВидимостьКолонки("НомерСтрокиДокумента",0);
	
	// Считаем реквизиты документа (только реквизиты!, расчетные колонки заполним позже)
	КонтДок.ВыбратьСтроки();
	Пока КонтДок.ПолучитьСтроку() = 1 Цикл
		ТаблицаНоменклатуры.НоваяСтрока();
		ТаблицаНоменклатуры.НомерСтрокиДокумента = КонтДок.НомерСтроки;
	     СчетчикЦикла = 0;
	     Для СчетчикЦикла = 1 По СписокКолонокТаблицы.РазмерСписка() Цикл
		 	КодКолонки = СписокКолонокТаблицы.ПолучитьЗначение(СчетчикЦикла);
		 	
		 	Если глЕстьРеквизитМнЧ(КодКолонки, КонтДокВид) = 1 Тогда
			 	ТаблицаНоменклатуры.УстановитьЗначение(ТаблицаНоменклатуры.НомерСтроки, КодКолонки, КонтДок.ПолучитьАтрибут(КодКолонки));
		 	КонецЕсли;
	     КонецЦикла;
	КонецЦикла;
	                   
	// Вторая служебная колонка
	ТаблицаНоменклатуры.ВставитьКолонку("Пометка",1,"Число", 1, , ,4, ,1);
	ТаблицаНоменклатуры.ВыводитьПиктограммы("Пометка",1);
	
	// определим полномочие менять стоимостные характеристики
	ЕстьПолномочиеМенятьЦены = глПолучитьПолномочие("РазрешитьРедактированиеЦенВдокументах");
	
	// Заполним список возможных действий
	// Заодно и уточним заголовки колонок сумм налогов
	// По умолчанию считаем, что все суммы без НДС, но с НП (ввод остаков ТМЦ)
	СуммаВклНДС = 0;
	СуммаВклНП  = 1;

	Если ЕстьКолонка("Цена") = 1 Тогда
		Если ЕстьПолномочиеМенятьЦены = 1 Тогда
			СписокДействий.ДобавитьЗначение("Изменить цену на (в %)");
			Если ПустоеЗначение(КонтДокВалюта) = 0  Тогда
				СписокДействий.ДобавитьЗначение("Изменить цену на (в ед. валюты)");
			КонецЕсли;
			СписокДействий.ДобавитьЗначение("Округлить цены до");
		КонецЕсли;
	КонецЕсли;
	
	Если (ЕстьКолонка("Сумма") = 1) 
	   и (ЕстьПолномочиеМенятьЦены = 1) Тогда
		СписокДействий.ДобавитьЗначение("Распределить сумму по суммам");
	    Если ЕстьКолонка("Количество") = 1 Тогда
			СписокДействий.ДобавитьЗначение("Распределить сумму по количеству");
		КонецЕсли;
	КонецЕсли;
	
	// Оприходовать продукцию можно только в одном документе (ОприходованиеТМЦ)
	МожноОприходоватьПродукцию = ?(КонтДокВид = "ОприходованиеТМЦ",1,0);
	
	СписокДействий.ДобавитьЗначение("Удалить");					
	
	// Заполним расчетные колонки
	ТаблицаНоменклатуры.ВыбратьСтроки();
	Пока ТаблицаНоменклатуры.ПолучитьСтроку() = 1 Цикл
	     СчетчикЦикла = 0;
	     Для СчетчикЦикла = 1 По СписокКолонокТаблицы.РазмерСписка() Цикл
		 	КодКолонки = СписокКолонокТаблицы.ПолучитьЗначение(СчетчикЦикла);
		 	
		 	Если глЕстьРеквизитМнЧ(КодКолонки, КонтДокВид) = 0 Тогда //расчетная колонка
			 	ПересчитатьСтрокуТаблицы(КодКолонки);
		 	КонецЕсли;
	     КонецЦикла;
	КонецЦикла;
	
	// По умолчанию помечены все позиции
	ГрупповаяПометка(1);
	
	// Активизируем первую строку списка действий
	СписокДействий.ТекущаяСтрока(1);
	ПриИзмененииТекущегоДействия();
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	Если БылиИзменения = 1 Тогда
		Если Вопрос("Перенести измененные позиции в документ?", "Да+Нет", 60) = "Да"  Тогда
			ПоКнопкеОк();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
МеткаЕсть = 2;  МеткиНет = 1; // Номера иконок пометки

БылиИзменения = 0;

СписокУдаленныхСтрок = СоздатьОбъект("СписокЗначений");  

// Таблица, содержащая колонки, с которыми умеет работать данная обработка, отформатированные должным образом
ТаблицаЭталон = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаЭталон.НоваяКолонка("ВидТМЦ"               ,"Перечисление.ВидыТМЦ"      ,   ,  ,                                   , 10,, );
ТаблицаЭталон.НоваяКолонка("Номенклатура"         ,"Справочник.Номенклатура"   ,   ,  ,                                   , 30,, );
ТаблицаЭталон.НоваяКолонка("Количество"           ,"Число"                     , 14, 3,"Кол-во"                           , 10,,2);
ТаблицаЭталон.НоваяКолонка("Единица"              ,"Справочник.Единицы"        ,   ,  ,"Ед."                              ,  5,,2);
ТаблицаЭталон.НоваяКолонка("Коэффициент"          ,"Число"                     ,   ,  ,"К."                               ,  5,,2);
ТаблицаЭталон.НоваяКолонка("Цена"                 ,"Число"                     , 16, 2,                                   , 14,,2);
ТаблицаЭталон.НоваяКолонка("РозничнаяЦена"        ,"Число"                     , 16, 2,"Розн. цена ("+глРубли+")"         , 16,,2);
ТаблицаЭталон.НоваяКолонка("РозничнаяНаценка"     ,"Число"                     ,  6, 2,"Нац."                             ,  7,,2);
ТаблицаЭталон.НоваяКолонка("ЦенаНовая"            ,"Число"                     , 16, 2,"Цена новая"                       , 14,,2);
ТаблицаЭталон.НоваяКолонка("БезСкидки"            ,"Число"                     , 16, 2,"Без скидки"                       , 16,,2);
ТаблицаЭталон.НоваяКолонка("СуммаСкидки"          ,"Число"                     , 16, 2,"Скидка"                           , 16,,2);
ТаблицаЭталон.НоваяКолонка("Сумма"                ,"Число"                     , 16, 2,                                   , 16,,2);
ТаблицаЭталон.НоваяКолонка("ТаможеннаяСтоимость"  ,"Число"                     , 16, 2,"Там. ст-ть"                       , 16,,2);
ТаблицаЭталон.НоваяКолонка("СтавкаПошлины"        ,"Число"                     ,  6, 2,"% пошлины"                        ,  6,,2);
ТаблицаЭталон.НоваяКолонка("СуммаПошлиныРуб"      ,"Число"                     , 15, 2,"Пошлина"                          , 16,,2);
ТаблицаЭталон.НоваяКолонка("Всего"                ,"Число"                     , 16, 2,                                   , 16,,2);
ТаблицаЭталон.НоваяКолонка("СтавкаНДС"            ,"Перечисление.СтавкиНДС"    ,   ,  ,"%НДС"                             , 10,,2);
ТаблицаЭталон.НоваяКолонка("СуммаНДС"             ,"Число"                     , 16, 2,"Сумма НДС"                        , 14,,2);
ТаблицаЭталон.НоваяКолонка("СуммаНДСРуб"          ,"Число"                     , 16, 2,"НДС ("+глРубли+")"                , 14,,2);
ТаблицаЭталон.НоваяКолонка("СтавкаНП"             ,"Справочник.СтавкиНП"       ,   ,  ,"%НП"                              ,  7,,2);
ТаблицаЭталон.НоваяКолонка("СуммаНП"              ,"Число"                     , 16, 2,"Сумма НП"                         , 14,,2);
ТаблицаЭталон.НоваяКолонка("СуммаРуб"             ,"Число"                     , 16, 2,"Сумма ("+глРубли+")"              , 16,,2);
ТаблицаЭталон.НоваяКолонка("СуммаУпр"             ,"Число"                     , 16, 2,"Сумма ("+глДоллары+")"            , 16,,2);
ТаблицаЭталон.НоваяКолонка("ТекстПартия"          ,                            ,   ,  ,"Партия"                           , 30,, );
ТаблицаЭталон.НоваяКолонка("ГТД"                  ,"Справочник.ГТД"            ,   ,  ,"ГТД"                              , 25,, );
ТаблицаЭталон.НоваяКолонка("СтранаПроисхождения"  ,"Справочник.ОКСМ"           ,   ,  ,"Страна"                           , 25,, );
ТаблицаЭталон.НоваяКолонка("Свойство"             ,"Справочник.ЗначенияСвойств",   ,  ,"Свойство"                         , 20,, );

	
	

