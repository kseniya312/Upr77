Перем гСтрПуть;
Перем гИмяФайла;

Перем гТипСтрок;
Перем гВидСтрок;

Перем гТипКолонок;
Перем гВидКолонок;

Перем гИмяДаннойОбработки;

Перем гСпособ;

Перем гСтрЯчейки;
Перем гКолЯчейки;

Перем гРасшифровка;

Перем гРежимРедактирования;
Перем гВидСпрЗначенийСвойств;

Перем гЗаголовокСтрок;
Перем гЗаголовокКолонок;

//******************************************************************************

Функция ПолучитьЗначениеЯчейки(ОбъектВладелец, ВидСвойства, СписокСПометками="")			Далее
Функция ОбработатьЯчейку(ОбъектВладелец, ВидСвойства)										Далее
Функция ОбработатьЯчейки(ВидСвойства)														Далее
Функция УстановитьЗначениеСвойства(ОбъектВладелец, ВидСвойства, ЗнСвойства, Действие="")	Далее

//******************************************************************************

Функция ПустЗнач(Зн)
	Тип = ТипЗначенияСтр(Зн);
	Если		Найти("Строка,Дата,Число", Тип) > 0 Тогда
		Возврат ПустоеЗначение(Зн);
	ИначеЕсли	Тип = "Справочник" Тогда
		Возврат ПустоеЗначение(Зн.ТекущийЭлемент());
	ИначеЕсли	Тип = "Документ" Тогда
		Возврат ПустоеЗначение(Зн.ТекущийДокумент());
	ИначеЕсли	Тип = "Счет" Тогда
		Возврат ПустоеЗначение(Зн.ТекущийСчет());
	Иначе
		Возврат 1 - Зн.Выбран();
	КонецЕсли;
КонецФункции

//******************************************************************************

Процедура ВклПометки(Спис, Зн)
	Для Сч = 1 По Спис.РазмерСписка() Цикл
		Если Зн = "Инвертировать" Тогда
			Спис.Пометка(Сч, 1-Спис.Пометка(Сч));
		Иначе
			Спис.Пометка(Сч, Зн);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//******************************************************************************

Процедура ПереместитьСтроку(Спис, Режим)
	                    
	ТекСтрока	= Спис.ТекущаяСтрока();
	     
	Если ПустоеЗначение(ТекСтрока) = 1 Тогда Возврат КонецЕсли;
    	
    Если		Режим = "Вверх" Тогда
        Если ТекСтрока = 1 Тогда
        	Спис.СдвинутьЗначение(Спис.РазмерСписка() - 1);
			Спис.ТекущаяСтрока(Спис.РазмерСписка());
        Иначе
        	Спис.СдвинутьЗначение(-1);
			Спис.ТекущаяСтрока(ТекСтрока - 1);
        КонецЕсли;
	ИначеЕсли	Режим = "Вниз" Тогда
        Если ТекСтрока = Спис.РазмерСписка() Тогда
        	Спис.СдвинутьЗначение( - Спис.РазмерСписка() + 1);
			Спис.ТекущаяСтрока(1);
        Иначе
        	Спис.СдвинутьЗначение(1);
			Спис.ТекущаяСтрока(ТекСтрока + 1);
        КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

//******************************************************************************

Процедура ОбработкаПодбора(ЗначПод)
                
	Если		гСпособ = "Строки" Тогда
		Спис		= ФормСписСтрок;
	ИначеЕсли	гСпособ = "Колонки" Тогда
		Спис		= ФормСписКолонок;
	КонецЕсли;

	Если гСпособ	= "Ячейка" Тогда
		ОбъектСтроки	= гРасшифровка.Получить("ОбъектСтроки");
		ОбъектКолонки	= гРасшифровка.Получить("ОбъектКолонки");
		Если УстановитьЗначениеСвойства(ОбъектСтроки, ОбъектКолонки, ЗначПод)	= 1	Тогда
			Область			= Таблица.Область(гСтрЯчейки, гКолЯчейки);
			Область.Текст	= ПолучитьЗначениеЯчейки(ОбъектСтроки, ОбъектКолонки);
		    Таблица.Показать();
		КонецЕсли;		
	Иначе
		Если Спис.НайтиЗначение(ЗначПод) = 0 Тогда
			Спис.ДобавитьЗначение(ЗначПод);
			Спис.Пометка(Спис.РазмерСписка(), 1);
		Иначе 
			Сообщить(СокрЛП(ЗначПод) + " - это значение уже выбрано!");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************

Процедура ВыбратьЗначения(Способ, Реж)
	Перем Фрм;                  
	            
	гСпособ	= Способ;
	
	Если		гСпособ = "Строки" Тогда
		Спис		= ФормСписСтрок;
		Тип			= гТипСтрок;
		Вид			= гВидСтрок;
	ИначеЕсли	гСпособ = "Колонки" Тогда
		Спис		= ФормСписКолонок;
		Тип			= гТипКолонок;
		Вид			= гВидКолонок;
	КонецЕсли;
	
	ПолнИден = Тип + ?(СокрЛП(Вид) = "", "", ".") + Вид;

	Тек = "";
	Если Спис.ТекущаяСтрока() > 0 Тогда
		Тек = Спис.ПолучитьЗначение(Спис.ТекущаяСтрока());
	КонецЕсли;
	
	ОткрытьПодбор(ПолнИден, ,Фрм, Реж, Тек);
	
	Попытка Фрм.ВыборГруппы(0) Исключение КонецПопытки;
КонецПроцедуры

//******************************************************************************

Процедура УдалитьЗначение(Спис, Реж="")
	Если Реж = "Все" Тогда
		Спис.УдалитьВсе();
	Иначе
		Поз	= Спис.ТекущаяСтрока();	
		Если Поз = 0 Тогда Возврат КонецЕсли;
		
		УдПоз = Спис.ТекущаяСтрока();
		Спис.УдалитьЗначение(Поз);
		Если Спис.РазмерСписка() < УдПоз Тогда 
			Спис.ТекущаяСтрока(УдПоз - 1);
		Иначе 
			Спис.ТекущаяСтрока(УдПоз);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************

Процедура ВыбратьПоФильтру(Способ)
	
	Если		Способ = "Строки" Тогда
		Спис		= ФормСписСтрок;
		Тип			= гТипСтрок;
		Вид			= гВидСтрок;
	ИначеЕсли	Способ = "Колонки" Тогда
		Спис		= ФормСписКолонок;
		Тип			= гТипКолонок;
		Вид			= гВидКолонок;
	КонецЕсли;
	
	СписокПараметровВызова = СоздатьОбъект("СписокЗначений");
	СписокПараметровВызова.ДобавитьЗначение(Тип,					"Тип");
	СписокПараметровВызова.ДобавитьЗначение(Вид,					"Вид");
	СписокПараметровВызова.ДобавитьЗначение(Спис,					"Объекты");
	СписокПараметровВызова.ДобавитьЗначение(1,						"БезГрупп");
	СписокПараметровВызова.ДобавитьЗначение(гИмяДаннойОбработки,	"ИмяВызвавшейФормы");

	ОткрытьФорму("Обработка.ПодборОбъектов#", СписокПараметровВызова);
	
КонецПроцедуры
              
//******************************************************************************

Процедура УстановитьРасшифровку(ОбъектСтроки="", ОбъектКолонки="");
	гРасшифровка = СоздатьОбъект("СписокЗначений");
	гРасшифровка.Установить("ОбъектСтроки",		ОбъектСтроки);
	гРасшифровка.Установить("ОбъектКолонки",	ОбъектКолонки);
КонецПроцедуры

//******************************************************************************
                                
Процедура Сформировать()
	
	Таблица.Очистить();
	
	Таблица.ВывестиСекцию("ШапкаГор|ШапкаВерт");
	
	Если ФормФлСортировки = 1 Тогда
		СтрСортировки	= "";
		ТабСортировки	= СоздатьОбъект("ТаблицаЗначений");
		ТабСортировки.НоваяКолонка("ОбъектСтроки");
	КонецЕсли;
		
    Для СчКолонок = 1 По ФормСписКолонок.РазмерСписка() Цикл
		Если ФормСписКолонок.Пометка(СчКолонок) = 0 Тогда Продолжить КонецЕсли;
		ЗнКолонки			= ФормСписКолонок.ПолучитьЗначение(СчКолонок);
		ПечЗаголовокКолонки	= ЗнКолонки;
		УстановитьРасшифровку( , ЗнКолонки);
		Таблица.ПрисоединитьСекцию("ШапкаГор|Колонка");
		
		Если ФормФлСортировки = 1 Тогда
			ТабСортировки.НоваяКолонка("_" + СчКолонок);
			СтрСортировки = СтрСортировки + ?(ПустоеЗначение(СтрСортировки) = 1, "", ",") + "_" + СчКолонок + "-";
		КонецЕсли;
    КонецЦикла;
	
	Если ФормФлСортировки = 1 Тогда
		
	    Для СчСтрок = 1 По ФормСписСтрок.РазмерСписка() Цикл
			Если ФормСписСтрок.Пометка(СчСтрок) = 0 Тогда Продолжить КонецЕсли;
			ТабСортировки.НоваяСтрока();
			ЗнСтроки					= ФормСписСтрок.ПолучитьЗначение(СчСтрок);
			ТабСортировки.ОбъектСтроки	= ЗнСтроки;
			
		    Для СчКолонок = 1 По ФормСписКолонок.РазмерСписка() Цикл
				Если ФормСписКолонок.Пометка(СчКолонок) = 0 Тогда Продолжить КонецЕсли;
				ЗнКолонки	= ФормСписКолонок.ПолучитьЗначение(СчКолонок);
				ЗнЯчейки	= ПолучитьЗначениеЯчейки(ЗнСтроки, ЗнКолонки);
				ТабСортировки.УстановитьЗначение(ТабСортировки.КоличествоСтрок(), "_" + СчКолонок, ЗнЯчейки);
			КонецЦикла;
		КонецЦикла;
		
		ТабСортировки.Сортировать(СтрСортировки);
		
		ТабСортировки.ВыбратьСтроки();
		Пока ТабСортировки.ПолучитьСтроку() = 1 Цикл
			ЗнСтроки			= ТабСортировки.ОбъектСтроки;
			ПечЗаголовокСтроки	= ЗнСтроки;
			УстановитьРасшифровку(ЗнСтроки);
			Таблица.ВывестиСекцию("Строка|ШапкаВерт");
			
		    Для СчКолонок = 1 По ФормСписКолонок.РазмерСписка() Цикл
				Если ФормСписКолонок.Пометка(СчКолонок) = 0 Тогда Продолжить КонецЕсли;
				ЗнКолонки	= ФормСписКолонок.ПолучитьЗначение(СчКолонок);
				ПечЗначение	= ТабСортировки.ПолучитьЗначение(ТабСортировки.НомерСтроки, "_" + СчКолонок);
				УстановитьРасшифровку(ЗнСтроки, ЗнКолонки);
				Таблица.ПрисоединитьСекцию("Строка|Колонка");
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
	    Для СчСтрок = 1 По ФормСписСтрок.РазмерСписка() Цикл
			Если ФормСписСтрок.Пометка(СчСтрок) = 0 Тогда Продолжить КонецЕсли;
			ЗнСтроки			= ФормСписСтрок.ПолучитьЗначение(СчСтрок);
			ПечЗаголовокСтроки	= ЗнСтроки;
			УстановитьРасшифровку(ЗнСтроки);
			Таблица.ВывестиСекцию("Строка|ШапкаВерт");
			
		    Для СчКолонок = 1 По ФормСписКолонок.РазмерСписка() Цикл
				Если ФормСписКолонок.Пометка(СчКолонок) = 0 Тогда Продолжить КонецЕсли;
				ЗнКолонки	= ФормСписКолонок.ПолучитьЗначение(СчКолонок);
				ПечЗначение	= ПолучитьЗначениеЯчейки(ЗнСтроки, ЗнКолонки);
				УстановитьРасшифровку(ЗнСтроки, ЗнКолонки);
				Таблица.ПрисоединитьСекцию("Строка|Колонка");
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Таблица.Показать();
	
КонецПроцедуры

//******************************************************************************

Процедура ПриОткрытии()

	Форма.Заголовок("Свойства элементов справочника:  " + Метаданные.Справочник(гВидСтрок).Представление());
	
	Форма.ФормТекстЗаголовкиСтрок.Заголовок("По горизонтали:  " + гЗаголовокСтрок);
	Форма.ФормТекстЗаголовкиКолонок.Заголовок("По вертикали:  " + гЗаголовокКолонок);
	
	Таблица.ИсходнаяТаблица("СвойстваОбъектов");
	Таблица.ВывестиСекцию("ШапкаГор|ШапкаВерт");
	Таблица.Опции(0, 0, 1, 1);
	Таблица.Показать();
    
КонецПроцедуры

//****************************************************************************** 

Процедура ОбработкаЯчейкиТаблицы(ЗначРасшифровки, СтандартнаяОбработка, Конт, Ячейка)
	СтандартнаяОбработка = 0;
	КолПоз				 = Найти(Ячейка, "C");
	гСтрЯчейки			 = Число(Сред(Ячейка, 2, КолПоз-2));
	гКолЯчейки			 = Число(Сред(Ячейка, КолПоз+1, СтрДлина(Ячейка)-КолПоз));
	
	Если ТипЗначенияСтр(ЗначРасшифровки) = "СписокЗначений" Тогда
		ОбъектСтроки	= ЗначРасшифровки.Получить("ОбъектСтроки");
		ОбъектКолонки	= ЗначРасшифровки.Получить("ОбъектКолонки");
		
		Если ПустоеЗначение(гРежимРедактирования) = 1 Тогда
			Если ПустЗнач(ОбъектСтроки)	= 1 Тогда
				ОткрытьФорму(ОбъектКолонки);
			Иначе
				ОткрытьФорму(ОбъектСтроки);
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если ПустЗнач(ОбъектКолонки)	= 1 Тогда ОткрытьФорму(ОбъектСтроки);	Возврат; КонецЕсли;
		
		Если ПустЗнач(ОбъектСтроки)		= 1 Тогда
			Если ОбработатьЯчейки(ОбъектКолонки) = 1 Тогда
				Сформировать();
			КонецЕсли;
			Возврат;
		КонецЕсли;
		                                          
		гРасшифровка	= ЗначРасшифровки;
		Если ОбработатьЯчейку(ОбъектСтроки, ОбъектКолонки) = 1 Тогда
			Область			= Таблица.Область(гСтрЯчейки, гКолЯчейки);
			Область.Текст	= ПолучитьЗначениеЯчейки(ОбъектСтроки, ОбъектКолонки);
		    Таблица.Показать();
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

//******************************************************************************

Процедура ПриПовторномОткрытии()
        
	Если ПустоеЗначение(Форма.Параметр) = 1 Тогда Возврат КонецЕсли;
	                                  
	СписЗначенийСвойства	= Форма.Параметр.Получить("Объекты");
	СписБуфер				= Форма.Параметр.Получить("Буфер");
	         
	Если 	(ПустоеЗначение(СписЗначенийСвойства)	= 1)					Или 
			(ТипЗначенияСтр(СписЗначенийСвойства)	<> "СписокЗначений")	Или 
			(ПустоеЗначение(СписБуфер)				= 1)					Тогда Возврат КонецЕсли;
                                                               
	ОбъектСтроки	= СписБуфер.Получить("ОбъектСтроки");
	ОбъектКолонки	= СписБуфер.Получить("ОбъектКолонки");
	СтрокаЯчейки	= СписБуфер.Получить("СтрокаЯчейки");
	КолонкаЯчейки	= СписБуфер.Получить("КолонкаЯчейки");
    
	Если ПустЗнач(ОбъектСтроки) = 0 Тогда
		УстановитьЗначениеСвойства(ОбъектСтроки, ОбъектКолонки, СписЗначенийСвойства);
		Область			= Таблица.Область(СтрокаЯчейки, КолонкаЯчейки);
		Область.Текст	= ПолучитьЗначениеЯчейки(ОбъектСтроки, ОбъектКолонки);
	    Таблица.Показать();
	Иначе
		Для Сч = 1 По ФормСписСтрок.РазмерСписка() Цикл
			Если ФормСписСтрок.Пометка(Сч) = 0 Тогда Продолжить КонецЕсли;
			ОбъектСтроки = ФормСписСтрок.ПолучитьЗначение(Сч);
			УстановитьЗначениеСвойства(ОбъектСтроки, ОбъектКолонки, СписЗначенийСвойства);
		КонецЦикла;
		Сформировать();
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
//**************************************************************************************************
//******************************************************************************
                                                                                                    
Функция ПолучитьЗначениеЯчейки(ОбъектВладелец, ВидСвойства, СписокСПометками="")
	СтрЗначений		= "";
	СпрСвойств	= СоздатьОбъект("Справочник." + гВидСпрЗначенийСвойств);
	СпрСвойств.ИспользоватьВладельца(ОбъектВладелец);
	
	СпрСвойств.ВыбратьЭлементыПоРеквизиту("ВидСвойства", ВидСвойства, 1, 0);
	Пока СпрСвойств.ПолучитьЭлемент() = 1 Цикл
		Если СпрСвойств.ПометкаУдаления() = 1 Тогда Продолжить КонецЕсли;
		                                          
		СтрЗначений = СтрЗначений + ?(ПустоеЗначение(СтрЗначений) = 1, "", ", ") + СпрСвойств.ЗначениеСвойства.Наименование;
		                                                           
		Если ТипЗначенияСтр(СписокСПометками) = "СписокЗначений" Тогда
			Поз = СписокСПометками.НайтиЗначение(СпрСвойств.ЗначениеСвойства);
			СписокСПометками.Пометка(Поз, 1);
		КонецЕсли;

	КонецЦикла;

	Возврат СтрЗначений;
	
КонецФункции
        
//******************************************************************************

Функция УстановитьЗначениеСвойства(ОбъектВладелец, ВидСвойства, ЗнСвойства, Действие="")
    СпрСвойствВладельца = СоздатьОбъект("Справочник." + гВидСпрЗначенийСвойств);
	СпрСвойствВладельца.ИспользоватьВладельца(ОбъектВладелец);
	                                                             
	Если ТипЗначенияСтр(ЗнСвойства) = "СписокЗначений" Тогда
        СпрСвойствВладельца.ВыбратьЭлементы(1);
        Пока СпрСвойствВладельца.ПолучитьЭлемент() = 1 Цикл
			Если СпрСвойствВладельца.ВидСвойства = ВидСвойства.ТекущийЭлемент() Тогда
				СпрСвойствВладельца.Удалить(0);
			КонецЕсли;
		КонецЦикла;
		Для Сч = 1 По ЗнСвойства.РазмерСписка() Цикл
		    СпрСвойствВладельца.Новый();
			СпрСвойствВладельца.ВидСвойства			= ВидСвойства.ТекущийЭлемент();
			СпрСвойствВладельца.ЗначениеСвойства	= ЗнСвойства.ПолучитьЗначение(Сч);
			СпрСвойствВладельца.Записать();
		КонецЦикла;
		Возврат 1;
	КонецЕсли;
	                                                                          
	Если (ПустоеЗначение(Действие) = 1) Или (Действие = "Установить") Тогда
		
		Если СпрСвойствВладельца.НайтиПоРеквизиту("ВидСвойства", ВидСвойства.ТекущийЭлемент(), 0) = 0 Тогда
			СпрСвойствВладельца.Новый();
			СпрСвойствВладельца.ВидСвойства			= ВидСвойства.ТекущийЭлемент();
			СпрСвойствВладельца.ЗначениеСвойства	= ЗнСвойства.ТекущийЭлемент();
			СпрСвойствВладельца.Записать();
		Иначе
			Если СпрСвойствВладельца.ЗначениеСвойства = ЗнСвойства.ТекущийЭлемент() Тогда Возврат 0 КонецЕсли;
			
			СпрСвойствВладельца.ЗначениеСвойства	= ЗнСвойства.ТекущийЭлемент();
			СпрСвойствВладельца.Записать();
		КонецЕсли;
		
	ИначеЕсли Действие = "Добавить" Тогда
		
		СпрСвойствВладельца.ВыбратьЭлементыПоРеквизиту("ВидСвойства", ВидСвойства.ТекущийЭлемент(), 1, 0);
		Пока СпрСвойствВладельца.ПолучитьЭлемент() = 1 Цикл
			Если СпрСвойствВладельца.ЗначениеСвойства = ЗнСвойства.ТекущийЭлемент() Тогда Возврат 0 КонецЕсли;
		КонецЦикла;
		СпрСвойствВладельца.Новый();
		СпрСвойствВладельца.ВидСвойства			= ВидСвойства.ТекущийЭлемент();
		СпрСвойствВладельца.ЗначениеСвойства	= ЗнСвойства.ТекущийЭлемент();
		СпрСвойствВладельца.Записать();
		                                 
	ИначеЕсли Действие = "Удалить" Тогда
		
		СпрСвойствВладельца.ВыбратьЭлементыПоРеквизиту("ВидСвойства", ВидСвойства.ТекущийЭлемент(), 1, 0);
		Пока СпрСвойствВладельца.ПолучитьЭлемент() = 1 Цикл
			Если СпрСвойствВладельца.ЗначениеСвойства = ЗнСвойства.ТекущийЭлемент() Тогда
				СпрСвойствВладельца.Удалить(0);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

	Возврат 1;
КонецФункции

//******************************************************************************
                                                                                                    
Функция ОбработатьЯчейки(ВидСвойства)
	
	СписДействий = СоздатьОбъект("СписокЗначений");
	Если ВидСвойства.Множественность = 0 Тогда
		СписДействий.ДобавитьЗначение("Установить",				"Установить значение свойства для всех");
	Иначе
		СписДействий.ДобавитьЗначение("Установить",				"Установить значения свойства для всех");
		СписДействий.ДобавитьЗначение("Добавить",				"Добавить значение свойства для всех");
	КонецЕсли;
	СписДействий.ДобавитьЗначение("Удалить",					"Удалить значение свойства у всех");
	//СписДействий.ДобавитьЗначение("СортироватьПоВозрастанию",	"Сортировать строки по возрастанию по колонке: " + ВидСвойства);
	//СписДействий.ДобавитьЗначение("СортироватьПоУбыванию",		"Сортировать строки по убыванию по колонке: " + ВидСвойства);
	            
	Действие  = ""; Поз = "";
	Если СписДействий.ВыбратьЗначение(Действие, "", Поз, , 1) = 0 Тогда Возврат 0 КонецЕсли;
                                
	Если	Найти("Установить,Добавить,Удалить", Действие) > 0 Тогда
		        
		СпрЗнСвойства = СоздатьОбъект("Справочник.ЗначенияСвойств");
		СпрЗнСвойства.ИспользоватьВладельца(ВидСвойства);
	                                               
		Если (ВидСвойства.Множественность = 0) Или (Найти("Добавить,Удалить", Действие) > 0) Тогда
			
			Если СпрЗнСвойства.Выбрать("Выберите значение", "ФормаСписка")	= 0	Тогда Возврат 0 КонецЕсли;
			Для Сч = 1 По ФормСписСтрок.РазмерСписка() Цикл
				Если ФормСписСтрок.Пометка(Сч) = 0 Тогда Продолжить КонецЕсли;
				ОбъектВладелец = ФормСписСтрок.ПолучитьЗначение(Сч);
				УстановитьЗначениеСвойства(ОбъектВладелец, ВидСвойства, СпрЗнСвойства, Действие);
			КонецЦикла;
			Возврат 1;
			
		Иначе
	                                                
			Спис	= СоздатьОбъект("СписокЗначений");
			СпрЗнСвойства.ВыбратьЭлементы(1);
			Пока СпрЗнСвойства.ПолучитьЭлемент() = 1 Цикл
				Спис.ДобавитьЗначение(СпрЗнСвойства.ТекущийЭлемент());
				Спис.Пометка(Спис.РазмерСписка(), 0);
			КонецЦикла;
	
			СписБуфер = СоздатьОбъект("СписокЗначений");
			СписБуфер.ДобавитьЗначение(ВидСвойства,	"ОбъектКолонки");
			
			СписокПараметровВызова = СоздатьОбъект("СписокЗначений");
			СписокПараметровВызова.ДобавитьЗначение("Справочник",					"Тип");
			СписокПараметровВызова.ДобавитьЗначение("ЗначенияСвойств",				"Вид");
			СписокПараметровВызова.ДобавитьЗначение(ВидСвойства.ТекущийЭлемент(),	"Владелец");
			СписокПараметровВызова.ДобавитьЗначение(1,								"БезГрупп");
			СписокПараметровВызова.ДобавитьЗначение(Спис,							"Объекты");
			СписокПараметровВызова.ДобавитьЗначение(СписБуфер,						"Буфер");
			СписокПараметровВызова.ДобавитьЗначение(гИмяДаннойОбработки,			"ИмяВызвавшейФормы");
			
			ОткрытьФорму("Обработка.ПодборОбъектов#", СписокПараметровВызова);
			
		КонецЕсли;
		
	ИначеЕсли	Найти("СортироватьПоВозрастанию,СортироватьПоУбыванию", Действие) > 0 Тогда

		
	КонецЕсли;
	
КонецФункции

//******************************************************************************

Функция ОбработатьЯчейку(ОбъектВладелец, ВидСвойства)
                                           
	СпрЗнСвойства = СоздатьОбъект("Справочник.ЗначенияСвойств");
	СпрЗнСвойства.ИспользоватьВладельца(ВидСвойства);
	                                               
	Если ВидСвойства.Множественность = 0 Тогда
		//Если СпрЗнСвойства.Выбрать("Выберите новое значение", "ФормаСписка")	= 0	Тогда Возврат 0 КонецЕсли;

                           
		Фрм		= "";
		гСпособ	= "Ячейка";
		СпрЗнСвойства.НайтиПоНаименованию(СокрЛП(Таблица.Область(гСтрЯчейки, гКолЯчейки).Текст), 1, 1);
		ОткрытьПодбор("Справочник.ЗначенияСвойств", ,Фрм, 0, СпрЗнСвойства);
		Фрм.ИспользоватьВладельца(ВидСвойства);
		
		//Если УстановитьЗначениеСвойства(ОбъектВладелец, ВидСвойства, СпрЗнСвойства)		= 0	Тогда Возврат 0 КонецЕсли;
		
		Возврат 0;
	Иначе
                                                
		Спис	= СоздатьОбъект("СписокЗначений");
		СпрЗнСвойства.ВыбратьЭлементы(1);
		Пока СпрЗнСвойства.ПолучитьЭлемент() = 1 Цикл
			Спис.ДобавитьЗначение(СпрЗнСвойства.ТекущийЭлемент());
			Спис.Пометка(Спис.РазмерСписка(), 0);
		КонецЦикла;
		
		ПолучитьЗначениеЯчейки(ОбъектВладелец, ВидСвойства, Спис);

		СписБуфер = СоздатьОбъект("СписокЗначений");
		СписБуфер.ДобавитьЗначение(ОбъектВладелец,	"ОбъектСтроки");
		СписБуфер.ДобавитьЗначение(ВидСвойства,		"ОбъектКолонки");
		СписБуфер.ДобавитьЗначение(гСтрЯчейки,		"СтрокаЯчейки");
		СписБуфер.ДобавитьЗначение(гКолЯчейки,		"КолонкаЯчейки");
		
		СписокПараметровВызова = СоздатьОбъект("СписокЗначений");
		СписокПараметровВызова.ДобавитьЗначение("Справочник",					"Тип");
		СписокПараметровВызова.ДобавитьЗначение("ЗначенияСвойств",				"Вид");
		СписокПараметровВызова.ДобавитьЗначение(ВидСвойства.ТекущийЭлемент(),	"Владелец");
		СписокПараметровВызова.ДобавитьЗначение(1,								"БезГрупп");
		СписокПараметровВызова.ДобавитьЗначение(Спис,							"Объекты");
		СписокПараметровВызова.ДобавитьЗначение(СписБуфер,						"Буфер");
		СписокПараметровВызова.ДобавитьЗначение(гИмяДаннойОбработки,			"ИмяВызвавшейФормы");
		СписокПараметровВызова.ДобавитьЗначение("Нет",							"ИспользоватьЗакладки");
		
		ОткрытьФорму("Обработка.ПодборОбъектов#", СписокПараметровВызова);
	КонецЕсли;
	
КонецФункции

//******************************************************************************

гТипКолонок					= "Справочник";
гВидКолонок					= "ВидыСвойств";
    
гТипСтрок					= "Справочник";
                                                                                                    
//******************************************************************************

РасположениеФайла(гСтрПуть, гИмяФайла);

гИмяДаннойОбработки = гСтрПуть + гИмяФайла;

Если ПустоеЗначение(гИмяДаннойОбработки) = 1 Тогда гИмяДаннойОбработки = "Обработка.СвойстваОбъектов" КонецЕсли;

//******************************************************************************

Если ПустоеЗначение(Форма.Параметр) = 1 Тогда
	                                                                                       
	гВидСтрок				= "Номенклатура";
	гВидСпрЗначенийСвойств	= "СвойстваНоменклатуры";
	гРежимРедактирования	= 1;
	
	гЗаголовокСтрок			= "Номенклатура";
	гЗаголовокКолонок		= "Виды свойств";
	
Иначе
    
	гРежимРедактирования	= Форма.Параметр.Получить("РежимРедактирования");
	гВидСтрок				= Форма.Параметр.Получить("ВидСправочникаВладельца");	
	гВидСпрЗначенийСвойств	= Форма.Параметр.Получить("ВидСправочникаЗнСвойств");
	гЗаголовокСтрок			= Форма.Параметр.Получить("ЗаголовокСтрок");
	гЗаголовокКолонок		= Форма.Параметр.Получить("ЗаголовокКолонок");
	
КонецЕсли;

//******************************************************************************

