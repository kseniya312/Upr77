Перем ТаблЗнач, сп_складов;

Процедура Выполнить()

	
КонецПроцедуры  

//*******************************************
// Процедура генерации запроса РасскажиОТоваре.
//
Процедура РасскажиОТоваре()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(РасскажиОТоваре)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Номенклатура = Регистр.Продажи.Номенклатура;
	|ПродСтоимость = Регистр.Продажи.ПродСтоимость;
	|Количество = Регистр.Продажи.Количество;
	|ТекущийДокумент = Регистр.Продажи.ТекущийДокумент;
	|Склад = Регистр.Продажи.ТекущийДокумент.РасходнаяНакладнаяРозница.Склад, Регистр.Продажи.ТекущийДокумент.Реализация.Склад;
	|Производитель = Регистр.Продажи.Номенклатура.Производитель;
	|КодРозницы = Регистр.Продажи.Номенклатура.КодРозницы;
	|Приоритетен = Регистр.Продажи.Номенклатура.Приоритетен;
	|Функция ПродСтоимостьСумма = Сумма(ПродСтоимость);
	|Функция КоличествоСумма = Сумма(Количество);
	|Группировка Номенклатура без групп все ВошедшиеВЗапрос;
	|Группировка Производитель без групп;
	|Группировка ТекущийДокумент без групп;
	|Условие(Номенклатура в ВыбНоменклатура);
	|Условие(Склад в ВыбСклад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ,1,0);
	ТЗ.НоваяКолонка("инд","число",2,0);
	ТЗ.ВыбратьСтроки();
	сп=СоздатьОбъект("СписокЗначений");
	пока ТЗ.ПолучитьСтроку()=1 цикл
		если сп.найтизначение(сокрЛП(тз.текущийДокумент))=0 Тогда
			ТЗ.Инд=1;
			сп.добавитьЗначение(сокрЛП(тз.текущийДокумент));
		КонецЕсли;
	КонецЦикла;
//	ТЗ.ВыбратьСтроку();
	ТЗ.Сортировать("КодРозницы+,Приоритетен-");
	ТЗ.Свернуть("Номенклатура, Производитель, КодРозницы, Приоритетен","ПродСтоимость,Количество,Инд");
	ТЗ.Сортировать("КодРозницы+,Приоритетен-");
//	ТЗ.ВыбратьСтроку();
	ТЗ2=СоздатьОбъект("ТаблицаЗначений");
	ТЗ2.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
	ТЗ2.НоваяКолонка("Производитель","Справочник.Производители");
	ТЗ2.НоваяКолонка("КодРозницы","число",6,0);
	ТЗ2.НоваяКолонка("Приоритетен","число",1,0);
	ТЗ2.НоваяКолонка("ПродСтоимость","число",14,2);
	ТЗ2.НоваяКолонка("Количество","число",14,2);
	ТЗ2.НоваяКолонка("Инд","число",2,0);
	ТЗ.ВыбратьСтроки();
	
	пока ТЗ.ПолучитьСтроку()=1 Цикл	//Тут выкидываем во вторую ТЗ данные с суммированием по коду и выкидыванием лишних позиций
		арт	= ТЗ.КодРозницы;
		Если ТЗ.Приоритетен=1 Тогда	//тут новая строка
			тз2.новаяСтрока();
			тз2.номенклатура	= тз.номенклатура;
			тз2.Производитель	= тз.производитель;
			тз2.КодРозницы		= тз.КодРозницы;
			тз2.Приоритетен		= тз.Приоритетен;
			тз2.ПродСтоимость	= тз.ПродСтоимость;
			тз2.Количество		= ТЗ.Количество;
			тз2.Инд				= тз.инд;
			старыйарт			= арт;
		ИначеЕсли ((ТЗ.Приоритетен=0) и (арт=старыйарт)) и (тз.кодрозницы<>0) Тогда	//тут плюсуем к уже существующим данным
			тз2.ПродСтоимость	= тз2.ПродСтоимость	+ тз.ПродСтоимость;
			тз2.Количество		= тз2.Количество	+ тз.Количество;
			тз2.Инд				= тз2.инд			+ тз.инд;
		ИначеЕсли тз.КодРозницы=0 Тогда
			тз2.новаяСтрока();
			тз2.номенклатура	= тз.номенклатура;
			тз2.Производитель	= тз.производитель;
			тз2.КодРозницы		= тз.КодРозницы;
			тз2.Приоритетен		= тз.Приоритетен;
			тз2.ПродСтоимость	= тз.ПродСтоимость;
			тз2.Количество		= ТЗ.Количество;
			тз2.Инд				= тз.инд;
			старыйарт			= арт;
		КонецЕсли;
	КонецЦикла;

	ТЗ2.НоваяКолонка("КолСделок","число",14,2);
	ТЗ2.НоваяКолонка("КолШтук","число",14,2);
	ТЗ2.НоваяКолонка("КолОборот","число",14,2);
	а=тз2.итог("Инд")*0.2;//Нам надо 80% от кол-ва сделок
	б=тз2.итог("Количество")*0.2;//Нам надо 80% от кол-ва шт проданных
	с=тз2.итог("ПродСтоимость")*0.2;//Нам надо 80% от оборота
	ОчиститьОкноСообщений();
	Сообщить("Сделок: "+тз2.итог("Инд")+", 20%: "+а);
	Сообщить("Штук: "+тз2.итог("Количество")+", 20%: "+б);
	Сообщить("Оборот: "+тз2.итог("ПродСтоимость")+", 20%: "+с);
	ТЗ2.ВыбратьСтроки();
	Пока ТЗ2.ПолучитьСтроку()=1 Цикл	
		если тз2.инд>=а Тогда
			тз2.колСделок=1;
		КонецЕсли;
		если тз2.количество>=б Тогда
			тз2.колШтук=1;
		КонецЕсли;
		если тз2.ПродСтоимость>=с Тогда
			тз2.колОборот=1;
		КонецЕсли;
	КонецЦикла;
	
	Состояние("Начинаем проставлять полученные данные в справочник");
	ТЗ2.ВыбратьСтроки();
	спр=СоздатьОбъект("Справочник.Номенклатура");
	спр2=СоздатьОбъект("Справочник.АВСГруппа");
	пока ТЗ2.ПолучитьСтроку()=1 Цикл
		Состояние("Товар: "+тз2.номенклатура);
		если спр.НайтиПоКоду(тз2.номенклатура.код,0)=1 Тогда
			спр2.ИспользоватьВладельца(спр.ТекущийЭлемент());
			спр2.ВыбратьЭлементы();
			к=0;
			пока спр2.получитьЭлемент()=1 Цикл
				если спр2.склад=ВыбСклад Тогда
					а=тз2.колСделок+тз2.колШтук+тз2.колОборот;
					если а=3 Тогда
						спр2.ДатаСверки	= ВыбКонПериода;
						спр2.Категория	= 1;
						спр2.Записать();к=1;
					ИначеЕсли а=2 Тогда
						спр2.ДатаСверки	= ВыбКонПериода;
						спр2.Категория	= 2;
						спр2.Записать();к=1;
					ИначеЕсли а=1 Тогда
						спр2.ДатаСверки	= ВыбКонПериода;
						спр2.Категория	= 3;
						спр2.Записать();к=1;
					ИначеЕсли а=0 Тогда
						спр2.ДатаСверки	= ВыбКонПериода;
						спр2.категория	= 4;
						спр2.записать();к=1;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			если к=0 Тогда	//Надо создать нового
				спр2.Новый();
				спр2.Владелец = спр.ТекущийЭлемент();
				спр2.склад	= ВыбСклад;
				спр2.ДатаСверки	= ВыбКонПериода;
				а=тз2.колСделок+тз2.колШтук+тз2.колОборот;
				если а=3 Тогда
					спр2.Категория=1;
					спр2.Записать();к=1;
				ИначеЕсли а=2 Тогда
					спр2.Категория=2;
					спр2.Записать();к=1;
				ИначеЕсли а=1 Тогда
					спр2.Категория=3;
					спр2.Записать();к=1;
				ИначеЕсли а=0 Тогда
					спр2.категория=4;
					спр2.записать();к=1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполниД()
	спр=СоздатьОбъект("Справочник.АВСГруппа");
	спр.ВыбратьЭлементы(0);
	пока спр.ПолучитьЭлемент()=1 Цикл
		Состояние("Обрабатываем товар:" + спр.Владелец);
		если спр.ДатаСверки<датаД Тогда
            Сообщить("Для товара: "+спр.Владелец+", изменена группа АВС на 4-ю");
			спр.Категория = 4;
            спр.ДатаСверки = датаД;
            спр.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры