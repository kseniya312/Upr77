////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем Модифицированность;
Перем Документ;
Перем СписокДопРеквизитов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//*****************************************************************************
// ЗаголовокФормы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Название операции.
//
// Описание:
// 	Формирует название операции и заголовок формы диалога.
//
Функция ЗаголовокФормы()
	
	Заголовок = глНазваниеДокументаВЖурнале(Документ.ТекущийДокумент());
	Название  = Заголовок + " №";
	
	Форма.Заголовок(Заголовок);               
	
	Возврат Название;
	
КонецФункции //ЗаголовокФормы()              

//******************************************************************************
// ПриИзмененииРеквизита(Значение)
//
// Параметры:
//  Значение - <неопределенный>, значение реквизита формы диалога.
//
// Вызывается из формул элементов диалога:
//  НомерДок,Проект,Комментарий,ДатаОплаты,НомерДокВходящий,ДатаДокВходящий,ПринятоОт,
//  Выдать,Основание,Приложение,Счет,Субконто1,Субконто2,Субконто3
//
// Описание:
//  Процедура записывает измененное значение реквизита документа и 
//  устанавливает флаг модифицированности.
//
Процедура ПриИзмененииРеквизита(Значение)
	
	ИмяРеквизита = Форма.АктивныйЭлемент();
	Если Лев(ИмяРеквизита, 3) = "кнХ" Тогда
		ИмяРеквизита = Сред(ИмяРеквизита, 4);
	КонецЕсли;
	
	Если Документ.ПолучитьАтрибут(ИмяРеквизита) <> Значение Тогда
		Документ.УстановитьАтрибут(ИмяРеквизита, Значение);
		Модифицированность = 1;
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииРеквизита()

//******************************************************************************
// УстановитьЗначениеРеквизитаШапки(ИмяРеквизита)
//
// Параметры:
//  ИмяРеквизита - строка, идентификатор реквизита диалога.
//
// Описание:
//  Устанавливает значение реквизита диалога формы, из открытого на редактирование 
// документа.
//
Процедура УстановитьЗначениеРеквизитаШапки(ИмяРеквизита)
	
	Значение = Документ.ПолучитьАтрибут(ИмяРеквизита);
	Элемент  = Форма.ПолучитьАтрибут(ИмяРеквизита);
	
	Если (ТипЗначенияСтр(Значение) = "Справочник") ИЛИ (ТипЗначенияСтр(Значение) = "Счет") Тогда
		Элемент.ВыборГруппы(0);
	КонецЕсли;
	
	Если ИмяРеквизита = "ДатаОплаты" Тогда
		ДатаОплаты = Значение;
	ИначеЕсли ИмяРеквизита = "ВидДокВходящий" Тогда
		ВидДокВходящий = Значение;
	ИначеЕсли ИмяРеквизита = "НомерДокВходящий" Тогда
		НомерДокВходящий = Значение;
	ИначеЕсли ИмяРеквизита = "ДатаДокВходящий" Тогда
		ДатаДокВходящий = Значение;
	ИначеЕсли ИмяРеквизита = "ДополнительнаяИнформация" Тогда
		ДополнительнаяИнформация = Значение; 
	ИначеЕсли ИмяРеквизита = "ПринятоОт" Тогда
		ПринятоОт = Значение;
	ИначеЕсли ИмяРеквизита = "Выдать" Тогда
		Выдать = Значение;
	ИначеЕсли ИмяРеквизита = "Основание" Тогда
		Основание = Значение; 
	ИначеЕсли ИмяРеквизита = "Приложение" Тогда
		Приложение = Значение;
	ИначеЕсли ИмяРеквизита = "Счет" Тогда
		Элемент.УстановитьТип(Значение);
		Счет = Значение;
	ИначеЕсли ИмяРеквизита = "Субконто1" Тогда
		Элемент.УстановитьТип(Значение);
		Субконто1 = Значение;
	ИначеЕсли ИмяРеквизита = "Субконто2" Тогда
		Элемент.УстановитьТип(Значение);
		Субконто2 = Значение;
	ИначеЕсли ИмяРеквизита = "Субконто3" Тогда
		Элемент.УстановитьТип(Значение);
		Субконто3 = Значение;
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗначениеРеквизитаШапки()

//******************************************************************************
// ПриВыбореБухСчета()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Счет
//
// Описание:
//  Отрабатывает все действия, необходимые при выборе бух. счета:
//  проверяет и назначает тип и вид реквизитам "Счет" и "Субконто1-3";
//  формирует заголовки информационных текстовых полей;
//  при необходимости проверяет и назначает владельца реквизитам "Субконто1-3".
//
Процедура ПриВыбореБухСчета()
	
	Перем ВидСубконто;
	
	глПриВыбореБухСчета(Документ, 0);
	Форма.ТекстСчет.Заголовок(Счет.Наименование);
	
	Для Номер = 1 По 3 Цикл
		
		ИмяРеквизита = "Субконто"+Номер;
		УстановитьЗначениеРеквизитаШапки(ИмяРеквизита);
		// установим заголовок (подпись) субконто
		Форма.ПолучитьАтрибут("ПодпСубконто"+Номер).Заголовок(глПредставлениеВидаСубконто(Счет, Номер));
		
		Если "Справочник.ЗначенияСубконто" = глПолучитьТипСубконто(Счет, Номер, ВидСубконто) Тогда
			Если ИмяРеквизита = "Субконто1" Тогда
				Субконто1.ИспользоватьВладельца(ВидСубконто);
			ИначеЕсли ИмяРеквизита = "Субконто2" Тогда
				Субконто2.ИспользоватьВладельца(ВидСубконто);
			ИначеЕсли ИмяРеквизита = "Субконто3" Тогда
				Субконто3.ИспользоватьВладельца(ВидСубконто);
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры // ПриВыбореБухСчета()

//******************************************************************************
// ПриВыбореРеквизитаМнЧ()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Таблица значений "ТаблицаДокумента".
//
// Описание:
//  Устанавливает реквизит спецификации документа
//
Процедура ПриВыбореРеквизитаМнЧ()
	
	Перем ФлагИзменения, Тип, Длина, Точность, Заголовок;
	
	НомСтроки    = ТаблицаДокумента.ТекущаяСтрока();
	ИмяРеквизита = ТаблицаДокумента.ТекущаяКолонка();
	
	Если (ПустаяСтрока(ИмяРеквизита) = 0) И (ИмяРеквизита <> "НомерСтрокиДокумента") И (НомСтроки>0) Тогда
		
		Документ.ПолучитьСтрокуПоНомеру(ТаблицаДокумента.ПолучитьЗначение(НомСтроки, "НомерСтрокиДокумента"));
		Значение = Документ.ПолучитьАтрибут(ИмяРеквизита);
		
	   	ТаблицаДокумента.ПолучитьПараметрыКолонки(ИмяРеквизита, Тип, Длина, Точность, Заголовок);
		
		Если      ТипЗначенияСтр(Значение) = "Число" Тогда
			ФлагИзменения = ВвестиЧисло(Значение, Заголовок, Длина, Точность, 60);
				
		ИначеЕсли ТипЗначенияСтр(Значение) = "Строка" Тогда
			ФлагИзменения = ВвестиСтроку(Значение, Заголовок, Длина, 0, 60);
				
		ИначеЕсли ТипЗначенияСтр(Значение) = "Дата" Тогда
			ФлагИзменения = ВвестиДату(Значение, Заголовок, 60);
				
		ИначеЕсли ТипЗначенияСтр(Значение) = "Перечисление" Тогда
			ФлагИзменения = ВвестиПеречисление(Значение, Заголовок, 60);
			
		ИначеЕсли ТипЗначенияСтр(Значение) = "Справочник" Тогда
			Объект = СоздатьОбъект("Справочник." + Значение.Вид());
			
			Если (Лев(ИмяРеквизита,8) = "Субконто") И (Значение.Вид() = "ЗначенияСубконто") Тогда
				ВидСубконто  = "";
				глПолучитьТипСубконто(Документ.ПолучитьАтрибут("Счет"), Число(Прав(ИмяРеквизита,1)), ВидСубконто);
				Объект.ИспользоватьВладельца(ВидСубконто);
			КонецЕсли;
			
			Если Объект.Выбрать(Значение.ПредставлениеВида(), "") = 1 Тогда
				Значение      = Объект.ТекущийЭлемент();
				ФлагИзменения = 1;
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияСтр(Значение) = "Счет" Тогда
			Объект = СоздатьОбъект("Счет." + Значение.Вид());
			Если Объект.Выбрать(Значение.ПредставлениеВида(), "") = 1 Тогда
				Значение      = Объект.ТекущийСчет();
				ФлагИзменения = 1;
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияСтр(Значение) = "Документ" Тогда
			Объект = СоздатьОбъект("Документ." + Значение.Вид());
			Если Объект.Выбрать(Значение.ПредставлениеВида(), "") = 1 Тогда
				Значение      = Объект.ТекущийДокумент();
				ФлагИзменения = 1;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ФлагИзменения = 1 Тогда
			
			ТаблицаДокумента.УстановитьЗначение(НомСтроки, ИмяРеквизита, Значение);
			Документ.УстановитьАтрибут(ИмяРеквизита, Значение);
			Модифицированность = 1;
			
			Если ИмяРеквизита = "Счет" Тогда
				глПриВыбореБухСчета(Документ, 0);
				Для Номер = 1 По 3 Цикл
					ТаблицаДокумента.УстановитьЗначение(НомСтроки, "Субконто"+Номер, Документ.ПолучитьАтрибут("Субконто"+Номер));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореРеквизитаМнЧ()

//******************************************************************************
// ВыгрузитьТабличнуюЧасть()
//
// Параметры:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Нет
//
// Описание:
//  Процедура осуществляет загруку значений табличной части документа.
//
Процедура ВыгрузитьТабличнуюЧасть()
	
	ТаблицаДокумента.Очистить();
	СписокКолонок = "";
	
	Для Индекс = 1 По СписокДопРеквизитов.РазмерСписка() Цикл
		
		ИмяРеквизита  = СписокДопРеквизитов.ПолучитьЗначение(Индекс);
		
		Если глЕстьРеквизитМнЧ(ИмяРеквизита, Документ.Вид()) = 1 Тогда
			СписокКолонок = СписокКолонок + ИмяРеквизита + ",";
		КонецЕсли;
		
	КонецЦикла;
	
	//если в табличной части документа есть колонки которые можно редактировать
	//данной обработкой (входят в список СписокДопРеквизитов), то выгрузим 
	//табличную часть документа в таблицу обработки
	Если ПустаяСтрока(СписокКолонок) = 0 Тогда
		
		Документ.ВыгрузитьТабличнуюЧасть(ТаблицаДокумента, СписокКолонок + "НомерСтроки");
		
		// после выгрузки установим параметры колонок в соответствии со структурой метаданных
	    Для Номер = 1 По ТаблицаДокумента.КоличествоКолонок() Цикл
			
	    	ИмяРеквизита = ТаблицаДокумента.ПолучитьПараметрыКолонки(Номер);
			
			Если глЕстьРеквизитМнЧ(ИмяРеквизита, Документ.Вид()) = 1 Тогда
				МДРеквизит = Метаданные.Документ(Документ.Вид()).РеквизитТабличнойЧасти(ИмяРеквизита);
				Ширина    = ?(МДРеквизит.Длина > 0, Макс(МДРеквизит.Длина, 25), 15);
				ТаблицаДокумента.УстановитьПараметрыКолонки(Номер, МДРеквизит.Тип, МДРеквизит.Длина, МДРеквизит.Точность, МДРеквизит.Представление(), Ширина, , ?(МДРеквизит.Тип = "Число", 2, 1));
			Иначе
				ТаблицаДокумента.УстановитьПараметрыКолонки(Номер, , , , "N", 5, , 2);
				ТаблицаДокумента.ВидимостьКолонки(ИмяРеквизита, 1, 1);
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры // ВыгрузитьТабличнуюЧасть()

//******************************************************************************
// УстановитьЗакладки()
//
// Параметры:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Нет
//
// Описание:
//  Процедура для документов у которых нужно отредактировать реквизит "Счет" и 
//  "Субконто 1 - 3" или если часть реквизитов находится в табличной части, необходимо
//  подключить использование закладок.
//
Процедура УстановитьЗакладки()
	
	// если есть реквизит документа "Счет" или если редактируемые 
	// реквизиты табличной части нужно использовать закладки.
	Если глЕстьРеквизитШапки("КодОперации", Документ.Вид()) = 1 Тогда
		КодОперации = Документ.КодОперации;
	Иначе
		КодОперации = Перечисление.КодыОпераций.Прочее;
	КонецЕсли;
	
	Если ((глЕстьРеквизитШапки("Счет", Документ.Вид()) = 1) И
	     (КодОперации = Перечисление.КодыОпераций.Прочее)) ИЛИ
		 (ТаблицаДокумента.КоличествоКолонок() > 0) Тогда
		
		Форма.ИспользоватьЗакладки(1);
		Форма.Закладки.УдалитьВсе();
		Форма.Закладки.ДобавитьЗначение("Основная");
		Форма.Закладки.ТекущаяСтрока(1);
		
		Если (глЕстьРеквизитШапки("Счет", Документ.Вид()) = 1) И
		     (КодОперации = Перечисление.КодыОпераций.Прочее) Тогда
			// для реквизитов с идентификатором Субконто1-3
			// необходимо выполнить установку заголовков и владельцев.
			ПриВыбореБухСчета();
			Форма.Закладки.ДобавитьЗначение("Бухгалтерская операция");
		КонецЕсли;
		
		Если ТаблицаДокумента.КоличествоКолонок() > 0 Тогда
			Форма.Закладки.ДобавитьЗначение("Табличная часть");
			Форма.Закладки.ТекущаяСтрока(Форма.Закладки.РазмерСписка());
			Активизировать("ТаблицаДокумента", 0);
		КонецЕсли;
		
	Иначе
		Форма.ИспользоватьЗакладки(0);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗакладки()

//******************************************************************************
// УправлениеСлоями()
//
// Параметры:
//	Нет
//
// Описание:
//  Управляет видимостью реквизитов.
//
Процедура УправлениеСлоями()
	                                 
	Если Форма.ИспользоватьЗакладки() = 1 Тогда
		Закладка = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока());
	Иначе
		Закладка = "Основная";
	КонецЕсли;
	
	Форма.ИспользоватьСлой("ОбщиеРеквизиты", ?(Закладка = "Основная",        1, 0));
	Форма.ИспользоватьСлой("ТабличнаяЧасть", ?(Закладка = "Табличная часть", 1, 0));
	
	// у реквизита "НомерДокВходящий" два варианта подписей 
	// 1-ый вариант когда у документа нет реквизита "ВидДокВходящий", 2-ой когда он есть
	ВидимостьПодпись1 = 0;
	ВидимостьПодпись2 = 0;
	
	Для Индекс = 1 По СписокДопРеквизитов.РазмерСписка() Цикл
		
		ИмяРеквизита = СписокДопРеквизитов.ПолучитьЗначение(Индекс);
		Видимость    = СписокДопРеквизитов.Пометка(Индекс);
		
		Если Закладка = "Табличная часть" Тогда
			// на этой закладке осуществляется редактирование табличной части документа
			Видимость = 0;
			
		ИначеЕсли Закладка = "Основная" Тогда 
			// на этой закладке осуществляется редактирование всех реквизитов кроме счета и субконто
			Если (ИмяРеквизита = "Счет") ИЛИ (Лев(ИмяРеквизита,8) = "Субконто") Тогда
				Видимость = 0;
			Иначе
				Если ИмяРеквизита = "НомерДокВходящий" Тогда
				// у реквизита "НомерДокВходящий" два варианта подписей 
				// 1-ый вариант когда у документа нет реквизита "ВидДокВходящий", 2-ой когда он есть
					Если СписокДопРеквизитов.Пометка(СписокДопРеквизитов.НайтиЗначение("ВидДокВходящий")) = 1 Тогда
						ВидимостьПодпись2 = Видимость;
					Иначе
						ВидимостьПодпись1 = Видимость;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
		ИначеЕсли Закладка = "Бухгалтерская операция" Тогда
			// на этой закладке осуществляется редактирование счета и субконто 1-3
			Если (ИмяРеквизита <> "Счет") И (Лев(ИмяРеквизита,8) <> "Субконто") Тогда
				Видимость = 0;
			КонецЕсли;
		
		КонецЕсли;
		
		Форма.ИспользоватьСлой(ИмяРеквизита, Видимость);
		
	КонецЦикла;
	
	Форма.ИспользоватьСлой("ПодпНомерДокВходящий1", ВидимостьПодпись1);
	Форма.ИспользоватьСлой("ПодпНомерДокВходящий2", ВидимостьПодпись2);
	
КонецПроцедуры  // УправлениеСлоями()

//******************************************************************************
// ПриВыбореДокумента(ВыбДок)
//
// Параметры:
//  ВыбДок - документ, документ реквизиты которого будут редактироватся.
//
// Описание:
//  Процедура осуществляет открытие, блокировку для редактирования и установку
//  значений редактируемых реквизитов выбранного для обработки документа.
//
Процедура ПриВыбореДокумента(ВыбДок)
	
	Докум = СоздатьОбъект("Документ." + ВыбДок.Вид());
	Докум.НайтиДокумент(ВыбДок);
	
	Если Докум.Блокировка(1) = 0 Тогда
		Предупреждение("Запись заблокирована!", 60);
		Возврат;
	КонецЕсли;
		
	Документ = Докум;
	
	Модифицированность = 0;
	//Установим значения общих реквизитов шапки документа
	НомерДок    = Документ.НомерДок;
	ДатаДок     = Документ.ДатаДок;
	Комментарий = Документ.Комментарий;
	Проект      = Документ.Проект;
	
	//Установим значения реквизитов шапки документа
	Для Индекс = 1 По СписокДопРеквизитов.РазмерСписка() Цикл
		
		ИмяРеквизита = СписокДопРеквизитов.ПолучитьЗначение(Индекс);
		СписокДопРеквизитов.Пометка(Индекс, глЕстьРеквизитШапки(ИмяРеквизита, Документ.Вид()));
		
		Если Лев(ИмяРеквизита,8) = "Субконто" Тогда
			//для реквизитов с идентификатором "Субконто1-3" необходимо выполнить 
			//установку заголовков и владельцев, для этого нужно выполнить 
			//специальную процедуру ПриВыбореБухСчета() (выполняется в процедуре УстановитьЗакладки()).
			Продолжить;
		КонецЕсли;
		
		Если СписокДопРеквизитов.Пометка(Индекс) = 1 Тогда
			УстановитьЗначениеРеквизитаШапки(ИмяРеквизита);
		КонецЕсли;
		
	КонецЦикла;
	
	// попробуем загрузить табличную часть 
	ВыгрузитьТабличнуюЧасть();
	// при необходимости установим закладки
	УстановитьЗакладки();
	// установим видимость реквизитов диалога
	УправлениеСлоями();
	
КонецПроцедуры // ПриВыбореДокумента()

//******************************************************************************
// Записать()
//
// Параметры: 
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопки "Записать" и "ОК".
//
// Описание:
//  Процедура делает попытку записи открытого на редактирование документа.
//  Если записать документ не удалось, выдается сообщение об ошибке, отменяется 
// закрытие обработки, флаг модифицированности не обнуляется.
//
Процедура Записать()
	
	Если Модифицированность = 1 Тогда
		Попытка
			Документ.Записать();
		Исключение
			Сообщить(ОписаниеОшибки(), "!");
			СтатусВозврата(0); Возврат;
		КонецПопытки;
		Модифицированность = 0;
	КонецЕсли;
		
КонецПроцедуры // Записать()

//******************************************************************************
// ПоКнопкеДокумент()
//
// Параметры: 
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопка "кнДокумент".
//
// Описание:
//  Процедура открывает для выбора журнал документов.
//
Процедура ПоКнопкеДокумент()
	
	Ответ = "";
	
	Если Модифицированность = 1 Тогда
		Ответ = Вопрос("Сохранить Документ?", "Да+Нет+Отмена", 60);
		Если Ответ = "Да" Тогда
			Записать();
			Если Модифицированность = 1 Тогда
				Ответ = "Отмена";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Ответ <> "Отмена" Тогда
		Док = СоздатьОбъект("Документ");
		Если Док.Выбрать("Выберите документ") = 1 Тогда
			ПриВыбореДокумента(Док.ТекущийДокумент());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеДокумент()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	
	Форма.ИспользоватьСлой("НазваниеДокумента,Кнопки", 1);

	Если (ТипЗначенияСтр(Форма.Параметр) = "Документ") И 
	     (ПустоеЗначение(Форма.Параметр) = 0) Тогда
		ПриВыбореДокумента(Форма.Параметр);
		Форма.ИспользоватьСлой("КнопкаДокумент", 0);
		
	Иначе
		Форма.ИспользоватьСлой("КнопкаДокумент", 1);
		ПоКнопкеДокумент();
		
	КонецЕсли;
	
	Если Документ.Выбран() = 0 Тогда
		СтатусВозврата(0);Возврат;
	КонецЕсли;
		         
	Если Документ.ДатаДок <= Константа.ДатаЗапретаРедактирования Тогда
		Предупреждение("Редактирование документа не разрешено!",60);
		СтатусВозврата(0);Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	УправлениеСлоями();
	
КонецПроцедуры                                                                  

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	Если Модифицированность = 1 Тогда
		Ответ = Вопрос("Сохранить Документ?", "Да+Нет+Отмена", 60);
		Если Ответ = "Да" Тогда
			Записать();
		ИначеЕсли Ответ = "Отмена" Тогда
			СтатусВозврата(0); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
Модифицированность = 0;
Документ           = ПолучитьПустоеЗначение("Документ");

СписокДопРеквизитов = СоздатьОбъект("СписокЗначений");
// редактируемые реквизиты шапки документа
СписокДопРеквизитов.ДобавитьЗначение("ДатаОплаты");       // дата 
СписокДопРеквизитов.ДобавитьЗначение("ВидДокВходящий");   // строка 50
СписокДопРеквизитов.ДобавитьЗначение("НомерДокВходящий"); // строка 15
СписокДопРеквизитов.ДобавитьЗначение("ДатаДокВходящий");  // дата 
СписокДопРеквизитов.ДобавитьЗначение("ДополнительнаяИнформация");   // строка 50
СписокДопРеквизитов.ДобавитьЗначение("ПринятоОт");   // строка 80
СписокДопРеквизитов.ДобавитьЗначение("Выдать");      // строка 80
СписокДопРеквизитов.ДобавитьЗначение("Основание");   // строка 64
СписокДопРеквизитов.ДобавитьЗначение("Приложение");  // строка 150

// редактируемые реквизиты шапки или табличной части документа
СписокДопРеквизитов.ДобавитьЗначение("Счет");        // неопределенный
СписокДопРеквизитов.ДобавитьЗначение("Субконто1");   // неопределенный
СписокДопРеквизитов.ДобавитьЗначение("Субконто2");   // неопределенный
СписокДопРеквизитов.ДобавитьЗначение("Субконто3");   // неопределенный

// редактируемые реквизиты табличной части документа
СписокДопРеквизитов.ДобавитьЗначение("Содержание");   // строка 80 - 100 (для табличной части размер значения не имеет)

Форма.ПанельИнструментов(0);
