Перем Имя, СледДокПоследовательности, ТекДокПоследовательности;
Перем Что, ОконЧас, ОконМин;
Перем ЧасПН, МинПН, ЧасНовое, МинНовое;
Перем АдресМыла;
Перем Автор, Версия;
Перем ТекстПротокол, ИмяКат, ФайлПротокол;
Перем РежимПротокола, РежимСообщений;
Перем ДокВсего, ДокПроведено, ДокНеПроведено;
Перем ОбщееВремя, ОбщееВремяПроведения;
Перем НомерЗакладки, ТихийРежим;
Перем ДокВыведенВПротокол, ДокВыведенВСообщения;
Перем ДокиДляПроведения;
Перем КолДокументов;

//---------------------------------------------------------------------------
Процедура ДомашняяСтраница()
	ЗапуститьПриложение("http://infostart.ru/projects/3178/");
КонецПроцедуры

//---------------------------------------------------------------------------
Функция _СекундыВВремя(КолвоСек=0)
	Перем КолЧас, КолМин, КолСек, Возв;
	КолЧас=Цел(КолвоСек/3600);
	КолМин=Цел((КолвоСек-КолЧас*3600)/60);
	КолСек=((КолвоСек-КолЧас*3600+КолМин*60)%60);
	Если КолЧас>99 Тогда
		Возв=СокрЛП(КолЧас);
	Иначе
		Возв=Прав("0"+СокрЛП(КолЧас),2);
	КонецЕсли;
	Возв=Возв+":"+Прав("0"+СокрЛП(КолМин),2);
	Возв=Возв+":"+Прав("0"+СокрЛП(КолСек),2);
	Возврат Возв;
КонецФункции

//---------------------------------------------------------------------------
Функция ПолучитьТекДокПоследовательности()
	Возврат ТекДокПоследовательности;
КонецФункции

//---------------------------------------------------------------------------
Процедура Протокол(тСообщения,ТД=0)
	Перем ДатаВремя;
	ДатаВремя=""+ТекущаяДата()+" "+ТекущееВремя()+". ";
	Если тСообщения="Начало" Тогда
		Если РежимПротокола<>1 Тогда
			ТекстПротокол.ДобавитьСтроку("=======================================================================================");
			ТекстПротокол.ДобавитьСтроку("Пользователь               : "+ИмяПользователя());
			ТекстПротокол.ДобавитьСтроку("Восстановление начато      : "+ТекущаяДата()+" в "+ТекущееВремя());
			ТекстПротокол.ДобавитьСтроку("Последовательность         : "+Последовательность.ОсновнаяПоследовательность.Получить());
			ТекстПротокол.ДобавитьСтроку("Граница                    : "+ПолучитьТекДокПоследовательности());
			ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Сообщить("=======================================================================================");
			Сообщить("Восстановление начато           : "+ТекущаяДата()+" в "+ТекущееВремя());
			Сообщить("Последовательность               : "+Последовательность.ОсновнаяПоследовательность.Получить());
			Сообщить("Граница                                     : "+ПолучитьТекДокПоследовательности());
			Сообщить("***************************************************************************************");
		КонецЕсли;
	ИначеЕсли тСообщения="Окончание" Тогда
		Если РежимПротокола<>1 Тогда
			Если ДокВыведенВПротокол=1 Тогда
				ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
			КонецЕсли;
			ТекстПротокол.ДобавитьСтроку("Восстановление окончено    : "+ТекущаяДата()+" в "+ТекущееВремя());
			ТекстПротокол.ДобавитьСтроку("Последовательность         : "+Последовательность.ОсновнаяПоследовательность.Получить());
			ТекстПротокол.ДобавитьСтроку("Граница                    : "+ПолучитьТекДокПоследовательности());
			ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Если ДокВыведенВСообщения=1 Тогда
				Сообщить("***************************************************************************************");
			КонецЕсли;
			Сообщить("Восстановление окончено:     : " + ТекущаяДата() + " в " + ТекущееВремя());
			Сообщить("Последовательность               : " + Последовательность.ОсновнаяПоследовательность.Получить());
			Сообщить("Граница                                     : " + ПолучитьТекДокПоследовательности());
			Сообщить("***************************************************************************************");
		КонецЕсли;
	ИначеЕсли тСообщения="УсловиеВыхода" Тогда
		Если РежимПротокола<>1 Тогда
			ТекстПротокол.ДобавитьСтроку("Прерано по условию         : "+ТекущаяДата()+" в "+ТекущееВремя());
			ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Сообщить("Прерано по условию               : "+ТекущаяДата()+" в "+ТекущееВремя());
			Сообщить("***************************************************************************************");
		КонецЕсли;
	ИначеЕсли тСообщения="ПредварительноНачало" Тогда
		Если РежимПротокола<>1 Тогда
			ТекстПротокол.ДобавитьСтроку(ДатаВремя+"Предварительная обработка начата.");
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Сообщить(ДатаВремя+"Предварительная обработка начата.");
		КонецЕсли;
	ИначеЕсли тСообщения="ПредварительноОкончание" Тогда
		Если РежимПротокола<>1 Тогда
			ТекстПротокол.ДобавитьСтроку(ДатаВремя+"Предварительная обработка закончена.");
			ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Сообщить(ДатаВремя+"Предварительная обработка закончена.");
			Сообщить("***************************************************************************************");
		КонецЕсли;
	ИначеЕсли тСообщения="Итоги" Тогда
		ОбщееВремяПроведения=ОбщееВремяПроведения/1000;
		Если РежимПротокола<>1 Тогда
			ТекстПротокол.ДобавитьСтроку("Всего документов обработано: "+СокрЛП(Формат(ДокВсего,"Ч15.0.'")));
			ТекстПротокол.ДобавитьСтроку("Проведено документов       : "+СокрЛП(Формат(ДокПроведено,"Ч15.0.'")));
			ТекстПротокол.ДобавитьСтроку("НЕ проведено документов    : "+СокрЛП(Формат(ДокНеПроведено,"Ч15.0.'")));
			ТекстПротокол.ДобавитьСтроку("Общее время обработки      : "+СокрЛП(Формат(ОбщееВремя,"Ч15.0.'"))+" сек.");
			ТекстПротокол.ДобавитьСтроку("Общее время проведения     : "+СокрЛП(Формат(ОбщееВремяПроведения,"Ч15.0.'"))+" сек.");
			Если ДокВсего>0 Тогда
				ТекстПротокол.ДобавитьСтроку("Среднее время обработки    : "+СокрЛП(Формат(ОбщееВремя/ДокВсего,"Ч15.3.'"))+" сек/док.");
			КонецЕсли;
			Если ДокПроведено>0 Тогда
				ТекстПротокол.ДобавитьСтроку("Среднее время проведения   : "+СокрЛП(Формат(ОбщееВремяПроведения/ДокПроведено,"Ч15.3.'"))+" сек/док.");
			КонецЕсли;
			ТекстПротокол.ДобавитьСтроку("***************************************************************************************");
			ТекстПротокол.Записать(ФайлПротокол); 
			Сообщить("Протокол записан в "+ФайлПротокол);
		КонецЕсли;
		Если (РежимСообщений<>1) и (ТихийРежим=0) Тогда
			Сообщить("Всего документов обработано: "+СокрЛП(Формат(ДокВсего,"Ч15.0.'")));
			Сообщить("Проведено документов            : "+СокрЛП(Формат(ДокПроведено,"Ч15.0.'")));
			Если ДокНеПроведено=0 Тогда
				Сообщить("НЕ проведено документов       : 0");
			Иначе
				Сообщить("НЕ проведено документов       : "+СокрЛП(Формат(ДокНеПроведено,"Ч15.0.'")),"!");
			КонецЕсли;
			Сообщить("Общее время обработки          : "+СокрЛП(Формат(ОбщееВремя,"Ч15.0.'"))+" сек.");
			Сообщить("Общее время проведения        : "+СокрЛП(Формат(ОбщееВремяПроведения,"Ч15.0.'"))+" сек.");
			Если ДокВсего>0 Тогда
				Сообщить("Среднее время обработки        : "+СокрЛП(Формат(ОбщееВремя/ДокВсего,"Ч15.3.'"))+" сек/док.");
			КонецЕсли;
			Если ДокПроведено>0 Тогда
				Сообщить("Среднее время проведения      : "+СокрЛП(Формат(ОбщееВремяПроведения/ДокПроведено,"Ч15.3.'"))+" сек/док.");
			КонецЕсли;
			Сообщить("***************************************************************************************");
		КонецЕсли;
	ИначеЕсли тСообщения="НеПроведен" Тогда
		Если РежимПротокола>2 Тогда
			ТекстПротокол.ДобавитьСтроку(ДатаВремя+"Документ не проведен - "+ТД);
			ДокВыведенВПротокол=1;
		КонецЕсли;
		Если (флЗаписьПослеДока=1) и (РежимПротокола<>1) Тогда
			ТекстПротокол.Записать(ФайлПротокол);
		КонецЕсли;
		Если (РежимСообщений>2) и (ТихийРежим=0) Тогда
			Сообщить(ДатаВремя+"Документ не проведен - "+ТД,"!");
			ДокВыведенВСообщения=1;
		КонецЕсли;
	ИначеЕсли тСообщения="Проведен" Тогда
		Если РежимПротокола=4 Тогда
			ТекстПротокол.ДобавитьСтроку(ДатаВремя+"Документ проведен - "+ТД);
			ДокВыведенВПротокол=1;
		КонецЕсли;
		Если (флЗаписьПослеДока=1) и (РежимПротокола<>1) Тогда
			ТекстПротокол.Записать(ФайлПротокол);
		КонецЕсли;
		Если (РежимСообщений=4) и (ТихийРежим=0) Тогда
			Сообщить(ДатаВремя+"Документ проведен - "+ТД);
			ДокВыведенВСообщения=1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ВыбКат()
	Если ФС.ВыбратьКаталог(ИмяКат,"Выберите каталог для файла протокола")=1 Тогда
		Если СтрДлина(ИмяКат)>3 Тогда ИмяКат=ИмяКат+"\"; КонецЕсли;
		ФайлПротокол=ИмяКат+СокрЛП(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ВыбФайл()
	Если ФС.ВыбратьФайл(0,ИмяФайла,ИмяКат,"Выберите файл протокола","Файлы протокола *.log","*.log")=1 Тогда
		ФайлПротокол=ИмяКат+СокрЛП(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Функция _ДатаANSI(Д) Экспорт
	Возврат Прав(Строка(ДатаГод(Д)),2)+Прав("0"+Строка(ДатаМесяц(Д)),2)+Прав("0"+Строка(ДатаЧисло(Д)),2);
КонецФункции

//---------------------------------------------------------------------------
Функция _РазнВремени(Нач,Кон,ДатаНач=0,ДатаКон=0) Экспорт
	Перем А1, А2;
	А1=Число(Лев(Нач,2))*3600+Число(Сред(Нач,4,2))*60+Число(Прав(Нач,2));
	А2=Число(Лев(Кон,2))*3600+Число(Сред(Кон,4,2))*60+Число(Прав(Кон,2));
	Если (ДатаНач=0) или (ДатаКон=0) Тогда
		Если А2>=А1 Тогда Возврат А2-А1;
		Иначе Возврат 86400-А1+А2;
		КонецЕсли;
	Иначе
		Возврат 86400*(ДатаКон-ДатаНач)+А2-А1;
	КонецЕсли;
КонецФункции

//---------------------------------------------------------------------------
Функция фТекВремя()
	Возврат Лев(ТекущееВремя(),5);
КонецФункции

//---------------------------------------------------------------------------
Функция ПолучитьПоследовательность()
	Возврат Что.Получить();
КонецФункции

//---------------------------------------------------------------------------
Функция ПолучитьСледДокПоследовательности()
	Перем ПозицияНач, ТекДок;
    ТекДок=СоздатьОбъект("Документ");
	Если флВсеДокументы=0 Тогда
	    ПозицияНач=СформироватьПозициюДокумента(Что.ПолучитьПозицию(),1);
		ТекДок.ВыбратьПоПоследовательности(ПозицияНач,ПолучитьПозициюТА(),Имя);
	Иначе
		ТекДок.УстановитьФильтр(1,0);
		Если ТипЗначенияСтр(ТекДокПоследовательности)="Документ" Тогда
			ТекДок.ВыбратьДокументы(ТекДокПоследовательности,);
			ТекДок.ПолучитьДокумент();
		Иначе
		    ПозицияНач=СформироватьПозициюДокумента(Что.ПолучитьПозицию(),1);
			ТекДок.ВыбратьДокументы(ПозицияНач,);
		КонецЕсли;
	КонецЕсли;
	ТекДок.ПолучитьДокумент();
	СледДокПоследовательности=ТекДок.ТекущийДокумент();
	Возврат СледДокПоследовательности;
КонецФункции

//---------------------------------------------------------------------------
Процедура ОткрытьСледДокПоследовательности()
	Перем КонтДок;
	ОткрытьФорму(СледДокПоследовательности,КонтДок,-1);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ОткрытьДокПоследовательности()
	Перем КонтДок;
	ОткрытьФорму(ТекДокПоследовательности,КонтДок,-1);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура Отправить(ТД)
	Попытка
		E_mail = СоздатьОбъект("AddIn.V7Mail");    
		E_mail.Подключиться();
		E_mail.НовоеСообщение();
		E_mail.Заголовок = "Document not passed!";
		E_mail.Текст = Строка(ТД);
		E_mail.ДобавитьАдрес(АдресМыла);       
		E_mail.Послать(0);
		E_mail.Отключиться();
		E_mail = 0;
	Исключение    
		E_mail.Отключиться();
		E_mail = 0;
		Сообщить("Похоже, что-то не получилось!","!");
		Сообщить("Возможно, Outlook не установлен!","!");
	КонецПопытки;     
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура Установить()
	Имя=Посл.ПолучитьЗначение(Посл.ТекущаяСтрока());
	Что=Последовательность.ПолучитьАтрибут(Имя);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура УстановитьГПНаДок()
	Перем Док;
	Если ВыбДок.Выбран() = 1 Тогда
		глГрупповаяОбработка = 1;
	    Док = СоздатьОбъект("Документ");
		Док.НайтиПоНомеру(ВыбДок.НомерДок,ВыбДок.ДатаДок,ВыбДок.Вид());
		Если Вопрос("Провести документ?", "Да+Нет") = "Да" Тогда
		    Док.Провести();
		КонецЕсли;
		Что.Установить(Док.ТекущийДокумент());
		Сообщить("***************************************************************************************");
		Сообщить("Последовательность " + Имя + " установлена на " + Док);
		глГрупповаяОбработка = 0;
	Иначе
		Предупреждение("Не выбран Документ!");
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ИзмВремяПН()
	ЧасПН=Число(Лев(ВремяПн,2));
	МинПН=Число(Прав(ВремяПн,2));
	ЧасПН=Мин(ЧасПН,23); МинПН=Мин(МинПН,59);
	ВремяПн=Прав("00"+ЧасПН,2)+":"+Прав("00"+МинПН,2);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ИзмВремяНов()
	ЧасНовое=Число(Лев(ВремяНов,2));
	МинНовое=Число(Прав(ВремяНов,2));
	ЧасНовое=Мин(ЧасНовое,23); МинНовое=Мин(МинНовое,59);
	ВремяНов=Прав("00"+ЧасНовое,2)+":"+Прав("00"+МинНовое,2);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура ИзмВремяОкончания()
	ОконЧас=Число(Лев(ВремяОкончания,2));
	ОконМин=Число(Прав(ВремяОкончания,2));
	ОконЧас=Мин(ОконЧас,23); ОконМин=Мин(ОконМин,59);
	ВремяОкончания=Прав("00"+ОконЧас,2)+":"+Прав("00"+ОконМин,2);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура тзСдвинуть(КоличСтрок)
	Перем ТекСтрока;
	ТекСтрока=тзПриходных.ТекущаяСтрока();
	Если КоличСтрок=-1 Тогда
		Если тзПриходных.ТекущаяСтрока()=1 Тогда
			Возврат;
		КонецЕсли;
		ТекСтрока=ТекСтрока-1;
	ИначеЕсли КоличСтрок=1 Тогда
		Если тзПриходных.ТекущаяСтрока()=тзПриходных.КоличествоСтрок() Тогда
			Возврат;
		КонецЕсли;
		ТекСтрока=ТекСтрока+1;
	КонецЕсли;
	тзПриходных.СдвинутьСтроку(КоличСтрок);
	тзПриходных.ТекущаяСтрока(ТекСтрока);
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура тзПометить()
	Перем ТекСтрока;
	ТекСтрока=тзПриходных.ТекущаяСтрока();
	Если ТекСтрока=0 Тогда
		Возврат;
	ИначеЕсли ТекСтрока>тзПриходных.КоличествоСтрок() Тогда
		Возврат;
	КонецЕсли;
	Если тзПриходных.Знак=1 Тогда
		тзПриходных.Знак=0;
	Иначе
		тзПриходных.Знак=1;
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Процедура тзСортировать()
	тзПриходных.Сортировать("Знак-,Вид+");
КонецПроцедуры

//---------------------------------------------------------------------------
Функция ПроверитьУсловиеВыхода(Предварительно=0)
	Перем ТекЧас, ТекМин, ТекСек, ТекВремя, Результат;
	//Возвращает:
	//1 - прервать обработку
	//0 - продолжить
	Результат=0;
	ТекВремя=ТекущееВремя(ТекЧас,ТекМин,ТекСек);
	Если флЗавершитьОбработку=1 Тогда
		Если ОконДата<ТекущаяДата() Тогда
			Результат=1;
		ИначеЕсли ОконДата=ТекущаяДата() Тогда
			Если ТекЧас>ОконЧас Тогда
				Результат=1;
			ИначеЕсли (ТекЧас=ОконЧас) и (ТекМин>=ОконМин) Тогда
				Результат=1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если (Результат=0) и (Предварительно=0) Тогда
		Если (чПоДату=1) и (ДокиДляПроведения.ДатаДок>=ВыбДата) Тогда
			Результат=1;
		КонецЕсли;
	КонецЕсли;
	Если Результат=1 Тогда
		Протокол("УсловиеВыхода");
		Возврат 1;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

//---------------------------------------------------------------------------
Функция ПроведениеДокумента()
	Перем Результат, НачалоПроведения;
	//Возвращает:
	//1 - проведение успешно
	//0 - документ не провелся
	НачалоПроведения=_GetPerformanceCounter();
	глГрупповаяОбработка=1;
	Результат=ДокиДляПроведения.Провести();
	ОбщееВремяПроведения=ОбщееВремяПроведения+_GetPerformanceCounter()-НачалоПроведения;
	Если Результат=0 Тогда
		ЗаписьЖурналаРегистрации("Ручное восст. послед.","Документ","-ошибка проведения",ДокиДляПроведения.ТекущийДокумент(),2);
		Протокол("НеПроведен",ДокиДляПроведения);
		ДокНеПроведено=ДокНеПроведено+1;
	Иначе
		Протокол("Проведен",ДокиДляПроведения);
		ДокПроведено=ДокПроведено+1;
	КонецЕсли;
	глГрупповаяОбработка=0;
	Возврат Результат;
КонецФункции

//---------------------------------------------------------------------------
Процедура Пауза(Секунд)
	Перем НачалоОтсчета;
	НачалоОтсчета=_GetPerformanceCounter();
	Пока 1000*(_GetPerformanceCounter()-НачалоОтсчета)<ТаймАут Цикл
		Форма.Обновить();
	КонецЦикла;
КонецПроцедуры

//---------------------------------------------------------------------------
Функция ПНвНачало()
	Перем ччПН, ммПН, ссПН, текДатаПН;
	Перем НовЧасПН, НовМинПН, НовСекПН, Инд, спПриходных;

	Если ПустоеЗначение(ДатаС)=1 Тогда
		Сообщить("Не задана начальная дата обработки ПН");
	    Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ДатаПо)=1 Тогда
		Сообщить("Не задана конечная дата обработки ПН");
	    Возврат 0;
	КонецЕсли;
	ДатаПо=Мин(ДатаПо,ПолучитьДатуТА());
	ДатаПо=Макс(ДатаС,ДатаПо);
	тзДок=СоздатьОбъект("ТаблицаЗначений");
	тзДок.НоваяКолонка("Док","Документ");
	НовЧасПН=ЧасНовое; НовМинПН=МинНовое; НовСекПН=0;
	текДатаПН=ДатаС;

	спПриходных=СоздатьОбъект("СписокЗначений");
	Для Инд=1 По тзПриходных.КоличествоСтрок() Цикл
		тзПриходных.ПолучитьСтрокуПоНомеру(Инд);
		Если тзПриходных.Знак=1 Тогда
			спПриходных.ДобавитьЗначение(тзПриходных.Вид);
		КонецЕсли;
	КонецЦикла;
	Если спПриходных.РазмерСписка()=0 Тогда
		Сообщить("Список видов документов для предварительной обработки  пустой");
	    Возврат 0;
	КонецЕсли;
	
	Пока текДатаПН<=ДатаПо Цикл
		Для Инд=1 По спПриходных.РазмерСписка() Цикл
			ДокиДляПроведения=СоздатьОбъект("Документ."+СокрЛП(спПриходных.ПолучитьЗначение(Инд)));
			тзДок.УдалитьСтроки();
			ДокиДляПроведения.УстановитьФильтр(1,0);
			ДокиДляПроведения.ВыбратьДокументы(текДатаПН,текДатаПН);
			Пока ДокиДляПроведения.ПолучитьДокумент() = 1 Цикл
				Если ДокиДляПроведения.Проведен()=0 Тогда
					Продолжить;
				КонецЕсли;
				ВремяДокум=ДокиДляПроведения.ПолучитьВремя(ччПН,ммПН,ссПН);
				Если ччПН<ЧасПН Тогда
					Продолжить;
				ИначеЕсли (ччПН=ЧасПН) и (ммПН<МинПН) Тогда
					Продолжить;
				КонецЕсли;
				тзДок.НоваяСтрока();
				тзДок.Док=ДокиДляПроведения.ТекущийДокумент();
			КонецЦикла;
	
			тзДок.ВыбратьСтроки();
			Пока тзДок.Получитьстроку()=1 Цикл
				Если ПроверитьУсловиеВыхода(1)=1 Тогда
					Возврат 0;
				КонецЕсли;
				ДокиДляПроведения.НайтиДокумент(тзДок.Док);
				ДокВсего=ДокВсего+1;
				НачатьТранзакцию();
				ДокиДляПроведения.СделатьНеПроведенным();
				НовСекПН=НовСекПН+1;
				Если НовСекПН=60 Тогда
					НовСекПН=0;
					НовМинПН=НовМинПН+1;
					Если НовМинПН=60 Тогда
						НовМинПН=0;
						НовЧасПН=НовЧасПН+1;
						Если НовЧасПН=24 Тогда
							//Сообщить("мда..... Новые часы вышли за 24-часовый формат");
							НовЧасПН=23; НовМинПН=59; НовСекПН=59;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ДокиДляПроведения.УстановитьВремя(НовЧасПН,НовМинПН, НовСекПН);
				ДокиДляПроведения.Записать();
				Если ПроведениеДокумента()=1 Тогда
					ЗафиксироватьТранзакцию();
				Иначе
					ОтменитьТранзакцию();
					//Возврат 0;
				КонецЕсли;
				Если (флТаймАут=1) и (ТаймАут<>0) Тогда
					Пауза(ТаймАут);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		текДатаПН=текДатаПН+1;
	КонецЦикла;
	Возврат 1;
КонецФункции

//---------------------------------------------------------------------------
Процедура Выполнить()
	Перем ОбщееНачало, Результат;

	Если РежимПротокола<>1 Тогда
		Если ФС.СуществуетФайл(Лев(ИмяКат,СтрДлина(ИмяКат)-1))=0 Тогда
			ФС.СоздатьКаталог(Лев(ИмяКат,СтрДлина(ИмяКат)-1));
		КонецЕсли;
	КонецЕсли;
	ДокВыведенВПротокол=0;
	ДокВыведенВСообщения=0;
	РежимПротокола=спПротокол.ТекущаяСтрока();
	РежимСообщений=спСообщения.ТекущаяСтрока();   
	
	Сообщить("Режим протокола: "+РежимПротокола); 
	Сообщить("Режим сообщений: "+РежимСообщений);
	
	Если РежимПротокола<>1 Тогда
		ТекстПротокол=СоздатьОбъект("Текст");
		Если ФС.СуществуетФайл(ФайлПротокол)=1 Тогда
			ТекстПротокол.Открыть(ФайлПротокол);
			ТекстПротокол.ДобавитьСтроку("");
		КонецЕсли;
		ТекстПротокол.КодоваяСтраница(0);
	КонецЕсли;

	ДокВыведенВСообщения=0;
	Протокол("Начало");
	ОбщееНачало=_GetPerformanceCounter();
	ОбщееВремяПроведения=0;
	ДокВсего=0; ДокПроведено=0; ДокНеПроведено=0;

	Если флПНвНачало=1 Тогда
		Протокол("ПредварительноНачало");
		Результат=ПНвНачало();
		Протокол("ПредварительноОкончание");
		Если (флПерепровестиВыйти=1) или (Результат=0) Тогда
			Протокол("Окончание");
			ОбщееВремя=(_GetPerformanceCounter()-ОбщееНачало)/1000;
			Протокол("Итоги");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ДокиДляПроведения=СоздатьОбъект("Документ");
	ДокиДляПроведения.УстановитьФильтр(1,0);
	ПолучитьСледДокПоследовательности();      
	Если ПустоеЗначение(СледДокПоследовательности)=0 Тогда
		ДокиДляПроведения.ВыбратьДокументы(СледДокПоследовательности,);
		Пока ДокиДляПроведения.ПолучитьДокумент()=1 Цикл
			Если ДокиДляПроведения.Проведен()=0 Тогда
				Продолжить;
			КонецЕсли;
			Если (флВсеДокументы=1) или (Что.ПринадлежитПоследовательности(ДокиДляПроведения.ТекущийДокумент())=1) Тогда
				Если ПроверитьУсловиеВыхода(0)=1 Тогда
					Прервать;
				КонецЕсли;
				ДокВсего=ДокВсего+1;
				Результат=ПроведениеДокумента();
				Если ((Результат=0) и (флПродолжать=0)) или ((ДокВсего >= КолДокументов) и (КолДокументов<>0)) Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			Если ТихийРежим=0 Тогда
				Форма.Обновить();
			КонецЕсли;
			Если (флТаймАут=1) и (ТаймАут<>0) Тогда
				Пауза(ТаймАут);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
    
	ГП = Последовательность.ОсновнаяПоследовательность.ПолучитьДокумент();      
	ТекДокПоследовательности = ГП.ТекущийДокумент();
	
	Протокол("Окончание");
	ОбщееВремя=(_GetPerformanceCounter()-ОбщееНачало)/1000;
	Протокол("Итоги");   
	
	Константа.ПроверкаОстатковПеремещениеТМЦ = 1;
	Константа.ПроверкаОстатковПеремещениеТМЦРозница = 1;
	Константа.ПроверкаОстатковРеализация = 1;
	Константа.ПроверкаОстатковПеремещениеДенегКасса = 1;
	Константа.ПроверкаКолваЗаказанногоРНРБн = 1;
	
	Если флВыйти = 1 Тогда 
		ЗавершитьРаботуСистемы(0);
	КонецЕсли;
КонецПроцедуры

//---------------------------------------------------------------------------
Функция УстДоступность()
	Если НомерЗакладки=1 Тогда
		Форма.ТаймАут.Видимость(флТаймАут);
		Форма.ВремяОкончания.Видимость(флЗавершитьОбработку);
		Форма.ОконДата.Видимость(флЗавершитьОбработку);
		Форма.ВыбДата.Видимость(чПоДату);
		Если ВыбДок.Выбран()=1 Тогда
			Форма.кнВыбДок.Доступность(1);
			Форма.кнВыбДок0.Доступность(1);
		Иначе
			Форма.кнВыбДок.Доступность(0);
			Форма.кнВыбДок0.Доступность(0);
		КонецЕсли;
		Если флВсеДокументы=1 Тогда
			Форма.Посл.Доступность(0);
		Иначе
			Форма.Посл.Доступность(1);
		КонецЕсли;
	Иначе
		Форма.ТаймАут.Видимость(0);
		Форма.ВремяОкончания.Видимость(0);
		Форма.ОконДата.Видимость(0);
		Форма.ВыбДата.Видимость(0);
	КонецЕсли;
	ТекДокПоследовательности=Что.ПолучитьДокумент().ТекущийДокумент();
	Возврат "";
КонецФункции

//---------------------------------------------------------------------------
Процедура ПриВыбореЗакладки(Номер,Значение)	// Предопределенная процедура
	// закладки
    Если Номер=1 Тогда
    	Форма.ИспользоватьСлой("Основной,Общий",2);
    ИначеЕсли Номер=2 Тогда
    	Форма.ИспользоватьСлой("Протокол,Общий",2);
    ИначеЕсли Номер=3 Тогда
    	Форма.ИспользоватьСлой("Предварительная,Общий",2);
	КонецЕсли;
	НомерЗакладки=Номер;
КонецПроцедуры	// ПриВыбореЗакладки

//---------------------------------------------------------------------------
Процедура ПриОткрытии()
	Перем Парсер, Инд, НомСтр;         
	
	Форма.ВыбДата.Видимость(чПоДату);
	Форма.ВремяОкончания.Видимость(флЗавершитьОбработку);
	Форма.ОконДата.Видимость(флЗавершитьОбработку);
	Форма.ТаймАут.Видимость(флТаймАут);
	ОконЧас=7; ОконМин=30; ВремяОкончания="07:30";
	ЧасПН=8; МинПН=0; ВремяПн="08:00";
	ЧасНовое=6; МинНовое=0; ВремяНов="06:00";
	ОконДата=ТекущаяДата()+1;
	ДатаПо=ПолучитьДатуТА();
	Для i = 1 по Метаданные.Последовательность() цикл
		Парсер=Метаданные.Последовательность(i);
		Если Парсер.Документы.Количество()>0 Тогда
			Посл.ДобавитьЗначение(Парсер.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	Если Посл.РазмерСписка()<1 Тогда
		Сообщить("В Конфигурации нет ни одной Последовательности, содержащей Документы");
		Сообщить("Выполнять эту обработку нет необходимости");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Посл.ТекущаяСтрока(1);
	Имя=Посл.ПолучитьЗначение(Посл.ТекущаяСтрока());
	Что=Последовательность.ПолучитьАтрибут(Имя);
	ТекДокПоследовательности=Что.ПолучитьДокумент().ТекущийДокумент();
	Попытка
		ДатаС=ТекДокПоследовательности.ДатаДок+1;
	Исключение
		ДатаС=ДатаПо;
	КонецПопытки;
	ДатаС=Мин(ДатаС,ДатаПо);
	Установить();
	Если тзПриходных.КоличествоКолонок()<>3 Тогда
		тзПриходных.Очистить();
		тзПриходных.НоваяКолонка("Знак","Число",1,0,"",2);
		тзПриходных.НоваяКолонка("Вид","Строка");
		тзПриходных.НоваяКолонка("Документ","Строка",100);
	КонецЕсли;
	Для Инд=1 По Метаданные.Документ() Цикл
		НомСтр=0;
		Парсер=Метаданные.Документ(Инд).Идентификатор;
		Если тзПриходных.НайтиЗначение(СокрЛП(Парсер),НомСтр,"Вид")=0 Тогда
			тзПриходных.НоваяСтрока();
			тзПриходных.Знак = 0;
			тзПриходных.Вид = Метаданные.Документ(Инд).Идентификатор;
			тзПриходных.Документ=Метаданные.Документ(Инд).Комментарий;
		КонецЕсли;
	КонецЦикла;
	тзПриходных.ВыводитьПиктограммы(1);
	спПротокол.УдалитьВсе();
	спПротокол.ДобавитьЗначение("НеВести","Не вести протокол");
	спПротокол.ДобавитьЗначение("ТолькоНачалоКонец","Только о начале и завершении");
	спПротокол.ДобавитьЗначение("ТолькоОшибки","Только об ошибках проведения");
	спПротокол.ДобавитьЗначение("Все","Обо всех документах");
	спСообщения.УдалитьВсе();
	спСообщения.ДобавитьЗначение("НеВести","Не показывать");
	спСообщения.ДобавитьЗначение("ТолькоНачалоКонец","Только о начале и завершении");
	спСообщения.ДобавитьЗначение("ТолькоОшибки","Только об ошибках проведения");
	спСообщения.ДобавитьЗначение("Все","Обо всех документах");
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда   
		
		//КолДокументов = 1000;
		
		СпрПол = СоздатьОбъект("Справочник.Пользователи");
		СпрПол.НайтиЭлемент(глПользователь.ТекущийЭлемент());
		
		СпрПол.ДатаЗапретаРедактирования = ДатаС - 1;
		СпрПол.Записать();
		
		Константа.ПроверкаОстатковПеремещениеТМЦ = 0;
		Константа.ПроверкаОстатковПеремещениеТМЦРозница = 0;
		Константа.ПроверкаОстатковРеализация = 0;
		Константа.ПроверкаОстатковПеремещениеДенегКасса = 0;
		Константа.ПроверкаКолваЗаказанногоРНРБн = 0;
		
		флЗавершитьОбработку = 1;
		флВсеДокументы = 1;
		флВыйти = 1;
	
		//ИмяФайла 	= "ВП"+ТекущаяДата()+".txt";
		//ИмяКат 		= "C:\Users\kozhemyakin\Documents\Обработки\Востановление границ последовательности";
		//ИмяКат = Константа.КаталогЛоговВосстановленияПоследовательности; 
		//ФайлПротокол=ИмяКат+"\"+СокрЛП(ИмяФайла);
		ТихийРежим=1;
		спПротокол.ТекущаяСтрока(3);
		спСообщения.ТекущаяСтрока(4);
		флЗавершитьОбработку=1;
		флПродолжать=1;
		флВыйти=1;
		Выполнить();
		СтатусВозврата(0);
		Возврат;
	Иначе
		ТихийРежим=0;
		спПротокол.ТекущаяСтрока(3);
		спСообщения.ТекущаяСтрока(4);
	КонецЕсли;
КонецПроцедуры
             
Процедура ПриЗакрытии()
	
КонецПроцедуры	

//---------------------------------------------------------------------------
Версия="Версия 1.6 от 22.10.2009";
Автор="Автор: Павленко Альтаир";
// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основной");
Форма.ИспользоватьСлой("Основной,Общий",2);
Форма.Закладки.ДобавитьЗначение(2,"Протокол");
Форма.Закладки.ДобавитьЗначение(3,"Предварительная");
ИмяКат=СокрЛП(Константа.КаталогЛоговВосстановленияПоследовательности)+"\";
ИмяФайла=_ДатаANSI(ТекущаяДата())+".log";
ФайлПротокол=ИмяКат+СокрЛП(ИмяФайла);
НомерЗакладки=1;
АдресМыла="";   
КолДокументов = 0;