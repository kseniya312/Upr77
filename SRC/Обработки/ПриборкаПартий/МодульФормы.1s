Перем СписокПартий;

Функция  ПолучитьНедостающиеОстатки(ВыбНачПериода, ВыбКонПериода, СписокНомен, Склад, ТекДок) Далее
//*******************************************
Процедура Выполнить()

КонецПроцедуры
             
Процедура ПриОткрытии()          
	ТаблДанных.НоваяКолонка("ДокументПродажи","Документ");
    ТаблДанных.НоваяКолонка("СкладПолучения","Справочник");
	ТаблДанных.НоваяКолонка("СкладОбмена","Справочник");
	ТаблДанных.НоваяКолонка("Номенклатура","Справочник"); 
	ТаблДанных.НоваяКолонка("Количество","Число",15,3);
	//ТаблДанных.НоваяКолонка("ДокументПеремещения","Документ");
	//ТаблДанных.НоваяКолонка("ДокументПеремещенияОбратно","Документ");
	
КонецПроцедуры        
               
Процедура РаспределитьПоФилиалам(ТаблицаНужныхОстатков, ТекДок)
	ВремТабл = СоздатьОбъект("ТаблицаЗначений");
	ТекДок.ВыгрузитьТабличнуюЧасть(ВремТабл);
	
	ТаблицаНужныхОстатков.Сортировать("Номенклатура,+ПриоритетФилиала,Филиал");  
	ТекНоменклатура = "";	
	ТаблицаНужныхОстатков.ВыбратьСтроки();
	Пока ТаблицаНужныхОстатков.ПолучитьСтроку() = 1 Цикл      
		
		Если ТекНоменклатура <> ТаблицаНужныхОстатков.Номенклатура Тогда
			стр = "";
			ВремТабл.НайтиЗначение(ТаблицаНужныхОстатков.Номенклатура,стр,"Номенклатура");
			КоличествоНадо = ВремТабл.ПолучитьЗначение(стр,"Количество");  
			ТекНоменклатура = ТаблицаНужныхОстатков.Номенклатура;
		КонецЕсли;
		
		Если КоличествоНадо = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если КоличествоНадо >= ТаблицаНужныхОстатков.КоличествоФилиала Тогда
			ТаблицаНужныхОстатков.Количество = ТаблицаНужныхОстатков.КоличествоФилиала;	
			КоличествоНадо = КоличествоНадо - ТаблицаНужныхОстатков.КоличествоФилиала;
		ИначеЕсли КоличествоНадо < ТаблицаНужныхОстатков.КоличествоФилиала Тогда
			ТаблицаНужныхОстатков.Количество = КоличествоНадо;	
			КоличествоНадо = 0;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры	

Процедура кнПолучитьДанные() 
	  
	ТаблДанных.УдалитьСтроки();
	
	Если ДатаКонца > ПолучитьДатуТА() Тогда
		ДатаКонца = ПолучитьДатуТА();
		//Сообщить("Выбранная дата превышает дату ТА. Дата изменена!");
	КонецЕсли; 
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ДатаНачала по ДатаКонца;
	|Номенклатура	= Регистр.НеобходимыйТоварПоФирмам.Номенклатура;
	|ФирмаОстатков	= Регистр.НеобходимыйТоварПоФирмам.ФирмаОстатков;
	|Склад			= Регистр.НеобходимыйТоварПоФирмам.Склад;
	|Количество			= Регистр.НеобходимыйТоварПоФирмам.Количество;
	|ФирмаСписанныхОстатков	= Регистр.НеобходимыйТоварПоФирмам.ФирмаСписанныхОстатков;
	|Функция ТекКоличество = Сумма(Количество);
	|Группировка Документ;
	|Группировка Номенклатура без групп;
	|Группировка Склад без групп;
	|Условие(ФирмаОстатков = ВыбФирмаОстатков);";
	
	Если ФирмаСписания.Выбран() = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(ФирмаСписанныхОстатков = ФирмаСписания);";	
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|Условие(Номенклатура В СписокНомен); 
	//|Условие(МОЛ = ТекМол);  
	|"//}}ЗАПРОС
	;   
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;     
	
    Сообщить(ТекущееВремя());
	
	Пока Запрос.Группировка(1) = 1 Цикл	  
		СписокНомен = СоздатьОбъект("СписокЗначений");
		
		Пока Запрос.Группировка(2) = 1 Цикл     
			СписокНомен.ДобавитьЗначение(Запрос.Номенклатура);
		КонецЦикла;                                          
		
		ТаблицаНужныхОстатков = ПолучитьНедостающиеОстатки(Запрос.Документ.ПолучитьПозицию(), Запрос.Документ.ДатаДок+1, СписокНомен, Запрос.Документ.Склад, Запрос.Документ); 
		
		РаспределитьПоФилиалам(ТаблицаНужныхОстатков, Запрос.Документ);
		
		ТаблицаНужныхОстатков.Сортировать("Филиал,ПриоритетФилиала");
		ТекФилиал = "";
		
		ТаблицаНужныхОстатков.ВыбратьСтроки();
		Пока ТаблицаНужныхОстатков.ПолучитьСтроку() = 1 Цикл 
			Если  (ТаблицаНужныхОстатков.Филиал = Запрос.Документ.Склад)
			или (ТаблицаНужныхОстатков.Количество = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			
			ТаблДанных.НоваяСтрока();
			ТаблДанных.ДокументПродажи	= Запрос.Документ;
			ТаблДанных.СкладПолучения	= Запрос.Документ.Склад;
			ТаблДанных.СкладОбмена		= ТаблицаНужныхОстатков.Филиал;
			ТаблДанных.Номенклатура		= ТаблицаНужныхОстатков.Номенклатура; 
			ТаблДанных.Количество		= ТаблицаНужныхОстатков.Количество; 
			
			
		КонецЦикла;	   
		
	КонецЦикла;
    Сообщить(ТекущееВремя());
КонецПроцедуры      

Функция  ПолучитьНедостающиеОстатки(ВыбНачПериода, ВыбКонПериода, СписокНомен, Склад, ТекДок)
	ТаблицаРезультат = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаРезультат.НоваяКолонка("Филиал","Справочник");
	ТаблицаРезультат.НоваяКолонка("Номенклатура","Справочник");
	ТаблицаРезультат.НоваяКолонка("Количество","число",15,2,);
	ТаблицаРезультат.НоваяКолонка("ПриоритетФилиала","число",1);
	ТаблицаРезультат.НоваяКолонка("КоличествоФилиала","число",15,2);
	
	ТекМол 			= Склад.МОЛ; 
	ТекФирмаОст 	= ВыбФирмаОстатков;
		
	Если ВыбКонПериода > ПолучитьДатуТА() Тогда
		ВыбКонПериода = ПолучитьДатуТА();
		//Сообщить("Выбранная дата превышает дату ТА. Дата изменена!");
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Номенклатура		= Регистр.ПартииНаличие.Номенклатура, Регистр.РезервыТМЦ2.Номенклатура;
	|МОЛ				= Регистр.ПартииНаличие.МОЛ, Регистр.РезервыТМЦ2.Склад.МОЛ;
	|ФирмаОст			= Регистр.ПартииНаличие.Партия.ПриходныйДокумент.Проект.ФирмаОстатков, Регистр.РезервыТМЦ2.ФирмаОстатков;
	|Количество			= Регистр.ПартииНаличие.Количество;
	|КоличествоРез		= Регистр.РезервыТМЦ2.Количество;
	|Функция ТекОстатокКонРез 	= КонОст(КоличествоРез);
	|Функция ТекОстатокКон 	= КонОст(Количество);  
	|Функция ТекОстатокНач 	= НачОст(Количество);
	|Функция ТекОстатокНачРез 	= НачОст(КоличествоРез);
	|Группировка Номенклатура без групп;
	|Группировка МОЛ без групп;
	|Условие(ФирмаОст = ТекФирмаОст);
	//|Условие(Партия В СписокПартий);
	|Условие(Номенклатура В СписокНомен); 
	//|Условие(МОЛ = ТекМол);  
	|"//}}ЗАПРОС
	;   
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат "";
	КонецЕсли;
	  
	//RS = СоздатьОбъект("ODBCRecordSet");
	//RS.УстБД1С();
	//ТекстЗапроса = "
	//|SELECT ПартииНаличиеОстатки.Номенклатура [Номенклатура $Справочник.Номенклатура]
	//|	, ПартииНаличиеОстатки.МОЛ [Номенклатура $Справочник.ФизЛица]
	//|   , Sum(ПартииНаличиеОстатки.КоличествоКонечныйОстаток) as КоличествоКонОст
	//|   , Sum(ПартииНаличиеОстатки.КоличествоНачальныйОстаток) as КоличествоНачОст 
	//|FROM $РегистрОстаткиОбороты.ПартииНаличие(:ДатаС,:ДатаПо~,,,
	//|	,
	//|    (Номенклатура IN (SELECT val FROM #Группа)),
	//|    AND (Партия IN (SELECT val FROM #Партии))
	//|    (МОЛ,Номенклатура),(Количество)) AS ПартииНаличиеОстатки
	//|GROUP BY ПартииНаличиеОстатки.МОЛ, ПартииНаличиеОстатки.Номенклатура";
    //
	//RS.УстановитьТекстовыйПараметр("ДатаС",ВыбНачПериода);
    //RS.УстановитьТекстовыйПараметр("ДатаПо",ВыбКонПериода);
	//RS.УстановитьТекстовыйПараметр("ТекФирмаОст", ТекФирмаОст);
    //RS.УложитьСписокОбъектов(СписокНомен, "#Группа", "Номенклатура");
	//RS.УложитьСписокОбъектов(СписокПартий, "#Партии", "Партия");
    //RS.Отладка(0);
    //ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
	//ТЗ.ВыбратьСтроки(); 
    //Пока ТЗ.ПолучитьСтроку() = 1 Цикл  
	//	
	//КонецЦикла;
	
	Пока Запрос.Группировка(1) = 1 Цикл	
		Пока Запрос.Группировка(2) = 1 Цикл 
			Если Запрос.ТекОстатокКон <= 0 Тогда
				Продолжить;
			КонецЕсли;
			  
			ТекСклад = глПолучитьСклад(Запрос.МОЛ);
			Если (ТекДок.Склад.Магазин = 1) и (ТекСклад.Магазин = 1) Тогда //или (ТекСклад.Код = "00013")) Тогда  //добавим полюстровский
			ИначеЕсли (ТекДок.Склад.Магазин = 0) Тогда	
			Иначе
				Продолжить;				
			КонецЕсли;
			 
			ТекФилиал = глПолучитьСклад(Запрос.МОЛ);
			
			Если ТекФилиал <> ТекДок.Склад  Тогда
				ТекКоличествоКон = Запрос.ТекОстатокКон - Запрос.ТекОстатокКонРез; 
				ТекКоличествоНач = Запрос.ТекОстатокНач - Запрос.ТекОстатокНачРез;
			Иначе
				ТекКоличествоКон = Запрос.ТекОстатокКон;
				ТекКоличествоНач = Запрос.ТекОстатокНач;
			КонецЕсли;	
			
			Если (ТекКоличествоНач > 0) и (ТекКоличествоКон > 0) Тогда
				ТаблицаРезультат.НоваяСтрока();
				ТаблицаРезультат.Филиал 			= ТекФилиал; 
				ТаблицаРезультат.КоличествоФилиала 	= Мин(ТекКоличествоНач,ТекКоличествоКон);
				ТаблицаРезультат.Номенклатура 		= Запрос.Номенклатура;
				Если ТаблицаРезультат.Филиал = Склад Тогда
					ТаблицаРезультат.ПриоритетФилиала 	= 0; 
				ИначеЕсли ТаблицаРезультат.Филиал.Код = "00002" Тогда  //код Энгельса, с него забираем в полседнюю очередь
					ТаблицаРезультат.ПриоритетФилиала 	= 2;
				Иначе
					ТаблицаРезультат.ПриоритетФилиала 	= 1;  
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	  
	Если (ТекДок.Проведен() = 1) Тогда      
		ТекДок = ТекДок.ТекущийДокумент();
		
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|Период с ВыбНачПериода по ВыбНачПериода;
		|Номенклатура	= Регистр.ПартииНаличие.Номенклатура;
		|МОЛ			= Регистр.ПартииНаличие.МОЛ;
		|Партия			= Регистр.ПартииНаличие.Партия;
		|ФирмаОст		= Регистр.ПартииНаличие.Партия.ПриходныйДокумент.Проект.ФирмаОстатков;
		|Количество		= Регистр.ПартииНаличие.Количество;
		|ТекущийДокумент= Регистр.ПартииНаличие.ТекущийДокумент; 
		|Функция ТекКолРасход = Расход(Количество);
		|Функция ТекОстаток = КонОст(Количество);
	//	|Функция ТекКолРасход = Расход(Количество) когда (ФирмаОст = ТекФирмаОст);
	//	|Функция ТекОстаток = КонОст(Количество) когда (ФирмаОст = ТекФирмаОст);
		|Группировка ТекущийДокумент;
		|Группировка МОЛ без групп;  
		|Условие(МОЛ = ТекМол); 
		|Условие(ТекущийДокумент = ТекДок);
		|Условие(ФирмаОст = ТекФирмаОст);
		//|Условие(Партия В СписокПартий);
		|Условие(Номенклатура В СписокНомен); 
		//|Условие(МОЛ = ТекМол);  
		|"//}}ЗАПРОС
		;   
		
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат "";
		КонецЕсли;
		
		//ТекКоличество = Количество;
		
		Пока Запрос.Группировка(1) = 1 Цикл	
			Пока Запрос.Группировка(2) = 1 Цикл
				Если Запрос.ТекОстаток < 0 Тогда
					Продолжить;
				КонецЕсли;	
				
				ТаблицаРезультат.НоваяСтрока();
				ТаблицаРезультат.Филиал 			= ТекДок.Склад; 
				ТаблицаРезультат.КоличествоФилиала 	= Запрос.ТекКолРасход;
				ТаблицаРезультат.Номенклатура 		= Запрос.Номенклатура;
				ТаблицаРезультат.ПриоритетФилиала 	= 0; 
							
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаРезультат.Свернуть("Номенклатура,Филиал,ПриоритетФилиала","КоличествоФилиала,Количество");
	
	Возврат ТаблицаРезультат;
КонецФункции 
            
Процедура ЗаписатьПеремещения(ДокПеремещения, ДокПеремещенияОбратно, ТекДок)
	ДокВремя = СоздатьОбъект("Документ");
	
	ДокПеремещения.Записать();       
	Сообщить("Создано перемещение: "+ДокПеремещения.ТекущийДокумент()); 
	ДокВремя.НайтиДокумент(ТекДок.ТекущийДокумент());
	час=0;минуты=0;сек=0;
	ДокВремя.ПолучитьВремя(час,минуты,сек);
	Если сек > 1 Тогда
		сек = сек-1;
	ИначеЕсли минуты > 1 Тогда
		минуты = минуты - 1;
		сек = 59;
	Иначе
		час = час - 1;
		минуты = 59;
		сек = 59;
	КонецЕсли;
	ДокПеремещения.УстановитьВремя(час,минуты,сек);  
	
	ДокПеремещения.Провести();
	Если ДокПеремещения.Проведен() = 0 Тогда
		Сообщить("Не провелся: "+ДокПеремещенияОбратно.ТекущийДокумент(),"!!!");
	КонецЕсли;
	
	ДокПеремещенияОбратно.Записать();     
	ДокПеремещенияОбратно.УстановитьВремя(час,минуты,сек);   
	
	Если ДокПеремещения.Проведен() = 1 Тогда
		ДокПеремещенияОбратно.Провести();    
		Сообщить("Создано перемещение: "+ДокПеремещенияОбратно.ТекущийДокумент());  
		Если ДокПеремещенияОбратно.Проведен() = 0 Тогда
			Сообщить("Не провелся: "+ДокПеремещенияОбратно.ТекущийДокумент(),"!!!");   
			ДокПеремещения.СделатьНеПроведенным();
			Если ДокПеремещенияОбратно.Проведен() = 0 Тогда
				Сообщить("Отменено проведение встречного: "+ДокПеремещенияОбратно.ТекущийДокумент(),"!!!");
			КонецЕсли;	
		КонецЕсли; 
	КонецЕсли;
КонецПРоцедуры			
         
Процедура ЗаполнитьДокПеремещения(ДокПеремещения)  
	ДокВремя = СоздатьОбъект("Документ");
	ДокПеремещения.ДатаДок			= ТаблДанных.ДокументПродажи.ДатаДок; 
	ДокВремя.НайтиДокумент(ТаблДанных.ДокументПродажи.ТекущийДокумент());
	час=0;минуты=0;сек=0;
	ДокВремя.ПолучитьВремя(час,минуты,сек);
	ДокПеремещения.УстановитьВремя(час,минуты,сек-2);
	ДокПеремещения.ДокОснование 	= ТаблДанных.ДокументПродажи.ТекущийДокумент();
	ДокПеремещения.Склад 			= ТаблДанных.СкладПолучения;
	ДокПеремещения.УстановитьНовыйНомер("ПРВ-");    
	
	Если ТаблДанных.ДокументПродажи.Проект.Выбран() = 1 Тогда
		Если ТаблДанных.ДокументПродажи.Проект.ФирмаОстатков.Код <> "1" Тогда
			СпрПроект = СоздатьОбъект("Справочник.Проекты");
			СпрПроект.НайтиПоКоду("00030");
			ДокПеремещения.Проект = СпрПроект.ТекущийЭлемент();
		КонецЕсли;	
	Иначе	 
		СпрПроект = СоздатьОбъект("Справочник.Проекты");
		СпрПроект.НайтиПоКоду("00030");
		ДокПеремещения.Проект = СпрПроект.ТекущийЭлемент();
	КонецЕсли;
	
	ДокПеремещения.СкладПолучатель 	= ТаблДанных.СкладОбмена; 
	ДокПеремещения.Комментарий		= "Создано автоматически";
	ДокПеремещения.Валюта			= глРубли;
	ДокПеремещения.Курс				= 1;    
	ДокПеремещения.Фирма			= ТаблДанных.ДокументПродажи.Фирма;
	ДокПеремещения.ФирмаПолучатель	= ТаблДанных.ДокументПродажи.Фирма;
	ДокПеремещения.УчитыватьНДС		= 1;
	ДокПеремещения.СуммаВклНДС		= 1;
	ДокПеремещения.УчитыватьНП		= 1;
	ДокПеремещения.СуммаВклНП		= 1;
	ДокПеремещения.Набран			= 1; 
	ДокПеремещения.Принят_к_учету	= глПользователь;
КонецПроцедуры	
	
Процедура ЗаполнитьДокПеремещенияОбратно(ДокПеремещенияОбратно) 
	ДокВремя = СоздатьОбъект("Документ");
	ДокПеремещенияОбратно.ДатаДок = ТаблДанных.ДокументПродажи.ДатаДок;
	ДокВремя.НайтиДокумент(ТаблДанных.ДокументПродажи.ТекущийДокумент());
	час=0;минуты=0;сек=0;
	ДокВремя.ПолучитьВремя(час,минуты,сек);
	ДокПеремещенияОбратно.УстановитьВремя(час,минуты,сек-2);
	ДокПеремещенияОбратно.ДокОснование 		= ТаблДанных.ДокументПродажи.ТекущийДокумент();
	ДокПеремещенияОбратно.Проект            = ТаблДанных.ДокументПродажи.Проект;
	ДокПеремещенияОбратно.Склад 			= ТаблДанных.СкладОбмена;
	ДокПеремещенияОбратно.УстановитьНовыйНомер("ПРВ-");
	ДокПеремещенияОбратно.СкладПолучатель 	= ТаблДанных.СкладПолучения;   
	ДокПеремещенияОбратно.Комментарий		= "Создано автоматически";
	ДокПеремещенияОбратно.Валюта			= глРубли;
	ДокПеремещенияОбратно.Курс				= 1;    
	ДокПеремещенияОбратно.Фирма				= ТаблДанных.ДокументПродажи.Фирма;
	ДокПеремещенияОбратно.ФирмаПолучатель	= ТаблДанных.ДокументПродажи.Фирма;
	ДокПеремещенияОбратно.УчитыватьНДС		= 1;
	ДокПеремещенияОбратно.СуммаВклНДС		= 1;
	ДокПеремещенияОбратно.УчитыватьНП		= 1;
	ДокПеремещенияОбратно.СуммаВклНП		= 1;
	ДокПеремещенияОбратно.Набран			= 1; 
	ДокПеремещенияОбратно.Принят_к_учету	= глПользователь;
КонецПроцедуры



Процедура кнСоздатьДокументы()   
	
	Если Вопрос("Будут созданы документы перемещения. Продолжить?", "Да+Нет") = "Да" Тогда
		ДокПеремещения = СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
		ДокПеремещенияОбратно = СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
		СпрНом = СоздатьОбъект("Справочник.Номенклатура");
		ДокВремя = СоздатьОбъект("Документ");
		
		
		ТекФилиал 	= "";
		ТекДок 		= "";
		
		ТаблДанных.ВыбратьСтроки();
		Пока ТаблДанных.ПолучитьСтроку() = 1 Цикл 
			Если (ТекФилиал <> ТаблДанных.СкладОбмена) 
			или (ТекДок <> ТаблДанных.ДокументПродажи) Тогда
				
				Если ТекФилиал <> "" Тогда 
					ЗаписатьПеремещения(ДокПеремещения, ДокПеремещенияОбратно, ТекДок);
				КонецЕсли;
				
				ДокПеремещения.Новый();       
				ЗаполнитьДокПеремещения(ДокПеремещения);
				
				ДокПеремещенияОбратно.Новый(); 
				ЗаполнитьДокПеремещенияОбратно(ДокПеремещенияОбратно);
				
				ТекФилиал 	= ТаблДанных.СкладОбмена;
				ТекДок 		= ТаблДанных.ДокументПродажи;
			КонецЕсли;
			
			ДокПеремещения.НоваяСтрока();
			ДокПеремещения.Номенклатура = ТаблДанных.Номенклатура;
			ДокПеремещения.Количество 	= ТаблДанных.Количество;
			ДокПеремещения.Количество2 	= ТаблДанных.Количество;
			ДокПеремещения.Единица      = ТаблДанных.Номенклатура.ОсновнаяЕдиница;
			ДокПеремещения.Коэффициент = 1;
			глПересчетТаблЧасти(ДокПеремещения, "Количество");
			СпрНом.ИспользоватьДату(ДокПеремещения.ДатаДок);
			СпрНом.НайтиЭлемент(ДокПеремещения.Номенклатура);
			ДокПеремещения.Цена = СпрНом.ПоследняяЦенаПрихода;
			ДокПеремещения.Сумма = ДокПеремещения.Количество*ДокПеремещения.Цена;  
			
			
			ДокПеремещенияОбратно.НоваяСтрока();
			ДокПеремещенияОбратно.Номенклатура = ТаблДанных.Номенклатура;
			ДокПеремещенияОбратно.Количество 	= ТаблДанных.Количество;  
			ДокПеремещенияОбратно.Количество2 	= ТаблДанных.Количество;
			ДокПеремещенияОбратно.Единица      = ТаблДанных.Номенклатура.ОсновнаяЕдиница;
			ДокПеремещенияОбратно.Коэффициент = 1;
			глПересчетТаблЧасти(ДокПеремещения, "Количество");  
			СпрНом.ИспользоватьДату(ДокПеремещенияОбратно.ДатаДок);
			СпрНом.НайтиЭлемент(ДокПеремещенияОбратно.Номенклатура);
			ДокПеремещенияОбратно.Цена = СпрНом.ПоследняяЦенаПрихода;
			ДокПеремещенияОбратно.Сумма = ДокПеремещенияОбратно.Количество*ДокПеремещенияОбратно.Цена;
		КонецЦикла;	   
		
		Если ТекФилиал <> "" Тогда 
			ЗаписатьПеремещения(ДокПеремещения, ДокПеремещенияОбратно, ТекДок);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры