////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроверкаУникальностиШтрихкода()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Число:
//  0 - штрих-код не уникален
//  1 - штрих-код уникален
//
// Описание:
//  Просматриваются все единицы измерения всех ТМЦ. Если находится точно
//  такой же штрих-код, то функция возвращает 0, если нет, то функция
//  возвращает 1.
//
Функция ПроверкаУникальностиШтрихкода(Описание="")
	Перем ЕдиницаДляПоиска;
	Перем Результат;
	
	Результат = 1;	// изначально уникален
	
	Если ПустоеЗначение(Штрихкод) = 0 Тогда
		ЕдиницаДляПоиска = СоздатьОбъект("Справочник.Единицы");
		
		ЕдиницаДляПоиска.ВыбратьЭлементыПореквизиту("Штрихкод",Штрихкод,0,0);
		Пока ЕдиницаДляПоиска.ПолучитьЭлемент() = 1 Цикл
			
			ТекЕдиница = ЕдиницаДляПоиска.ТекущийЭлемент();
			
			// нашли штрихкод
			Если Выбран() = 1 Тогда
				// сохраненый элемент
				// проверим, а не является найденный текущим
				Если ТекущийЭлемент() <> ТекЕдиница Тогда
					Результат = 0;
				КонецЕсли;
			Иначе
				// новый элемент
				Результат = 0;
			КонецЕсли;
			Если Результат = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Результат = 0 Тогда
		ПометкаУд = "";
		Если ТекЕдиница.ПометкаУдаления() = 1 Тогда
			ПометкаУд = " (помечена на удаление) ";
		КонецЕсли;
		Описание = "Уже имеется единица измерения """ + ТекЕдиница + """ " + ПометкаУд + " со шрихкодом " + Штрихкод + " у номенклатуры """ + ТекЕдиница.Владелец + """!";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПроверкаУникальностиШтрихкода()

//******************************************************************************
// СформироватьШтрихкод(Весовой, Код)
//
// Параметры:
//  Весовой - 1 - позиция номенклатуры является весовым товаром
//            0 - позиция номенклатуры является штучным товаром
//  Код     - код позиции номенклатуры, для которой формируется штрих-код
//
// Возвращаемое значение:
//  строка - сформированный штрихкод
//
// Описание:
//  Формирует уникальный штрихкод позиции номенклатуры 
//
Функция СформироватьШтрихкод(Весовой, Код)
	
	СпрЕдиницы = СоздатьОбъект("Справочник.Единицы");
	СформировалиУникальныйШтрихкод = 0;
	
	Если Весовой = 0 Тогда
		
		// Сформируем штрих-код штучного товара
		
		КодТовара = глДополнитьСтрокуЛ(Число(СокрЛ(Прав(Код, 6))), "0", 7);
		
		Для Сч = 1 По 999 Цикл
			
			ДопКод = глДополнитьСтрокуЛ(Строка(Сч), "0", 3);
			ВремШтрихкод = глСформироватьШтрихкод(глПрефиксШтучногоШтрихкода, КодТовара + ДопКод);
			
			Если СпрЕдиницы.НайтиПоРеквизиту("Штрихкод", ВремШтрихкод, 1) = 0 Тогда
				СформировалиУникальныйШтрихкод = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СформировалиУникальныйШтрихкод = 0 Тогда
			
			// Сформируем штрих-код независимо от кода номенклатуры
			
			Для Сч = 1 По 9999999999 Цикл // 10 разрядов
				
				ДопКод = глДополнитьСтрокуЛ(Строка(Сч), "0", 10);
				ВремШтрихкод = глСформироватьШтрихкод(глПрефиксШтучногоШтрихкода, ДопКод);
				
				Если СпрЕдиницы.НайтиПоРеквизиту("Штрихкод", ВремШтрихкод, 1) = 0 Тогда
					СформировалиУникальныйШтрихкод = 1;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		// Сформируем штрих-код весового товара
		
		КодТовараЧисло = Число(СокрЛ(Прав(Код, 5)));
		
		Для Сч = КодТовараЧисло По 99999 Цикл // 5 разрядов
			
			ДопКод = глДополнитьСтрокуЛ(Строка(Сч), "0", 5);
			ВремШтрихкод = глСформироватьШтрихкод(глПрефиксВесовогоШтрихкода, ДопКод + "00000");
			
			Если СпрЕдиницы.НайтиПоРеквизиту("Штрихкод", ВремШтрихкод, 1) = 0 Тогда
				СформировалиУникальныйШтрихкод = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СформировалиУникальныйШтрихкод = 0 Тогда
			Для Сч = 1 По КодТовараЧисло Цикл
				
				ДопКод = глДополнитьСтрокуЛ(Строка(Сч), "0", 5);
				ВремШтрихкод = глСформироватьШтрихкод(глПрефиксВесовогоШтрихкода, ДопКод + "00000");
				
				Если СпрЕдиницы.НайтиПоРеквизиту("Штрихкод", ВремШтрихкод, 1) = 0 Тогда
					СформировалиУникальныйШтрихкод = 1;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	    
	КонецЕсли; // Если Весовой = 0 Тогда
	
	Если СформировалиУникальныйШтрихкод = 0 Тогда
		ВремШтрихкод = "";
	КонецЕсли;
	
	Возврат ВремШтрихкод;

КонецФункции // СформироватьШтрихкод()

//******************************************************************************
// ПоКнопкеСформировать()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет сформированным штрихкодом 
//  реквизит Штрихкод. Перед заполнением проверяет, заполнен или
//  нет этот реквизит. Если реквизит заполнен, то выдается запрос на подтверждение.
//
Процедура ПоКнопкеСформировать()
	
	Если ПустоеЗначение(Штрихкод) = 0 Тогда
		Если Вопрос("Штрихкод единицы задан. Сформировать новый?", "Да+Нет", 60) <> "Да" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ПустоеЗначение(ОКЕИ) = 1 Тогда
		Предупреждение("Не выбран ОКЕИ", 60);
		Возврат;
	КонецЕсли;
	
	Штрихкод = СформироватьШтрихкод(Владелец.Весовой, Владелец.Код);
	
КонецПроцедуры // ПоКнопкеСформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНового()
	Коэффициент = 1;
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()

	Если (глПользователь<>"Бояринова") или (глПользователь<>"Иванова") или (глПользователь<>"Администратор") Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		Форма.кнСформировать.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть")
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК")
	КонецЕсли;
	
	Если Выбран() = 1 Тогда
		// только для сохраненного элемента
		Если ПустоеЗначение(ОКЕИ) = 0 Тогда
		    // только если ОКЕИ заполнено
			Форма.ОКЕИ.Доступность(0);
		КонецЕсли;
		Если ТекущийЭлемент() = Владелец.БазоваяЕдиница Тогда
			// нельзя менять коэффициент базовой единицы измерения
			Форма.Коэффициент.Доступность(0);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	Перем ЕдиницыТМЦ;
	Перем Описание, ФлагОшибки;
	
	// провека заполнение обязательных полей
	ФлагОшибки = 1;
	Описание = "Не заполнено поле ";
	
	Если ПустоеЗначение(ОКЕИ)=1 Тогда
		Активизировать("ОКЕИ");
		СтатусВозврата(0);
		Предупреждение("Не заполнено поле ""Единица измерения""", 60);
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Коэффициент)=1 Тогда
		Активизировать("Коэффициент");
		СтатусВозврата(0);
		Предупреждение("Не заполнено поле ""Коэффициент""", 60);
		Возврат;
	КонецЕсли;

    Если ПроверкаУникальностиШтрихкода(Описание) = 0 Тогда
		Активизировать("Штрихкод");
		СтатусВозврата(0);
		Предупреждение(Описание, 60);
		Возврат;
    КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
Функция УстШтрихкод(Штрихкод)
	Штрихкод = СокрЛП(Штрихкод);
	
	Если Найти(глПрефиксШтрихкода(), Лев(Штрихкод, 1)) > 0 Тогда
		Штрихкод = Сред(Штрихкод, 2);
	КонецЕсли;
	
	Возврат Штрихкод;
КонецФункции

//******************************************************************************
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	// Процедура разбирает штрих-код, считанный сканером
	// и заполняет строки накладной
	Перем Упаковка,ТекКоличество, Спецификация;
	Перем ВремТовар, ВремЕдиница, ВремКоличество;
	Перем ВремЦена, ЕдЦены;
	
	Если Событие = "BarCodeValue" Тогда
		
		Если Форма.ТолькоПросмотр() = 0 Тогда
			Если ПустоеЗначение(Штрихкод) = 0 Тогда
				Если Вопрос("Штрихкод для базовой единицы задан. Сформировать новый?", "Да+Нет", 60) = "Да" Тогда
					Штрихкод = УстШтрихкод(Данные);
				КонецЕсли;
			Иначе
				Штрихкод = УстШтрихкод(Данные);
			КонецЕсли;
		КонецЕсли;
		
		// Обработка закончена. Готовы к получению нового штрихкода.
		глСканерПосылкаДанных(1);
		
	Иначе
		глОбработкаВнешнегоСобытия(Источник, Событие, Данные);	
	КонецЕсли;

КонецПроцедуры // ОбработкаВнешнегоСобытия()