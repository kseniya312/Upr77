////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ЯвляетсяОснованием()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Тип цен, для которого данный тип цен является основанием 
//  0 - не является
//
// Описание:
//  Проверяет является ли данный тип основанием для другого типа цен
//
Функция ЯвляетсяОснованием()
	
	Если (Выбран() = 1)
	   И (СпособФормирования > 1) Тогда
		
		// проверим, не является ли этот тип цен основанием для другог типа
		СпрТипы = СоздатьОбъект("Справочник.ТипыЦен");
		СпрТипы.ВыбратьЭлементы();
		
		Пока СпрТипы.ПолучитьЭлемент() = 1 Цикл
			Если СпрТипы.БазовыйТипЦен = ТекущийЭлемент() Тогда
				
				Возврат СпрТипы.ТекущийЭлемент();
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат 0;	
	
КонецФункции // ЯвляетсяОснованием()

//******************************************************************************
// Переключатель()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул диалога
//  при изменении выбора из вариантов спосаба формирования цены 
// Описание:
//  Отрабатывает изменения способа формирования цены 
//
Процедура Переключатель()
	Перем Оспособе;
	
	РасчетныйТип= ЯвляетсяОснованием(); 
	Если ПустоеЗначение(РасчетныйТип) = 0 Тогда
	    
		Сообщить("Редактируемый тип цен является базовым для типа """ + РасчетныйТип+ """ 
				                | поэтому сам не может рассчитываться на основании другого типа цен.", "!");
	КонецЕсли;
	
	Если СпособФормирования = 1 Тогда // вручную
		
		Оспособе = "Цены этого типа задаются вручную. " +
		           "Могут являться базовыми для расчета цен других типов. " + 
				   "Могут быть обновлены из документов поступления ТМЦ " +
				   "(""Обновить цены в справочнике"" по кнопке ""Действия"").";
		
		Форма.ТекстНаценки.Видимость(0);
		Форма.РамкаНаценки.Видимость(0);
		Форма.Процент.Видимость(0);
		Форма.БазовыйТипЦен.Видимость(0);
		
		Форма.ЦенаВклНДС.Доступность(1);
		Форма.ЦенаВклНП.Доступность(1);
		
	ИначеЕсли СпособФормирования = 2 Тогда 	// Формируется и хранится
		
		Оспособе = "Цены этого типа задаются или вручную или " +
		           "рассчитываются на основании базовых цен, " +
				   "а затем при необходимости корректируются вручную. " +
				   "Могут быть сформированы с помощью специальной обработки ";
				   
		
		ИдКонф	= глИдентификаторКонфигурации();
		Если (ИдКонф = "OUTK") Тогда
			// Конфигурация Торговля+Склад
			Оспособе	= Оспособе + "(меню ""Справочники -> Цены и налоги -> Формирование цен).";
		ИначеЕсли (ИдКонф = "BUOUSL") Тогда
			// Комплексная конфигурация
			Оспособе	= Оспособе + "(меню ""Справочники -> Прочие справочники торгового учета -> Формирование цен).";
		КонецЕсли;
				   
				   
		Форма.ТекстНаценки.Видимость(1);
		Форма.РамкаНаценки.Видимость(1);
		Форма.Процент.Видимость(1);
		Форма.БазовыйТипЦен.Видимость(1);
		
		Форма.ЦенаВклНДС.Доступность(1);
		Форма.ЦенаВклНП.Доступность(1);
		
	ИначеЕсли СпособФормирования = 3 Тогда 	// Формируется динамически
		
		Оспособе = "Цены этого типа рассчитываются динамически " +
		           "на основании базовых цен и торговой наценки. " +
				   "Не хранятся в информационной базе. " +     
				   "Автоматически изменяются при изменении базовых цен. " +
				   "Учет налогов определяется базовым типом цен."; 
				   
		Форма.ТекстНаценки.Видимость(1);
		Форма.РамкаНаценки.Видимость(1);
		Форма.Процент.Видимость(1);
		Форма.БазовыйТипЦен.Видимость(1);
		
		ЦенаВклНДС = БазовыйТипЦен.ЦенаВклНДС;
		ЦенаВклНП  = БазовыйТипЦен.ЦенаВклНП;
		Форма.ЦенаВклНДС.Доступность(0);
		Форма.ЦенаВклНП.Доступность(0);
		
	Конецесли;
	
	Форма.ТекстОспособеФормирования.Заголовок(ОСпособе);
		
КонецПроцедуры // Переключатель()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************                                
// Предопределенная процедура
//
Процедура ВводНового(Копирование)
	
	Если Копирование = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Рассчитывается    = 0;       
	ПорядокОкругления = Перечисление.ПорядкиОкругления.Окр0_01; 
	Валюта            = глРубли;
	
КонецПроцедуры	// ВводНового

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()	
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОк");
	КонецЕсли;
	
	Если ПустоеЗначение(БазовыйТипЦен) = 1 Тогда
		
		// вручную
		СпособФормирования = 1;
		
	Иначе // от другого типа цены
		
		СпособФормирования = ?(Рассчитывается = 1, 3, 2);
		
	КонецЕсли;    
	
	Переключатель();
	
КонецПроцедуры	// ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога)
	
	//Если ЭлементДиалога = "Валюта" Тогда  
	//	
	//	Если Выбран() = 1 Тогда
	//		
	//		// Поищем цены этого типа
	//		СпрЦены = СоздатьОбъект("Справочник.Цены");
	//		Если СпрЦены.НайтиПоРеквизиту("ТипЦен", ТекущийЭлемент(), 1) = 1 Тогда
	//			Предупреждение("Для некоторых позиций номенклатуры уже заданы цены данного типа,
	//			                |поэтому валюту задания цен менять нельзя!", 60);
	//			СтатусВозврата(0);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
    
	Если ИдентЭлемДиалога = "БазовыйТипЦен" Тогда
        
		Если (ПустоеЗначение(ВыбЗнач.БазовыйТипЦен) = 0) Тогда
			
			// нельзя выбирать цену, которая, в свою очередь, рассчитывается на основе третьей
			Предупреждение("Нельзя выбирать тип цены, который, в свою очередь, тоже рассчитывается!", 60);
            ФлагСтандОбр = 0;
			Возврат;
			
		ИначеЕсли (ВыбЗнач  = ТекущийЭлемент()) 
		        И (Выбран() = 1) Тогда
			
			// нельзя рассчитывать цену на основании самой себя
			Предупреждение("Нельзя рассчитывать тип цены на основании самой себя! Выберите другой тип цены!", 60);
            ФлагСтандОбр = 0;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()	
	Перем Описание;
	Перем ФлагОшибки;
	
	Если СпособФормирования = 1 Тогда
		
		// вручную
		Рассчитывается = 0;
		БазовыйТипЦен  = 0; 
		Процент        = 0;
		
	Иначе
		
		// от другого типа цены
		Рассчитывается = ?(СпособФормирования = 3, 1, 0);
	КонецЕсли;

	// проверка обязательных полей и других условий
	Если ПустоеЗначение(Наименование) = 1 Тогда
		Предупреждение("Не заполнено поле ""Наименование""", 60);
		Активизировать("Наименование");         
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;                           
	
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Предупреждение("Не заполнено поле ""Валюта""", 60);
		Активизировать("Валюта");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;                           
	
	Если ПустоеЗначение(ПорядокОкругления) = 1 Тогда
		Предупреждение("Не заполнено поле ""ПорядокОкругления""", 60);
		Активизировать("ПорядокОкругления");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;                           
	
	Если (СпособФормирования > 1) 
	   И (ПустоеЗначение(БазовыйТипЦен) = 1) Тогда
	   	Предупреждение("Не заполнено поле ""Базовый тип цен""", 60);
		Активизировать("БазовыйТипЦен");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;                           
	
	
	РасчетныйТип= ЯвляетсяОснованием(); 
	Если ПустоеЗначение(РасчетныйТип) = 0 Тогда
	    
		Предупреждение("Редактируемый тип цен является базовым для типа """ + РасчетныйТип+ """ 
				                | поэтому сам не может рассчитываться на основании другого типа цен.", 60);
		Активизировать("СпособФормирования");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если (СпособФормирования = 3)
	   и (Выбран() = 1) Тогда // у динамически рассчитываемых цен не должно быть элементов справочника Цены
		СпрЦены= СоздатьОбъект("Справочник.Цены");
		Если СпрЦены.НайтиПоРеквизиту("ТипЦен", ТекущийЭлемент(), 1) = 1 Тогда;
			Предупреждение("У позиции номенклатуры """ + СпрЦены.Владелец + """ имеются цены 
			                |редактируемого типа, заданные вручную,
			                |поэтому данный тип цен не может быть рассчитываемым динамически.", 60);
			Активизировать("СпособФормирования");
			СтатусВозврата(0);
		Возврат;
		КонецЕсли;
	    
	КонецЕсли;
	
КонецПроцедуры	// ПриЗаписи()                                                    
