//++Ерошенко 23.05.2007
Перем ПутьКШаблонуHTML;
//--Ерошенко

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ПолучитьЗначениеПоУмолчанию(СтрЗначения)
//
// Параметры:
//  СтрЗначения - стровое наименования реквизита значения по умолчанию
//
// Возвращаемое значение: 
//  унаследованное значение по умолчанию, если пусто, то
//  возвращается строка "Не задано"
//
// Описание: 
//  Возвращает или унаследованное значение по умолчанию или "не задано"
//
Функция ПолучитьЗначениеПоУмолчанию(СтрЗначения)
	
	Перем Результат, РезультатСтр;
		
	Результат = ПользовательДляНастроек.ПолучитьАтрибут(СтрЗначения);
	
	Если (СтрЗначения = "НеЗапрашиватьПодтверждениеПриВыходе") Тогда
		РезультатСтр = ?(ПустоеЗначение(Результат) = 1, "Да", "Нет");
	ИначеЕсли (СтрЗначения = "ЗакрыватьДокументПриПереходеВжурнал") Тогда
		РезультатСтр =  ?(ПустоеЗначение(Результат) = 0, "Да", "Нет");
	Иначе    
		РезультатСтр =  ?(ПустоеЗначение(Результат) = 1, "Не задано", Результат);
	КонецЕсли;
	
	Возврат РезультатСтр;
	
КонецФункции // ПолучитьЗначениеПоУмолчанию()
  
//++Ерошенко 23.05.2007
Функция ПолучитьКаталог(ВыбФайл)   
	
	СтрКаталог = СокрЛП(ВыбФайл);
	ИсхСтр = СокрЛП(ВыбФайл);
	НовыйКаталог = "";
	Если СтрЧислоВхождений(ИсхСтр, ".") = 0 Тогда
		Возврат ИсхСтр;
	КонецЕсли;
	Если СтрЧислоВхождений(СтрКаталог, "\") > 0 Тогда
		Поз = Найти(СтрКаталог, "\");
		Пока Поз > 0 Цикл
			СтрКаталог = Прав(СтрКаталог, СтрДлина(СтрКаталог)-Поз);
			Поз2 = Найти(ИсхСтр, СтрКаталог);
			НовыйКаталог = Лев(ИсхСтр, Поз2-1);
			Поз = Найти(СтрКаталог, "\");
		КонецЦикла;
	КонецЕсли;
	Возврат НовыйКаталог; 
	
КонецФункции
  
//*******************************************

Функция ВыборФайла_() 
	
	Перем ПредстСпр;
	НовыйФайл = "";
	НовыйКаталог = ПолучитьКаталог(ПутьКШаблонуHTML); 
	Если НовыйКаталог = "" Тогда
		НовыйКаталог = ФС.ТекКаталог()
	КонецЕсли;
	Если ФС.ВыбратьФайл(0, НовыйФайл, НовыйКаталог, "Выберите файл шаблона","(*.htm)|*.htm|html(*.html)|*.html", "htm") = 1 Тогда
		ПутьКШаблонуHTML = НовыйКаталог + НовыйФайл;  
		Наименование = Наименование;
		Возврат 1;
	КонецЕсли;
	Возврат 0;
	
КонецФункции
//--Ерошенко

//++Ерошенко 10.05.2007
Функция ПреобрВоВремя(ТекДанные)
	
	Если ТекДанные > 23 Тогда
		ТекДанные = 23;
	КонецЕсли;
	
	ТекДанные = СокрЛП(ТекДанные); 
	Если СтрДлина(ТекДанные) < 2 Тогда
		ТекДанные = "0" + ТекДанные;
	КонецЕсли;
	Ит = ТекДанные + ":00";
	
	Возврат Ит;
	
КонецФункции
//--Ерошенко
     
//++Ерошенко 23.05.2007
Процедура ПрочестьНастройкиЭлектроннойПочты()
	Спр = СоздатьОбъект("Справочник.НастройкиПочты"); 
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		АдресПочтовогоСервера =                   Спр.АдресПочтовогоСервера;       
		ПортПочтовогоСервера =                    Спр.ПортПочтовогоСервера; 
		ПользовательПочтовогоСервера =            Спр.ПользовательПочтовогоСервера; 
		ПарольПочтовогоСервера =                  Спр.ПарольПочтовогоСервера; 
		Собственный_email =                       Спр.Собственный_email; 
		ИмяОтправителя =                          Спр.ИмяОтправителя; 
		АвторизацияПочтовогоСервера =             Спр.АвторизацияПочтовогоСервера; 
		КоличествоНеудачныхПопытокДоПрекращения = Спр.КоличествоНеудачныхПопытокДоПрекращения; 
		ПутьКШаблонуHTML =                        Спр.ПутьКШаблонуHTML; 
	КонецЦикла;
КонецПроцедуры

//***************************************************

Процедура ЗаписатьНастройкиЭлектроннойПочты()    
	Ит = 0;
	Спр = СоздатьОбъект("Справочник.НастройкиПочты"); 
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Спр.АдресПочтовогоСервера =                   АдресПочтовогоСервера;       
		Спр.ПортПочтовогоСервера =                    ПортПочтовогоСервера; 
		Спр.ПользовательПочтовогоСервера =            ПользовательПочтовогоСервера; 
		Спр.ПарольПочтовогоСервера =                  ПарольПочтовогоСервера; 
		Спр.Собственный_email =                       Собственный_email; 
		Спр.ИмяОтправителя =                          ИмяОтправителя; 
		Спр.АвторизацияПочтовогоСервера =             АвторизацияПочтовогоСервера; 
		Спр.КоличествоНеудачныхПопытокДоПрекращения = КоличествоНеудачныхПопытокДоПрекращения;   
		Спр.ПутьКШаблонуHTML =                        ПутьКШаблонуHTML;   
		Спр.Записать();
		Ит = 1;
	КонецЦикла;  
	Если Ит = 0 Тогда 
		Спр.Новый();
		Спр.АдресПочтовогоСервера =                   АдресПочтовогоСервера;       
		Спр.ПортПочтовогоСервера =                    ПортПочтовогоСервера; 
		Спр.ПользовательПочтовогоСервера =            ПользовательПочтовогоСервера; 
		Спр.ПарольПочтовогоСервера =                  ПарольПочтовогоСервера; 
		Спр.Собственный_email =                       Собственный_email; 
		Спр.ИмяОтправителя =                          ИмяОтправителя; 
		Спр.АвторизацияПочтовогоСервера =             АвторизацияПочтовогоСервера; 
		Спр.КоличествоНеудачныхПопытокДоПрекращения = КоличествоНеудачныхПопытокДоПрекращения;   
		Спр.ПутьКШаблонуHTML =                        ПутьКШаблонуHTML;   
		//Временно добавить исключение что до записи владельца нет
		попытка
			Спр.Записать();
		исключение
			
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры
//--Ерошенко

//++Ерошенко 04.05.2007
Процедура ЗаполнитьТЗ() 
	
	ТЗ.Очистить(); 
	ТЗ.НоваяКолонка("Доступен",,,,"",1);
	ТЗ.НоваяКолонка("Объект");
    ТЗ.ВыводитьПиктограммы("Доступен");
	Спр = СоздатьОбъект("Справочник.ГруппыДоступа");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		ТЗ.НоваяСтрока(); 
		ТЗ.Доступен = Спр.Доступ;
		ТЗ.Объект =   Спр.ОбъектМетаданных;
	КонецЦикла;
	             
КонецПроцедуры 

//*******************************************************
 
 Процедура ЗаполнитьТЗПланировщик() 
	
	ТЗПланировщик.Очистить(); 
	ТЗПланировщик.НоваяКолонка("Доступен",,,,"",1);
	ТЗПланировщик.НоваяКолонка("ВремяЗапуска",,,,"Время",3);
	ТЗПланировщик.НоваяКолонка("Объект");
    ТЗПланировщик.ВыводитьПиктограммы("Доступен");
	Спр = СоздатьОбъект("Справочник.Планировщик");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		ТЗПланировщик.НоваяСтрока(); 
		ТЗПланировщик.Доступен =     Спр.Доступ;   
		ТЗПланировщик.ВремяЗапуска = Спр.ВремяЗапуска;
		ТЗПланировщик.Объект =       Спр.ОбъектМетаданных;
	КонецЦикла;
	             
КонецПроцедуры 
  
//*******************************************************

Процедура ДоступностьПрав()
	
	Если (СокрЛП(глПользователь) = "Администратор") ИЛИ  
	(СокрЛП(глПользователь) = "Бояринова") ИЛИ     
	(СокрЛП(глПользователь) = "Иванова") ИЛИ     
	(СокрЛП(глПользователь) = "Филиппов") Тогда
		Дост = 1;
	Иначе
		Дост = 0;
	КонецЕсли;
	
	Форма.ТЗ.Доступность(Дост);
	Форма.Добавить.Доступность(Дост);
	Форма.Удалить.Доступность(Дост);
	
	//Валерий МЭТР: ДатаЗапретаРедактирования
	ДостДатаЗапрета = 0;
	Если (СокрЛП(НазваниеНабораПрав())="Администратор") ИЛИ
		(СокрЛП(НазваниеНабораПрав())="Руководитель_розница") ИЛИ
		(СокрЛП(НазваниеНабораПрав())="BackUp") ИЛИ
		(СокрЛП(НазваниеНабораПрав())="Администратор_-конфиг") ИЛИ
		(СокрЛП(НазваниеНабораПрав())="Администратор_-конфиг_и_выгрузка") Тогда
		ДостДатаЗапрета = 1;
	КонецЕсли;		
	Форма.ДатаЗапретаРедактирования.Доступность(ДостДатаЗапрета);
	
КонецПроцедуры

//*******************************************************

Процедура ЗаписатьИзТЗВСправочник()  
	
	Спр = СоздатьОбъект("Справочник.ГруппыДоступа");
	Спр.ИспользоватьВладельца(ТекущийЭлемент()); 
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		Спр.Удалить();
	КонецЦикла;
	
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Спр.Новый();  
		Спр.ОбъектМетаданных = ТЗ.Объект;
		Спр.Доступ =           ТЗ.Доступен;
		Спр.Записать();
	КонецЦикла; 
	
	План = СоздатьОбъект("Справочник.Планировщик");
	План.ИспользоватьВладельца(ТекущийЭлемент()); 
	План.ВыбратьЭлементы();
	Пока План.ПолучитьЭлемент() = 1 Цикл
		План.Удалить();
	КонецЦикла;
	ТЗПланировщик.ВыбратьСтроки();
	Пока ТЗПланировщик.ПолучитьСтроку() = 1 Цикл
		План.Новый();  
		План.ОбъектМетаданных = ТЗПланировщик.Объект;
		План.Доступ =           ТЗПланировщик.Доступен; 
		План.ВремяЗапуска =     ТЗПланировщик.ВремяЗапуска;
		План.Записать();
	КонецЦикла; 

КонецПроцедуры     

//*******************************************************

Процедура ОтобразитьIP()
	
	Если СокрЛП(ЛокальныйIP) = "" Тогда
		ТIP = "Локальный IP не указан";
	Иначе
		ТIP = СокрЛП(ЛокальныйIP);
	КонецЕсли;
	Форма.ТекIP.Заголовок(ТIP);
	
КонецПроцедуры
//--Ерошенко 

//******************************************************************************
// КопироватьНастройки()
//
// Параметры:    
//  Нет
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  Вызывается по кнопке "Копировать". Служит для копирования настроек другого пользователя
//
Процедура КопироватьНастройки()
	Перем ВыбПользователь;
	ВыбПользователь = СоздатьОбъект("Справочник.Пользователи");
	Если ВыбПользователь.Выбрать("Выберите пользователя, чьи настройки нужно скопировать", "ФормаСписка") = 1 Тогда
		Если ПустоеЗначение(ВыбПользователь.ПользовательДляНастроек) = 0 Тогда
			Предупреждение("У выбранного пользователя наследуются настройки пользователя" + РазделительСтрок +
	  						""""+ СокрЛП(ВыбПользователь.ПользовательДляНастроек)+ """." + РазделительСтрок + 
			               "Выберите другого пользователя.", 60);
			Возврат;
		КонецЕсли;
		// Копируем все элементы
		Для Сч=1 По Метаданные.Справочник("Пользователи").Реквизит() Цикл
			НаимРеквизита=Метаданные.Справочник("Пользователи").Реквизит(Сч).Идентификатор;
			УстановитьАтрибут(НаимРеквизита, ВыбПользователь.ПолучитьАтрибут(НаимРеквизита));
		КонецЦикла;   
		Предупреждение("Настройки пользователя:" + РазделительСтрок +
	  						""""+ СокрЛП(ВыбПользователь)+ """." + РазделительСтрок + 
	  					"Успешно скопированы.", 60);
	КонецЕсли;

КонецПроцедуры // КопироватьНастройки()

//******************************************************************************
// Переключатель()
//
// Параметры:    
//  Нет
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  Вызывается из переключателей способа задания настроек по умолчанию 
//
Процедура Переключатель()
	
	Если Способ = 1 Тогда 
		// Настройки по умолчанию задаются "вручную"
		Форма.ПользовательДляНастроек.Доступность(0);
		Форма.КнКопировать.Доступность(1);
		Если ПустоеЗначение(ПользовательДляНастроек) = 0 Тогда
			// Надо "обнулить" пользователя, чьи настройки наследуются
			ПользовательДляНастроек=ПолучитьПустоеЗначение("Справочник.Пользователи");
		КонецЕсли;
	Иначе
		// Настройки по умолчанию наследуются из другого пользователя
		Форма.ПользовательДляНастроек.Доступность(1);
		Форма.КнКопировать.Доступность(0);
	КонецЕсли;
КонецПроцедуры // Переключатель()

//******************************************************************************
// УстановкаСлоев(Значение)
//
// Параметры:
//  Значение - значение закладки.
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  устанавливает видимость слоев в зависимости от выбранной закладки.
//
Процедура УстановкаСлоев(Значение)
	
	Перем СтрокаСписка;
	
	// эти слои показываем всегда
	СтрокаСписка = "Общий";
	
	Если Значение = "Значения по умолчанию" Тогда
		СтрокаСписка = СтрокаСписка + ",НадписиЗначенийПоУмолчанию";
		
		Если Способ = 1 Тогда
			СтрокаСписка = СтрокаСписка + ",ВыборЗначенийПоУмолчанию";
		Иначе
			СтрокаСписка = СтрокаСписка + ",ТекстЗначенийПоУмолчанию";
		КонецЕсли;
	Иначе	
		СтрокаСписка = СтрокаСписка + ",Основной"; 
		// Управление видимостью элементов на основном слое
		Переключатель();
	КонецЕсли;
	
	Форма.ИспользоватьСлой(СтрокаСписка,2); 
	
	//++Ерошенко 04.05.2007
	Если Значение = "Доступ к объектам" Тогда
		Форма.ИспользоватьСлой("Общий,ДоступКОбъектам",2);
	КонецЕсли;
	//--Ерошенко
	//++Ерошенко 10.05.2007
	Если Значение = "Планировщик" Тогда
		Форма.ИспользоватьСлой("Общий,Планировщик",2);
	КонецЕсли;
	//--Ерошенко
	//++Ерошенко 23.05.2007
	Если Значение = "НастройкиЭлектроннойПочты" Тогда
		Форма.ИспользоватьСлой("Общий,НастройкиЭлектроннойПочты",2);
	КонецЕсли;
	//--Ерошенко
	
КонецПроцедуры // УстановкаСлоев()
 

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	ЗапрашиватьПодтверждениеПриВыходе = ПустоеЗначение(НеЗапрашиватьПодтверждениеПриВыходе);
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОк");
	КонецЕсли;
	
	Форма.ИспользоватьЗакладки(1);

	// добавляем закладки, которые используются всегда
	Форма.Закладки.ДобавитьЗначение("Основные");
	Форма.Закладки.ДобавитьЗначение("Значения по умолчанию");
    
	//++Ерошенко 04.05.2007
	Форма.Закладки.ДобавитьЗначение("Доступ к объектам");
	//--Ерошенко
	//++Ерошенко 10.05.2007
	Форма.Закладки.ДобавитьЗначение("Планировщик");
	//--Ерошенко
	//++Ерошенко 23.05.2007
	Форма.Закладки.ДобавитьЗначение("НастройкиЭлектроннойПочты","Настройки e-mail");
	//--Ерошенко
	
	Если ПустоеЗначение(ПользовательДляНастроек) = 1 Тогда
		// Настройки задаются вручную
		Способ =1;
	Иначе
		Способ =2;
	КонецЕсли;
	
	Если ПустоеЗначение(Форма.Параметр) = 1  Тогда
		Форма.Закладки.ТекущаяСтрока(1);
		УстановкаСлоев("Основные");
	Иначе
		Форма.Закладки.ТекущаяСтрока(2);
		УстановкаСлоев("Значения по умолчанию");
	КонецЕсли;
	
	// Управление видимостью элементов на основном слое
	Переключатель();
	
	//++Ерошенко 04.05.2007
	ЗаполнитьТЗ();
	ЗаполнитьТЗПланировщик();
	ДоступностьПрав();
	//--Ерошенко  
	
	//++Ерошенко 07.05.2007
    ОтобразитьIP();
	//--Ерошенко   
	
	//++Ерошенко 23.05.2007
	ПрочестьНастройкиЭлектроннойПочты();
	//--Ерошенко
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если ИдентЭлемДиалога = "ПользовательДляНастроек" Тогда
		Если  ПустоеЗначение(ВыбЗнач.ПользовательДляНастроек) = 0 Тогда
	  		Предупреждение("У выбранного пользователя также наследуются настройки другого пользователя:"+ 
	  		                РазделительСтрок + 
	  						""""+ СокрЛП(ВыбЗнач.ПользовательДляНастроек)+ """." + РазделительСтрок + 
						   "Или выберите для данного пользователя ручной способ задания настроек,
	  	    	           |или выберите для наследования настроек другого пользователя.", 60);
			ФлагСтандОбр = 0;
			Возврат;
		КонецЕсли;  
		
		Если (Выбран() =1) И (ВыбЗнач = ТекущийЭлемент()) Тогда
			// Выбрали для наследования самого себя
			Предупреждение("Пользователь не может наследовать настройки у самого себя!
			                |Выберите для наследования настроек другого пользователя.", 60);
			ФлагСтандОбр = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры // ПриВыбореПользователя()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер, Значение)
	
	УстановкаСлоев(Значение);
	
КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()
	Перем Описание;
	Перем ФлагОшибки, Пользователи;
	
	// проверка заполнения обязательных полей
	
	ФлагОшибки = 1;
	Описание = "Не заполнено поле ";
	Пользователи = СоздатьОбъект("Справочник.Пользователи");
	
	Если ПустоеЗначение(Наименование)=1 Тогда
	    Описание = Описание + "'ФИО'";
		Активизировать("Наименование");
	ИначеЕсли ПустоеЗначение(Код)=1 Тогда
	    Описание = Описание + "'Пользователь'";
		Активизировать("Код");
	ИначеЕсли (Способ=2) И (ПустоеЗначение(ПользовательДляНастроек) = 1) Тогда
		// Данный пользователь наследует настройки другого пользователя, которого забыли выбрать
	    Описание = Описание + "'Пользователь'";
		Активизировать("ПользовательДляНастроек");
	ИначеЕсли (Выбран() =1) И (Способ=2) И (ПустоеЗначение(ПользовательДляНастроек) = 0) И
		(Пользователи.НайтиПоРеквизиту("ПользовательДляНастроек",ТекущийЭлемент(),1) = 1) Тогда
		// Данный пользователь наследует настройки другого пользователя
		// Проверим, не ссылается ли другой пользователь на данного
			
	    Описание = "Флаг наследования настроек может быть установлен только пользователю,
		           |у которого другие пользователи не наследуют настройки.
				   |На данного пользователеля ссылается:" + РазделительСтрок +
				    """" + Пользователи.ТекущийЭлемент() + """." + РазделительСтрок + 
				   "Или выберите для данного пользователя ручной способ задания настроек,
				   |или предварительно уберите ссылки у других пользователей на данного.";
					   
	    Активизировать("ПользовательДляНастроек");
	Иначе
		// все заполнено нормально
		ФлагОшибки = 0;
	КонецЕсли;
	
	Если ФлагОшибки = 1 Тогда
		// что-то не заполнено
		Предупреждение(Описание, 60);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;  
	
	НеЗапрашиватьПодтверждениеПриВыходе = ПустоеЗначение(ЗапрашиватьПодтверждениеПриВыходе);
	
	Если глПользователь = ТекущийЭлемент() Тогда
	    
		// если меняем настройки текущего пользователя, то надо обновить переменную
		// иначе настройки не "вступят в действие"
		глПользователь = ТекущийЭлемент(); 
		
	КонецЕсли;  
	
	//++Ерошенко 04.05.2007
	ЗаписатьИзТЗВСправочник();
	//--Ерошенко
	                  
	//++Ерошенко 23.05.2007
	ЗаписатьНастройкиЭлектроннойПочты();
	//--Ерошенко
	
КонецПроцедуры // ПриЗаписи()

//*********************************************************

//++Ерошенко 04.05.2007
Процедура ДобавитьПолномочие()            
    
	Спис = СоздатьОбъект("СписокЗначений"); 
	
	СпВыб = СоздатьОбъект("СписокЗначений");
	СпВыб.ДобавитьЗначение("Справочник");
	СпВыб.ДобавитьЗначение("Документ");
	СпВыб.ДобавитьЗначение("Отчет");
	СпВыб.ДобавитьЗначение("Обработка"); 
	
	Выб = "";  
	Если СпВыб.ВыбратьЗначение(Выб,"",,,1) = 1 Тогда
		
		Если Выб = "Справочник" Тогда
			Для А = 1 По Метаданные.Справочник() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Справочник(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Справочник(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Документ" Тогда
			Для А = 1 По Метаданные.Документ() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Документ(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Документ(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Отчет" Тогда
			Для А = 1 По Метаданные.Отчет() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Отчет(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Отчет(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Обработка" Тогда
			Для А = 1 По Метаданные.Обработка() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Обработка(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Обработка(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		Значен = "";
		Если Спис.ВыбратьЗначение(Значен,"Выберите объект",,,1) = 1 Тогда
			ТЗ.НоваяСтрока(); 
			ТЗ.Объект =    Значен; 
			ТЗ.Доступен =  1;
			Наименование = Наименование; // для инициации перезаписи элемента..
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

//****************************************************
 
Процедура ДобавитьСобытие()            
    
	Спис = СоздатьОбъект("СписокЗначений"); 
	
	СпВыб = СоздатьОбъект("СписокЗначений");
	СпВыб.ДобавитьЗначение("Справочник");
	СпВыб.ДобавитьЗначение("Документ");
	СпВыб.ДобавитьЗначение("Отчет");
	СпВыб.ДобавитьЗначение("Обработка"); 
	
	Выб = "";  
	Если СпВыб.ВыбратьЗначение(Выб,"",,,1) = 1 Тогда
		
		Если Выб = "Справочник" Тогда
			Для А = 1 По Метаданные.Справочник() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Справочник(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Справочник(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Документ" Тогда
			Для А = 1 По Метаданные.Документ() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Документ(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Документ(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Отчет" Тогда
			Для А = 1 По Метаданные.Отчет() Цикл 
				Стр = "";
				Если ТЗ.НайтиЗначение(Метаданные.Отчет(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Отчет(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		ИначеЕсли Выб = "Обработка" Тогда
			Для А = 1 По Метаданные.Обработка() Цикл 
				Стр = "";
				Если ТЗПланировщик.НайтиЗначение(Метаданные.Обработка(А).ПолныйИдентификатор(),Стр,"Объект") = 0 Тогда
					Спис.ДобавитьЗначение(Метаданные.Обработка(А).ПолныйИдентификатор());  
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		Значен = "";
		Если Спис.ВыбратьЗначение(Значен,"Выберите объект",,,1) = 1 Тогда
			ТЗПланировщик.НоваяСтрока(); 
			ТЗПланировщик.Объект =    Значен; 
			ТЗПланировщик.Доступен =  1; 
			//ТЗПланировщик.ВремяЗапуска = 
			Наименование = Наименование; // для инициации перезаписи элемента..
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

//****************************************************

Процедура УдалитьПолномочие()
	
	Попытка 
		Ответ = Вопрос("Вы уверены, что хотите удалить этот элемент доступа?","Да+Нет");
		Если Ответ = "Да" Тогда
			ТЗ.УдалитьСтроку(ТЗ.ТекущаяСтрока());  
			Наименование = Наименование; // для инициации перезаписи элемента..  
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//****************************************************

Процедура УдалитьСобытие()
	
	Попытка 
		Ответ = Вопрос("Вы уверены, что хотите удалить это событие?","Да+Нет");
		Если Ответ = "Да" Тогда
			ТЗПланировщик.УдалитьСтроку(ТЗПланировщик.ТекущаяСтрока());  
			Наименование = Наименование; // для инициации перезаписи элемента..  
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//****************************************************

Процедура ПоменятьДоступ()
	
	Попытка
		ТекДоступ = ТЗ.ПолучитьЗначение(ТЗ.ТекущаяСтрока(),"Доступен");
		Если ТекДоступ = 1 Тогда
			ИтДоступ = 0;
		Иначе
			ИтДоступ = 1;
		КонецЕсли;
		ТЗ.УстановитьЗначение(ТЗ.ТекущаяСтрока(),"Доступен",ИтДоступ);
		Наименование = Наименование; // для инициации перезаписи элемента..
	Исключение
	КонецПопытки;
	
КонецПроцедуры 
                  
//****************************************************

Процедура ПоменятьВремя()
	
	Попытка   
		ТекДанные = ТЗПланировщик.ПолучитьЗначение(ТЗПланировщик.ТекущаяСтрока(),ТЗПланировщик.ТекущаяКолонка());
		Если ТЗПланировщик.ТекущаяКолонка() = "Доступен" Тогда  
			Если ТекДанные = 1 Тогда
				ТекДанные = 2; 
				ТЗПланировщик.УстановитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"ВремяЗапуска","");
			ИначеЕсли ТекДанные = 2 Тогда
				ТекДанные = 0; 
				ТЗПланировщик.УстановитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"ВремяЗапуска","23:00");
			ИначеЕсли ТекДанные = 0 Тогда
				ТекДанные = 1; 
				ТЗПланировщик.УстановитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"ВремяЗапуска","");
			КонецЕсли;
			ТЗПланировщик.УстановитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"Доступен",ТекДанные);
			Наименование = Наименование; // для инициации перезаписи элемента..
		ИначеЕсли ТЗПланировщик.ТекущаяКолонка() = "ВремяЗапуска" Тогда  
			Если ТЗПланировщик.ПолучитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"Доступен") > 0 Тогда
				Предупреждение("Чтобы установить время, поменяйте 
				|способ запуска планируемого события");	
			Иначе
				Если ВвестиЧисло(ТекДанные,"Укажите час запуска...",2,0) = 1 Тогда    
					ТекДанные = ПреобрВоВремя(ТекДанные);
					ТЗПланировщик.УстановитьЗначение(ТЗПланировщик.ТекущаяСтрока(),"ВремяЗапуска",ТекДанные);
					Наименование = Наименование; 
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры 

//****************************************************

Процедура ВыборIP()
	
	Стр = "192.168.192.";
	Если ВвестиСтроку(Стр,"Укажите локальный IP пользователя",15,0,0) = 1 Тогда  
		ЛокальныйIP = Стр;
	КонецЕсли;
	ОтобразитьIP();
	
КонецПроцедуры
//--Ерошенко    


Процедура ВыборФайла()
    
	Тек = СокрЛП(КаталогПечати);
	Если ФС.ВыбратьКаталог(Тек,"Выберите каталог печати") = 1 Тогда
       
		КаталогПечати = Тек;
		
	КонецЕсли;
    
КонецПроцедуры 

//++Ерошенко 23.05.2007
Процедура ЕстьИзменения()
    
	Наименование = Наименование;
	
КонецПроцедуры
//--Ерошенко