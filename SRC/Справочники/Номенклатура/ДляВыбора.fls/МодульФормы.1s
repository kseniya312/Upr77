////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем ОбщРег, ОстаткиТМЦ, Резервы; 

Перем НС, Рег1, Рег2, Склад_темп, ТЗ, ТЗ2;	//Работа с остатками

Перем Парам;
Перем ФормаТаблицыОстатков;  // контекст формы с таблицей остатков
Перем СканерПосылкаДанных;
Перем Склад;


Функция ПолучитьГруппуНоменклатуры()   

	ТекНоменклатура = ТекущийЭлемент();
	Возврат глПолучитьГруппуНоменклатуры(ТекНоменклатура, Склад);
	 
КонецФункции

//******************************************************************************
// ПолучитьОстатокЗаполнитьЦену()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строка для колонки "Остаток" списка справочника.
//
// Вызывается из формул элементов диалога:
//  Колонка "Остаток".
//
// Описание:
//  Служит для заполнения колонок "Остаток", "Единица, ""Цена", "Валюта" в случае показа остатков
//  в колонках списка справочника. В колонках  "Цена", "Валюта" выводятся значения
//  модульных переменных "ЕдиницаТекНоменклатуры, "ЦенаТекНоменклатуры" и "ВалютаТекНоменклатуры". 
//

Функция ПолучитьОстаток()
	Перем ТовОстаток, ТовОстатокПоФирме, ТовЕдиница, ТовЦена, ТовВалюта;
	
	ОстатокТекНоменклатуры = "";
	РезервСклад      = "";
	ЦенаТекНоменклатуры    = "";
	ВалютаТекНоменклатуры  = "";
	ЕдиницаТекНоменклатуры = "";
	
	ТекНоменклатура = ТекущийЭлемент();
	
	Если (ТекНоменклатура.ЭтоГруппа() = 0) Тогда        
		

			РезервСклад = 0;
			глПолучитьОстаткиНоменклатуры(глПользователь.ОсновнаяФирма, ТекНоменклатура, ЕдиницаТекНоменклатуры, ОстаткиТМЦ, ТовОстаток, ТовОстатокПоФирме, , Резервы, 1,,,РезервСклад);
			
				РезервСклад = ?(ПустоеЗначение(РезервСклад) = 1, "", СокрЛП(Формат(РезервСклад,"Ч014.3")));
			ОстатокТекНоменклатуры = ?(ПустоеЗначение(ТовОстаток) = 1, "", СокрЛП(Формат(ТовОстаток,"Ч014.3")));
			

	КонецЕсли;
	
	Возврат ОстатокТекНоменклатуры;
	
КонецФункции // ПолучитьОстатокЗаполнитьЦену()
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ОсновноеСвойство()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Значение основного свойства
//
// Вызывается из формул реквизитов диалога
// колонка основное свойство
//
// Описание:
//  Формирует и возращает строковое представление основного свойства
//
Функция ОсновноеСвойство()
	
	Если ЭтоГруппа() = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	Если ПустоеЗначение(ТекущийЭлемент()) = 1  Тогда
		Возврат "";
	Иначе  
		Если ПустоеЗначение(ТекущийЭлемент().ОсновноеСвойство) = 1  Тогда
			Возврат "";
		Иначе
			Возврат ТекущийЭлемент().ОсновноеСвойство.ЗначениеСвойства;
		КонецЕсли;
	КонецЕсли;
КонецФункции // ОсновноеСвойство()

//======================================================================
Процедура ПриИзмененииСкрытьИзВосьмерки()
	Если флСкрытьИзВосьмерки = 1 Тогда
		УстановитьОтбор("ИзВосьмерки", 0);
	Иначе
		УстановитьОтбор(, );
	КонецЕсли;	
КонецПроцедуры // ПриИзмененииСкрытьИзВосьмерки

//******************************************************************************
// ПоКнопкеОстатки()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопка "Остатки".
//
// Описание:
//  Вызывает форму показа остатков по текущему ТМЦ в таблице значений.
//
Процедура ПоКнопкеОстатки()
	Если НазваниеНабораПрав()<>"Сервис" Тогда	//Сервис ограничен в правах
		Параметр = глВзятьКонтекст(Контекст);
		ОткрытьФорму("Обработка.ПоказатьОстаткиТМЦ", Параметр);
		ФормаТаблицыОстатков = Параметр; // через параметр возвращается контекст открытой формы обработки
	КонецЕсли;
КонецПроцедуры // ПоКнопкеОстатки()

//******************************************************************************
// СформироватьИнформационнуюСтроку()
//
// Параметры:
//  Нет
//
//	Возвращаемое значение:
//  Нет
//
// Описание:
//  Формирует текст информационной строки формы. 
//
Функция СформироватьИнформационнуюСтроку()
	Перем ИнфСтрока;
	
	Если ПустоеЗначение(ТекущийЭлемент()) = 1 Тогда
		// не выбран элемент
		ИнфСтрока = "";
	Иначе
		
		Если ТекущийЭлемент().ЭтоГруппа() = 1 Тогда
			// текущий элемент - группа
			ИнфСтрока =  ТекущийЭлемент().ПолноеНаименование();
		Иначе
			
			ТекЭлем = ТекущийЭлемент();
			
			ИнфСтрока = СокрЛП(ТекЭлем.ПолнНаименование) +
			            ?(ПустоеЗначение(ТекЭлем.Артикул) = 0, "  Артикул: " + СокрЛП(ТекЭлем.Артикул), "") +
			            ?(ПустоеЗначение(ТекЭлем.Комментарий) = 0, "  Комментарий: " + СокрЛП(ТекЭлем.Комментарий),	"");
		
			Если ТипЗначения(ФормаТаблицыОстатков) = 100 Тогда
				
				// если открыта форма с таблицей остатков, то обновим в ней текущий элемент
				ФормаТаблицыОстатков.Форма.Обновить(0);
			    
			КонецЕсли;			
		КонецЕсли;

	КонецЕсли;
	
	Возврат ИнфСтрока;
	
КонецФункции // СформироватьИнформационнуюСтроку()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	
	Парам = Форма.Параметр;
	
	Если ТипЗначенияСтр(Парам) = "СписокЗначений" Тогда
		АктивизироватьОбъект(Парам.Получить("ТекЭлемент"));
		Форма.ОбработкаВыбораСтроки(1);
	КонецЕсли;
  	
	ТЗ_Остаток.НоваяКолонка("Склад","Справочник.Склады",,,,11);
	ТЗ_Остаток.НоваяКолонка("Остаток","число",15,2,,4);
	ТЗ_Остаток.НоваяКолонка("Резерв","число",15,2,,4);
    
	Сотр=глПользователь.ТипСотрудника;
	Пер	=Перечисление.ТипСотрудника;
	НС=ТекущийЭлемент();
	
	флСкрытьИзВосьмерки = ВосстановитьЗначение("Выбор_флСкрытьИзВосьмерки");
	ПриИзмененииСкрытьИзВосьмерки();	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриВыбореСтроки()
	
	Если ТипЗначенияСтр(Парам) = "СписокЗначений" Тогда
		Форма.Параметр.Установить("СтатусВозврата", 1);
		Форма.Параметр.Установить("ВыбЗначение", ТекущийЭлемент());
		Форма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры // ПриВыбореСтроки()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	
	// если открыта форма с таблицей остатков, то закроем и ее
	Если ТипЗначения(ФормаТаблицыОстатков) = 100 Тогда
		ФормаТаблицыОстатков.Форма.Закрыть(0);
	КонецЕсли;			
	
	Если СканерПосылкаДанных = 1 Тогда
		
		// Обработка закончена. Готовы к получению нового штрихкода.
		глСканерПосылкаДанных(1);
	КонецЕсли;			
	СохранитьЗначение("Выбор_флСкрытьИзВосьмерки",   флСкрытьИзВосьмерки);
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	
	Перем ВремТовар, ВремЕдиница, ВремКоличество;
	
	Если Событие = "BarCodeValue" Тогда
		Если глПолучитьТоварПоШтрихкоду(Данные, ВремТовар, ВремЕдиница, ВремКоличество) <> 0 Тогда
			Форма.ВыполнитьВыбор(ВремТовар);
		КонецЕсли;
		СканерПосылкаДанных = 1;
	Иначе
		глОбработкаВнешнегоСобытия(Источник, Событие, Данные);	
	КонецЕсли;

КонецПроцедуры // ОбработкаВнешнегоСобытия()

Функция ПокажиОстатки()
	Перем стр;
    
	Если НС=ТекущийЭлемент() Тогда
	    возврат 0;
	КонецЕсли;

	//Если НазваниеНабораПрав()="Сервис" Тогда
	//	возврат 0;
	//КонецЕсли;
        
	стр="";
	ТЗ_Остаток.УдалитьСтроки();
	Если ЭтоГруппа()=1 тогда
		стрк="";
		возврат стрк;
	КонецЕсли;
	Склад_Темп.ВыбратьЭлементы();
	Пока Склад_темп.ПолучитьЭлемент()=1 Цикл
		Рег1.УстановитьФильтр(,ТекущийЭлемент(),Склад_темп);
		Рег1.ВыгрузитьИтоги(ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
		
		рег2.УстановитьФильтр(ТекущийЭлемент(),Склад_темп);
		//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
		рег2.ВыгрузитьИтоги(ТЗ2,1,1);
		
		ТЗ2.Свернуть("Номенклатура","Количество");
		х					= ПолучитьПустоеЗначение(х);
		у					= 1;

		а=0;
		
		Если ТЗ2.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда	//Сначала общий резерв
			а=1;
			ТЗ_Остаток.НоваяСтрока();
			ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
			ТЗ_Остаток.Резерв	= ТЗ2.ПолучитьЗначение(х,"Количество");
			х					= ПолучитьПустоеЗначение(х);
		КонецЕсли;
		//Теперь из остатков ТМЦ
		х			= ПолучитьПустоеЗначение(х);
		у			= 2;
		Если ТЗ.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда
			Если а=0 Тогда
	    		ТЗ_Остаток.НоваяСтрока();
				ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
			КонецЕсли;
			ТЗ_Остаток.Остаток	= ТЗ.ПолучитьЗначение(х,"Количество");
		КонецЕсли;
	КонецЦикла;
	НС=ТекущийЭлемент();
	стрк="";
	возврат стрк;
КонецФункции

Процедура ПокажиДетализациюРезерва()
	Если ТЗ_Остаток.КоличествоСтрок()=0 Тогда
	    возврат;
	КонецЕсли;
	х	= ТЗ_Остаток.ТекущаяСтрока();
	скл	= ТЗ_Остаток.ПолучитьЗначение(х,"Склад");
	ном	= ТекущийЭлемент();
	ТекД= "";
	КонтРезерв	= СоздатьОбъект("СписокЗначений");	//Передача параметров в обработку "РезервыТМЦ" 
	КонтРезерв.ДобавитьЗначение(скл,"Склад");
	КонтРезерв.ДобавитьЗначение(ном,"Номенклатура");
	КонтРезерв.ДобавитьЗначение(ТекД,"ТекД");
	
	ОткрытьФормуМодально("Обработка.ПокажиРезервыТМЦ", контРезерв);
	
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ ФОРМЫ    
//
СканерПосылкаДанных = 0;

ТЗ			= СоздатьОбъект("ТаблицаЗначений");
ТЗ2			= СоздатьОбъект("ТаблицаЗначений");
Рег1		= СоздатьОбъект("Регистр.ОстаткиТМЦ");
Рег2		= СоздатьОбъект("Регистр.РезервыТМЦ2");
Склад_темп	= СоздатьОбъект("Справочник.Склады");
Склад		= глПользователь.ОсновнойСклад;
ВыборГруппы(1);
