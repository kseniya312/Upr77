Перем НС, Рег1, Рег2, Склад_темп, ТЗ, ТЗ2;	//Работа с остатками
Перем флагПереключения;
Перем Склад;
        

Функция ПолучитьГруппуНоменклатуры()   

	ТекНоменклатура = ТекущийЭлемент();
	Возврат глПолучитьГруппуНоменклатуры(ТекНоменклатура, Склад);
	 
КонецФункции

//******************************************************************************
// ОтборПоВключениюВпрайс()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Устанавливает при необходимости отбор в справочнике "Номенклатура" по флагу 
//  включения в прайс
//
Процедура ОтборПоВключениюВпрайс()
	
	Если флагПереключения=1 тогда
		Если Склад.Магазин=1 Тогда
			если сокрЛП(Склад)="Энгельса" Тогда
				УстановитьОтбор("ПризнакОтбораЭнгельса",1);
			ИначеЕсли сокрЛП(Склад)="Некрасова" Тогда
				УстановитьОтбор("ПризнакОтбораНекрасова",1);
			ИначеЕсли сокрЛП(Склад)="Стахановцев" Тогда
				УстановитьОтбор("ПризнакОтбораСтахановцев",1);
			ИначеЕсли сокрЛП(Склад)="Савушкина" Тогда
				УстановитьОтбор("ПризнакОтбораСавушкина",1);
			ИначеЕсли сокрЛП(Склад)="Ленсовета" Тогда
				УстановитьОтбор("ПризнакОтбораЛенсовета",1);
			//ИначеЕсли сокрЛП(Склад)="Антонова-Овсеенко" Тогда
			//	УстановитьОтбор("ПризнакОтбораАнтоноваОвсеенко",1);
			ИначеЕсли сокрЛП(Склад)="Коллонтай" Тогда
				УстановитьОтбор("ПризнакОтбораКоллонтай",1);
			ИначеЕсли сокрЛП(Склад)="Радищева" Тогда
				УстановитьОтбор("ПризнакОтбораРадищева",1);
			ИначеЕсли сокрЛП(Склад)="Туристская" Тогда
				УстановитьОтбор("ПризнакОтбораТуристская",1);
			ИначеЕсли сокрЛП(Склад)="Туристская" Тогда
				УстановитьОтбор("ПризнакОтбораЛенинский",1);	
			КонецЕсли;
		КонецЕсли;
	Иначе
		УстановитьОтбор(,);
	КонецЕсли;
	
КонецПроцедуры // ОтборПоВключениюВпрайс()

//При открытии формы
Процедура ПриОткрытии()
	ОтборПоВключениюВпрайс();
	НС=ТекущийЭлемент();
	ТЗ_Остаток.НоваяКолонка("Склад","Справочник.Склады",,,,11);
	ТЗ_Остаток.НоваяКолонка("Остаток","число",15,2,,4);
	ТЗ_Остаток.НоваяКолонка("Резервы","число",15,2,,4);
КонецПроцедуры

//Вывод справки по текущей позиции
Процедура ИнфоТекст()
    ОчиститьОкноСообщений();
	сообщить("Тек. элемент: "+сокрЛП(ТекущийЭлемент()));
	Сообщить("	артикул: "+сокрЛП(ТекущийЭлемент().Артикул));
	Сообщить("	производитель: "+сокрЛП(ТекущийЭлемент().Производитель));
КонецПроцедуры

//******************************************************************************
// ДобавитьВтаблицу(Табл, Товар, Тип, ИспТип)
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//
Процедура ДобавитьВтаблицу(Табл, Товар, Тип)
	Перем ВремЦена, ВремЕдиница, ВремВалюта;
	
	Если глВернутьЦену(Товар, Тип, РабочаяДата(), ВремЦена, ВремЕдиница, ВремВалюта) = 1 Тогда
		Табл.НоваяСтрока();   
		Табл.Товар   		= СокрЛП(Товар.ПолнНаименование);
		Табл.Цена		    = ВремЦена;
		Табл.Валюта			= ВремВалюта;
		Табл.Единица		= ВремЕдиница;
		Табл.Производитель	= СокрЛП(Товар.СтранаПроисхождения);
		Табл.Артикул		= СокрЛП(Товар.Артикул);
	Иначе
		Сообщить("У товара """ + Товар.ПолнНаименование + """ отсутствует цена """ + Тип + """");
	КонецЕсли;	
	
КонецПроцедуры // ДобавитьВтаблицу()

Функция ПокажиОстатки()
	Перем стр;
    
	Если НС=ТекущийЭлемент() Тогда
	    возврат 0;
	ИначеЕсли Чужой=0 Тогда
	    возврат 0;
	ИначеЕсли НазваниеНабораПрав()="Сервис" Тогда
		возврат 0;
	КонецЕсли;
    
	стр="";
	ТЗ_Остаток.УдалитьСтроки();
	Если ЭтоГруппа()=1 тогда
		стрк="";
		возврат стрк;
	КонецЕсли;
	Склад_Темп.ВыбратьЭлементы();
	Пока Склад_темп.ПолучитьЭлемент()=1 Цикл
		Если (НазваниеНабораПрав()="Продавец_розница") или (НазваниеНабораПрав()="Руководитель_розница") тогда
//			если Склад_темп.Магазин=1 Тогда
				если ТолькоСвой=1 Тогда
					если Склад_темп=глПользователь.ОсновнойСклад Тогда
						Рег1.УстановитьФильтр(,ТекущийЭлемент(),Склад_темп);
						Рег1.ВыгрузитьИтоги(ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
						
						рег2.УстановитьФильтр(ТекущийЭлемент(),Склад_темп);
						//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
						рег2.ВыгрузитьИтоги(ТЗ2,1,1);
						
						ТЗ2.Свернуть("Номенклатура","Количество");
						х					= ПолучитьПустоеЗначение(х);
						у					= 1;
						
						а=0;
						
						Если ТЗ2.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда	//Сначала общий резерв
							а=1;
							ТЗ_Остаток.НоваяСтрока();
							ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
							ТЗ_Остаток.Резервы	= ТЗ2.ПолучитьЗначение(х,"Количество");
							х					= ПолучитьПустоеЗначение(х);
						КонецЕсли;
						//Теперь из остатков ТМЦ
						х			= ПолучитьПустоеЗначение(х);
						у			= 2;
						Если ТЗ.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда
							Если а=0 Тогда
								ТЗ_Остаток.НоваяСтрока();
								ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
							КонецЕсли;
							ТЗ_Остаток.Остаток	= ТЗ.ПолучитьЗначение(х,"Количество");
						КонецЕсли;
					КонецЕсли;
				Иначе
					Рег1.УстановитьФильтр(,ТекущийЭлемент(),Склад_темп);
					Рег1.ВыгрузитьИтоги(ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
					
					рег2.УстановитьФильтр(ТекущийЭлемент(),Склад_темп);
					//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
					рег2.ВыгрузитьИтоги(ТЗ2,1,1);
					
					ТЗ2.Свернуть("Номенклатура","Количество");
					х					= ПолучитьПустоеЗначение(х);
					у					= 1;
					
					а=0;
					
					Если ТЗ2.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда	//Сначала общий резерв
						а=1;
						ТЗ_Остаток.НоваяСтрока();
						ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
						ТЗ_Остаток.Резервы	= ТЗ2.ПолучитьЗначение(х,"Количество");
						х					= ПолучитьПустоеЗначение(х);
					КонецЕсли;
					//Теперь из остатков ТМЦ
					х			= ПолучитьПустоеЗначение(х);
					у			= 2;
					Если ТЗ.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда
						Если а=0 Тогда
							ТЗ_Остаток.НоваяСтрока();
							ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
						КонецЕсли;
						ТЗ_Остаток.Остаток	= ТЗ.ПолучитьЗначение(х,"Количество");
					КонецЕсли;

				КонецЕсли;
			//КонецЕсли;
		Иначе
			Рег1.УстановитьФильтр(,ТекущийЭлемент(),Склад_темп);
			Рег1.ВыгрузитьИтоги(ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
			
			рег2.УстановитьФильтр(ТекущийЭлемент(),Склад_темп);
			//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
			рег2.ВыгрузитьИтоги(ТЗ2,1,1);
			
			ТЗ2.Свернуть("Номенклатура","Количество");
			х					= ПолучитьПустоеЗначение(х);
			у					= 1;
			
			а=0;
			
			Если ТЗ2.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда	//Сначала общий резерв
				а=1;
				ТЗ_Остаток.НоваяСтрока();
				ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
				ТЗ_Остаток.Резервы	= ТЗ2.ПолучитьЗначение(х,"Количество");
				х					= ПолучитьПустоеЗначение(х);
			КонецЕсли;
			//Теперь из остатков ТМЦ
			х			= ПолучитьПустоеЗначение(х);
			у			= 2;
			Если ТЗ.НайтиЗначение(ТекущийЭлемент(),х,у)=1 Тогда
				Если а=0 Тогда
					ТЗ_Остаток.НоваяСтрока();
					ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
				КонецЕсли;
				ТЗ_Остаток.Остаток	= ТЗ.ПолучитьЗначение(х,"Количество");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	НС=ТекущийЭлемент();
	стрк="";
	возврат стрк;
КонецФункции




//******************************************************************************
// ПечатьЦенника(Товар, ТипЦены)
//
// Параметры:
//  Товар - товар, для которого нужно распечатать ценник
//  ТипЦены - тип цены.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//
Процедура ПечатьЦенника() Экспорт
	Перем ПечЕдиница, ПечНаименование, ПечРозн;
	Перем Таб;
	Перем Столбик;
	Перем Ряд;
	Перем Процент, ПорядокОкр;
	
	Перем ТабТоваров, ДанныеДляПечати;
	
	ВыбТовар = ТекущийЭлемент();
	
	Если ПустоеЗначение(ВыбТовар) = 1 Тогда
		Предупреждение("Не выбрана товар или группа товаров!", 60);
		Возврат;
	КонецЕсли;
	
	
	ТипЦены	=	глПользователь.ОсновнойТипЦенПродажи;
	
	ТабТоваров = СоздатьОбъект("ТаблицаЗначений"); 
	ТабТоваров.НоваяКолонка("Артикул");
	ТабТоваров.НоваяКолонка("Товар");
	ТабТоваров.НоваяКолонка("Цена","Число");
	ТабТоваров.НоваяКолонка("Единица");
	ТабТоваров.НоваяКолонка("Валюта");
	ТабТоваров.НоваяКолонка("Производитель");
	
	Если ВыбТовар.ЭтоГруппа() = 0 Тогда
		ДобавитьВтаблицу(ТабТоваров, ВыбТовар, ТипЦены);
	Иначе
		СтрТов = СоздатьОбъект("Справочник.Номенклатура");
		СтрТов.ИспользоватьРодителя(ВыбТовар);
		СтрТов.ВключатьПодчиненные(1);
		СтрТов.ВыбратьЭлементы();
		
		Пока СтрТов.ПолучитьЭлемент() = 1 Цикл
			ТекТов = СтрТов.ТекущийЭлемент();
			Если ТекТов.ЭтоГруппа() = 0 Тогда
				ДобавитьВтаблицу(ТабТоваров, ТекТов, ТипЦены);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// упакуем данные в список
	ДанныеДляПечати = СоздатьОбъект("СписокЗначений");
	
	Фирма = СокрЛП(глЗначениеПоУмолчанию("ОсновнаяФирма").ЮрЛицо.ПолнНаименование);
	ДанныеДляПечати.ДобавитьЗначение(Фирма          , "Фирма");
	ДанныеДляПечати.ДобавитьЗначение(ТипЦены.Валюта , "Валюта");
	ДанныеДляПечати.ДобавитьЗначение(ТабТоваров     , "Таблица");
	
	ОткрытьФорму("Обработка.ПечатьЦенника_Розница", ДанныеДляПечати);
	
КонецПроцедуры // глПечатьЦенника(Товар, ТипЦены)

Процедура ПереключиОтбор()
	Если флагПереключения=1 Тогда
		флагПереключения=0;
	иначе 
		флагПереключения=1;
	КонецЕсли;
	ОтборПоВключениюВпрайс();
КонецПроцедуры

//Т.к. стоит задача отображения только товаров с ликвидным остатком, а сделать это в динамическом диапазоне нереально
//	необходима процедура "актуализации остатков" 
Процедура ОбновиКаталогДоступныхТоваров()
	
	Спр = СоздатьОбъект("Справочник.Номенклатура");
	тов	= СоздатьОбъект("Справочник.Номенклатура");
	тов.ВыбратьЭлементы(0);
	
	
	рег1.УстановитьФильтр(,,Склад);
	рег1.ВыгрузитьИтоги(ТЗ2,1,1);
	
	Пока тов.ПолучитьЭлемент()=1 Цикл
		если тов.ЭтоГруппа()=0 Тогда
			х			= ПолучитьПустоеЗначение(х);
			у			= 2;
			Состояние("Обрабатываем элемент: "+тов);
			Если ТЗ2.НайтиЗначение(тов.ТекущийЭлемент(),х,у)=1 Тогда	//Значит есть остаток
				Спр.НайтиЭлемент(тов.ТекущийЭлемент());
				если сокрЛП(Склад)="Энгельса" Тогда
					спр.ПризнакОтбораЭнгельса=1;
				ИначеЕсли сокрЛП(Склад)="Некрасова" Тогда
					спр.ПризнакОтбораНекрасова=1;
				ИначеЕсли сокрЛП(Склад)="Стахановцев" Тогда
					спр.ПризнакОтбораСтахановцев=1;
				ИначеЕсли сокрЛП(Склад)="Савушкина" Тогда
					спр.ПризнакОтбораСавушкина=1;
				ИначеЕсли сокрЛП(Склад)="Ленсовета" Тогда
					спр.ПризнакОтбораЛенсовета=1;
				//ИначеЕсли сокрЛП(Склад)="Антонова-Овсеенко" Тогда
				//	спр.ПризнакОтбораАнтоноваОвсеенко=1; 
				ИначеЕсли сокрЛП(Склад)="Коллонтай" Тогда
					спр.ПризнакОтбораКоллонтай=1;	
				ИначеЕсли сокрЛП(Склад)="Радищева" Тогда
					спр.ПризнакОтбораРадищева=1;
				ИначеЕсли сокрЛП(Склад)="Туристская" Тогда
					спр.ПризнакОтбораТуристская=1;	
				ИначеЕсли сокрЛП(Склад)="Ленинский" Тогда
					спр.ПризнакОтбораЛенинский=1;	
				КонецЕсли;
				попытка
					спр.Записать();
				исключение
					сообщить("Временная ошибка при попытке обновления данных справочника - попробуйте немного позднее!");
//					возврат;
				КонецПопытки;
			Иначе
				Спр.НайтиЭлемент(тов.ТекущийЭлемент());
				если сокрЛП(Склад)="Энгельса" Тогда
					спр.ПризнакОтбораЭнгельса=0;
				ИначеЕсли сокрЛП(Склад)="Некрасова" Тогда
					спр.ПризнакОтбораНекрасова=0;
				ИначеЕсли сокрЛП(Склад)="Стахановцев" Тогда
					спр.ПризнакОтбораСтахановцев=0;
				ИначеЕсли сокрЛП(Склад)="Савушкина" Тогда
					спр.ПризнакОтбораСавушкина=0;
				ИначеЕсли сокрЛП(Склад)="Ленсовета" Тогда
					спр.ПризнакОтбораЛенсовета=0;
				//ИначеЕсли сокрЛП(Склад)="Антонова-Овсеенко" Тогда
				//	спр.ПризнакОтбораАнтоноваОвсеенко=0; 
				ИначеЕсли сокрЛП(Склад)="Коллонтай" Тогда
					спр.ПризнакОтбораКоллонтай=0;
				ИначеЕсли сокрЛП(Склад)="Радищева" Тогда
					спр.ПризнакОтбораРадищева=0;
				ИначеЕсли сокрЛП(Склад)="Туристская" Тогда
					спр.ПризнакОтбораТуристская=0;
				ИначеЕсли сокрЛП(Склад)="Ленинский" Тогда
					спр.ПризнакОтбораЛенинский=0;	
				КонецЕсли;
				попытка
					спр.Записать();
				исключение
					сообщить("Временная ошибка при попытке обновления данных справочника - попробуйте немного позднее!");
//					возврат;
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	УстановитьОтбор(,);
	ОтборПоВключениюВпрайс();	
КонецПроцедуры

Процедура СоздайПрайс()	//Показать обработку "СозданиеПрайса"
	Параметр = глВзятьКонтекст(Контекст);
	ОткрытьФорму("Отчет.СозданиеПрайса", Параметр);
КонецПроцедуры

//++Ерошенко 08.05.2007
Процедура ОткрытьФайл()
	          
	ИмяФ = "";
	ИмяК = "G:\Q$\Рабочая\Магазины\ТехИнфо\";
	Если ФС.ВыбратьФайл(0,ИмяФ,ИмяК,"Выберите файл для просмотра","Файлы(*.pdf)|*.pdf","pdf") = 1 Тогда
		Ф = ИмяК + ИмяФ;
		ЗапуститьПриложение(Ф);  
	КонецЕсли;
	
КонецПроцедуры
//--Ерошенко
   


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// ОсновноеСвойство()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Значение основного свойства
//
// Вызывается из формул реквизитов диалога
// колонка основное свойство
//
// Описание:
//  Формирует и возращает строковое представление основного свойства
//
Функция ОсновноеСвойство()
	
	Если ЭтоГруппа() = 1 Тогда
		Возврат "";
	КонецЕсли;
	
	Если ПустоеЗначение(ТекущийЭлемент()) = 1  Тогда
		Возврат "";
	Иначе  
		Если ПустоеЗначение(ТекущийЭлемент().ОсновноеСвойство) = 1  Тогда
			Возврат "";
		Иначе
			Возврат ТекущийЭлемент().ОсновноеСвойство.ЗначениеСвойства;
		КонецЕсли;
	КонецЕсли;
КонецФункции // ОсновноеСвойство()




ТЗ			= СоздатьОбъект("ТаблицаЗначений");
ТЗ2			= СоздатьОбъект("ТаблицаЗначений");
Рег1		= СоздатьОбъект("Регистр.ОстаткиТМЦ");
Рег2		= СоздатьОбъект("Регистр.РезервыТМЦ2");
Склад_темп	= СоздатьОбъект("Справочник.Склады");
флагПереключения=0;
Склад		= глПользователь.ОсновнойСклад;