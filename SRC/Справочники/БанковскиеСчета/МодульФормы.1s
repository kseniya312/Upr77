Перем ВидыЮрФизЛица; // список видов реквизита ЮрФизЛицо

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
// 
//******************************************************************************
// СформироватьРеквизит(РеквизитДокумента, РеквизитФормы, ЭлементДиалога)
//
// Параметры:
//  РеквизитДокумента - строка – значение редактируемого реквизита в документе.
//  РеквизитФормы     - строка – значение реквизита в диалоге формы.
//  ЭлементДиалога    - строка – идентификатор редактируемго элемента диалога.
//
// Вызывается из формул элементов диалога:
//
// Описание:
// Процедура устанавливает доступность редактирования реквизита 
// "Получатель". Если реквизит недоступен, данные  
// поля заполняются стандартным представлением.
//
Процедура СформироватьРеквизит(РеквизитДокумента, РеквизитФормы, ЭлементДиалога)
	
	Если ПустаяСтрока(РеквизитДокумента) = 1 Тогда

		//заполняем стандартным представлением		
		РеквизитФормы = "";

		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(?(ЮрФизЛицо.Выбран()=1,СокрЛП(ЮрФизЛицо.ИНН),""),"ИНН");
		Параметры.ДобавитьЗначение(?(ЮрФизЛицо.Выбран()=1,СокрЛП(?(ПустаяСтрока(ЮрФизЛицо.ПолнНаименование)=1,ЮрФизЛицо.Наименование,ЮрФизЛицо.ПолнНаименование)),""),"НаименованиеКонтрагента");
		Параметры.ДобавитьЗначение(СокрЛП(НомерСчета),"НомерСчета");
		Параметры.ДобавитьЗначение(Банк,"Банк");
		Параметры.ДобавитьЗначение(БанкДляРасчетов,"БанкДляРасчетов");

		глРеквизитыПлательщикаПолучателя(Параметры);
		
        РеквизитФормы = Параметры.Получить("Результат");
		
		Форма.ПолучитьАтрибут(ЭлементДиалога).Доступность(0);

	Иначе
		
		РеквизитФормы = РеквизитДокумента;
		Форма.ПолучитьАтрибут(ЭлементДиалога).Доступность(1);
		
	КонецЕсли;
	
КонецПроцедуры // СформироватьРеквизит()

//******************************************************************************
// ПриИзмененииНомераСчета()
//
// Параметры:
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  НомерСчета.
//
// Описание:
//  Проверяет уникальность номера банковского счета.
//
Процедура ПриИзмененииНомераСчета()
	
	СформироватьРеквизит(РеквизитыПлательщикаИлиПолучателя, ПлательщикПолучатель, "ПлательщикПолучатель");
	
	// Номер счета может быть не указан.	
	Если СтрДлина(СокрЛП(НомерСчета)) < 20 Тогда
		Возврат;
	КонецЕсли;
	
	// Список найденных элементов с таким же номером счета.
	Список = СоздатьОбъект("СписокЗначений");
	
	Объект = СоздатьОбъект("Справочник.БанковскиеСчета");
	Объект.ВыбратьЭлементыПоРеквизиту("ЮрФизЛицо", ЮрФизЛицо, 0, 1);
	
	// Поиск элементов с таким же номером счета.
	Пока Объект.ПолучитьЭлемент(1) = 1 Цикл
		Если Объект.ТекущийЭлемент() = ТекущийЭлемент() Тогда
			Возврат; // элемент уже был записан
		ИначеЕсли Объект.НомерСчета = НомерСчета Тогда
			Список.ДобавитьЗначение(Объект.ТекущийЭлемент());
		КонецЕсли;
	КонецЦикла;
	
	// Найдены элементы с таким же номером счета.
	Если 0 < Список.РазмерСписка() Тогда
		Стр = "В справочнике """+Объект.ПредставлениеВида()+
		      """ уже есть элементы с таким же номером счета!";
		Предупреждение(Стр, 60);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииНомераСчета()

//******************************************************************************
// УправлениеВидимостью()
//
// Параметры:
//  
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  ВалютаСчета.
//
// Описание:
//  Управляет видимостью реквизитов.
//
Процедура УправлениеВидимостью()
	
	Форма.ИспользоватьСлой("Общий, Кнопки", 2);
	
	Если ЮрФизЛицо.Вид() <> "СвоиЮрЛица" Тогда
		Форма.ИспользоватьСлой("НазначениеПлатежа", 1);
		
	ИначеЕсли (ВалютаСчета = глРубли) ИЛИ (ВалютаСчета.Выбран() = 0) Тогда
		Форма.ИспользоватьСлой("ВидСчета, ОпцииПечати", 1);

	Иначе
		Форма.ИспользоватьСлой("РазрешениеЦБ, ОпцииПечати", 1);
		
	КонецЕсли;
	
	Форма.кнВыбратьЮрФизЛицо.Видимость(ПустоеЗначение(ЮрФизЛицо));
	
КонецПроцедуры // УправлениеВидимостью()

//******************************************************************************
// Заголовок()
//
// Параметры:
//  
//
// Возвращаемое значение:
//  Здесь описывается возвращаемое значение.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается функция.
//
Функция Заголовок()
	
	Возврат "Банковский счет "+?(ЮрФизЛицо.Вид() <> "ФизЛица", "юр. лица", "физ. лица")+" "+
	        ?(ЮрФизЛицо.Выбран() = 1, """"+ЮрФизЛицо.Наименование+"""", "<НЕ ВЫБРАНО ЮР. / ФИЗ. ЛИЦО>");
	
КонецФункции // Заголовок()

//******************************************************************************
// ПоКнопкеВыбратьЮрФизЛицо()
//
// Параметры:
//  
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Здесь описывается процедура.
//
Процедура ПоКнопкеВыбратьЮрФизЛицо()
	
	Перем Вид, Позиция, Стр;
	
	Если ВидыЮрФизЛица.ВыбратьЗначение(Вид, "", Позиция, 60, 1) = 1 Тогда
		ИмяФормы = Метаданные.Справочник(Вид).ОсновнаяФормаДляВыбора;
		ВидыЮрФизЛица.ПолучитьЗначение(Позиция, Стр);
		
		Объект = СоздатьОбъект("Справочник."+Вид);
		Если Объект.Выбрать("Выберите "+Стр, ИмяФормы) = 1 Тогда
			ЮрФизЛицо = Объект.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
	
	УправлениеВидимостью();
	
КонецПроцедуры // ПоКнопкеВыбратьЮрФизЛицо()

//******************************************************************************
// ПоКнопкеЗаполнитьПолучателя()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопка кнЗаполнитьПлательщикаПолучателя.
//
// Описание:
//
Процедура ПоКнопкеЗаполнитьПолучателя()

	Параметры = СоздатьОбъект("СписокЗначений");

	Параметры.ДобавитьЗначение(?(ЮрФизЛицо.Выбран()=1,СокрЛП(ЮрФизЛицо.ИНН),""),"ИНН");
	Параметры.ДобавитьЗначение(?(ЮрФизЛицо.Выбран()=1,СокрЛП(?(ПустаяСтрока(ЮрФизЛицо.ПолнНаименование)=1,ЮрФизЛицо.Наименование,ЮрФизЛицо.ПолнНаименование)),""),"НаименованиеКонтрагента");
	Параметры.ДобавитьЗначение(СокрЛП(НомерСчета),"НомерСчета");
	Параметры.ДобавитьЗначение(Банк,"Банк");
	Параметры.ДобавитьЗначение(БанкДляРасчетов,"БанкДляРасчетов");
	// Режим = 1-заполнение плательщика или получателя, 2-заполнение назначения платежа
	Параметры.ДобавитьЗначение(1,"Режим");
	Параметры.ДобавитьЗначение("РеквизитыПлательщикаИлиПолучателя","РеквизитРезультата");
	Параметры.ДобавитьЗначение(Контекст,"Контекст");
	ОткрытьФормуМодально("Обработка.ВводПлатежныхРеквизитов", Параметры);

	СформироватьРеквизит( РеквизитыПлательщикаИлиПолучателя, ПлательщикПолучатель, "ПлательщикПолучатель");

КонецПроцедуры // ПоКнопкеЗаполнитьПолучателя()

//******************************************************************************
// ПоКнопкеОткрыть(Объект)
//
// Параметры:
//  Объект - объект, который необходимо открыть.
//
// Возвращаемое значение:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Кнопки "Открыть".
//
// Описание:
//  Открывает форму объекта.
//
Процедура ПоКнопкеОткрыть(Объект, ЭлементДиалога="")
	
	Если Объект.Выбран() = 1 Тогда
		ОткрытьФормуМодально(Объект, , -1);
	Иначе
		Активизировать(ЭлементДиалога, 1);
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеОткрыть()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 
//******************************************************************************
// Предопределенная процедура.
//
Процедура ВводНового(ФлагКопирования);

	Если ФлагКопирования = 0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
			Если ВидыЮрФизЛица.Принадлежит(Форма.Параметр.Вид()) = 1 Тогда
			    ЮрФизЛицо = Форма.Параметр;
			КонецЕсли;
		КонецЕсли;
		
		ВалютаСчета = Константа.ВалютаБухУчета;
		ВидСчета    = "Расчетный (текущий)";
	КонецЕсли;

КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии();
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнВыбратьЮрФизЛицо.Доступность(0);
		Форма.кнОчиститьБанкДляРасчетов.Доступность(0);
		
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОк");
	КонецЕсли;
	
	УправлениеВидимостью();

	СформироватьРеквизит( РеквизитыПлательщикаИлиПолучателя, ПлательщикПолучатель, "ПлательщикПолучатель");
	
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога)
	
	Если ЭлементДиалога = "ВалютаСчета" Тогда
		Если Выбран() = 1 Тогда
			Предупреждение("Нельзя изменять валюту банковского счета.
			               |Введите новый счет или скопируйте существующий!", 60);
			СтатусВозврата(0);
		КонецЕсли;
	
	ИначеЕсли ЭлементДиалога="ВидСчета" Тогда
		Список = СоздатьОбъект("СписокЗначений");
		
		Список.ДобавитьЗначение("Расчетный (текущий)");
		Список.ДобавитьЗначение("Ссудный");
		Список.ДобавитьЗначение("Депозитный");
		
		Список.ВыбратьЗначение(ВидСчета,"",,,2);
	КонецЕсли;
	
КонецПроцедуры //ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗаписи()
	
	Если ЮрФизЛицо.Выбран() = 0 Тогда
		Предупреждение("Не выбрано юр. / физ. лицо!", 60);
		Активизировать("кнВыбратьЮрФизЛицо");
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	
	// Наименование банковского счета.
	Если ПустаяСтрока(Наименование) = 1 Тогда
		Предупреждение("Не указано наименование счета!", 60);
		Активизировать("Наименование");
		СтатусВозврата(0); Возврат;
	КонецЕсли;

	// Валюта банковского счета.
	Если ВалютаСчета.Выбран() = 0 Тогда
		Предупреждение("Не выбрана валюта счета!", 60);
		Активизировать("ВалютаСчета");
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	
	// Банк банковского счета.
	Если Банк.Выбран() = 0 Тогда
		Предупреждение("Не выбран банк счета!", 60);
		Активизировать("Банк");
		СтатусВозврата(0); Возврат;
	КонецЕсли;

	// Номер банковского счета.
	Если глПроверкаНомераСчета(НомерСчета, Банк.Код, Банк.КоррСчет) = 0 Тогда
		Если Вопрос("Возможно, номер счета указан неверно. Продолжить?", "Да+Нет", 60) <> "Да" Тогда
			Активизировать("НомерСчета");
			СтатусВозврата(0); Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
 
ВидыЮрФизЛица = СоздатьОбъект("СписокЗначений");
ВидыЮрФизЛица.ДобавитьЗначение("ЮрЛица",     "Стороннее юр. лицо");
ВидыЮрФизЛица.ДобавитьЗначение("ФизЛица",    "Физическое лицо");
ВидыЮрФизЛица.ДобавитьЗначение("СвоиЮрЛица", "Собственное юр. лицо");
