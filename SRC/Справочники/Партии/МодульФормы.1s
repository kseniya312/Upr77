////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем КонтекстДокумента;
Перем НомерСтроки;
Перем НадоОбновитьДокумент;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//                                                                                              
//******************************************************************************
// ПриСменеВидаСвойства()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  При смене вида свойства
//
// Описание:
//  Отрабатывает смены вида свойства в диалоге
//
Процедура ПриСменеВидаСвойства()              
	
	Если ВидСвойства <> Свойство.Владелец Тогда
	    Свойство = ПолучитьПустоеЗначение("Справочник.ЗначенияСвойств");
	КонецЕсли;
КонецПроцедуры // ПриСменеВидаСвойства()

//******************************************************************************
// ПриСменеСвойства()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  При смене свойства
//
// Описание:
//  Отрабатывает смену свойства в диалоге
//
Процедура ПриСменеСвойства()              
	
	ВидСвойства = Свойство.Владелец;
	
КонецПроцедуры // ПриСменеВидаСвойства()

//******************************************************************************
// ПриВыбореГТД()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога
//  При смене ГТД
//
// Описание:
//  Отрабатывает выбор ГТД в диалоге 
//
Процедура ПриВыбореГТД()

	Если ГТД.Выбран()=1 Тогда
	    СохранитьЗначение("ПоследняяВыбраннаяГТД",ГТД);
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// ПолучитьЗакупочнуюЦену()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строка с описанием закупочной цены.
//
// Вызывается из формул элементов диалога:
//  Надпись "Закупочная цена".
//
// Описание:
//   Формирует строку цены (сумма, вал, за какую единицу).
//
Функция ПолучитьЗакупочнуюЦену()
	
	Валюта = "";
	Если ДоговорПоставщика.Выбран()=1 Тогда
		Валюта = ДоговорПоставщика.ВалютаВзаиморасчетов;
	ИначеЕсли ПриходныйДокумент.Выбран()=1 Тогда
		 Если глЕстьРеквизитШапки("Валюта", ПриходныйДокумент.Вид()) = 1 Тогда
		 	 Валюта = ПриходныйДокумент.Валюта;
		 КонецЕсли;
	КонецЕсли;
	
	Возврат ""+глФРМ(ЗакупочнаяЦена,Валюта)+" / "+Владелец.БазоваяЕдиница;

КонецФункции // ПолучитьЗакупочнуюЦену()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура

Процедура ПриОткрытии()
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		сообщить("Вы не можете открывать данный элемент!");
		СтатусВозврата(0);
		форма.Закрыть(0);
		Возврат;         
	КонецЕсли;
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОк");
	КонецЕсли;
	
	Парам = Форма.Параметр;
	
	Если ТипЗначенияСтр(Парам) = "СписокЗначений" Тогда
		КонтекстДокумента = Парам.Получить("КонтекстДокумента");
		НомерСтроки       = Парам.Получить("НомерСтроки");
		ЭлементДиалога    = Парам.Получить("ЭлементДиалога");
		
		Если ПустоеЗначение(НомерСтроки) = 1 тогда
			Сообщить("Не указан номер строки для редактирования!","i");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
		
		Если ПустоеЗначение(ЭлементДиалога) = 0 тогда
			Активизировать(ЭлементДиалога, 1);
		КонецЕсли;
		
	КонецЕсли;
	                   
    ВидСвойства = Свойство.Владелец;
	
КонецПроцедуры // ПриОткрытии()                                                                  

//******************************************************************************
// Предопределенная процедура

Процедура ПриЗаписи()
	
	Если (Модифицированность() = 1) ИЛИ (Выбран() = 0) Тогда
		// для новой партии или при изменении
		НадоОбновитьДокумент=1;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

//******************************************************************************
// Предопределенная процедура

Процедура ПриЗакрытии()
	
	Если Выбран() = 1 Тогда
		
		Если (ТипЗначенияСтр(КонтекстДокумента) = "ГрупповойКонтекст") И 
			 (НадоОбновитьДокумент = 1) Тогда
			КонтекстДокумента.ПолучитьСтрокуПоНомеру(НомерСтроки);
			КонтекстДокумента.Партия = "";
			КонтекстДокумента.Партия = ТекущийЭлемент();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если (ИдентЭлемДиалога = "ГТД") Тогда
	
		ФлагСтандОбр = 0;
		ПоследняяГТД = ?(ГТД.Выбран()=1,ГТД,ВосстановитьЗначение("ПоследняяВыбраннаяГТД"));
		Параметр     = ?(ПустоеЗначение(ПоследняяГТД) = 1, ПолучитьПустоеЗначение("Справочник.ГТД"),ПоследняяГТД); // Полезно инициализировать переменые
		ОткрытьФорму("Справочник.ГТД", Параметр);

		Если ТипЗначенияСтр(Параметр) = "Справочник" Тогда
		
			// Модальный режим
			
			ГТД = Параметр;
			Если ГТД.Выбран()=1  Тогда
				СохранитьЗначение("ПоследняяВыбраннаяГТД",ГТД);    
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()
