Перем ТЗ, ВремТЗ;	//Тут все наши данные


Процедура ЗаполниТЗДаннымиПоСчетамЗаПериод()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ЗапросПоСчетамПродажам)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|КредДокумент = Регистр.РезервыРозницы.КредДокумент;
	|СуммаРуб = Регистр.РезервыРозницы.СуммаРуб;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
//	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Группировка КредДокумент без групп;
	|Группировка Документ;
	|Условие(КредДокумент.Склад в ВыбСклад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    
	пока Запрос.Группировка()=1 цикл	//Загрузим всё это добро в ТЗ
		ТЗ.НоваяСтрока();
		ТЗ.КредДокумент			= Запрос.КредДокумент;	
		ТЗ.СуммаКредДокумента	= Запрос.СуммаРубПриход;
		если Запрос.СуммаРубРасход<>0 Тогда
			ТЗ.РасхДокумент			= Запрос.Документ;
			ТЗ.СуммаРасхДокумента	= Запрос.СуммаРубРасход;
		КонецЕсли;
	конецЦикла;
	
КонецПроцедуры


Процедура ЗаполниВремянкуДвижениями()
	Перем Запрос, ТекстЗапроса;
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ЗаполнениеВремянки)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Долг = Регистр.Взаиморасчеты2.Долг;
	|БНСчет = Регистр.Взаиморасчеты2.БНсчет;
	|Функция ДолгПриход = Приход(Долг);
	|Функция ДолгРасход = Расход(Долг);
	|Группировка Документ;
	|Условие(БНСчет = ТЗ.КредДокумент);
	|"//}}ЗАПРОС
	;
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	Пока Запрос.Группировка(1) = 1 Цикл
		ВремТЗ.НоваяСтрока();
		ВремТЗ.КредДокумент 		= ТЗ.КредДокумент;
		//ВремТЗ.СуммаКредДокумента 	= ТЗ.СуммаКредДокумента;
		ВремТЗ.РасхДокумент 		= ТЗ.РасхДокумент;
		//ВремТЗ.СуммаРасхДокумента 	= ТЗ.СуммаРасхДокумента;
		если Запрос.ДолгПриход<>0 Тогда
			ВремТЗ.ДокумРеализации		= Запрос.Документ;
			ВремТЗ.СуммаДокумРеализации	= Запрос.ДолгПриход;
			док=СоздатьОбъект("Документ");
			док.ВыбратьПодчиненныеДокументы(,,ВремТЗ.ДокумРеализации.ТекущийДокумент());
			Пока док.ПолучитьДокумент() = 1 Цикл
				если док.Вид()="СчетаФактурыВыданные" Тогда
					если док.ПометкаУдаления()=0 Тогда
						ВремТЗ.ВыписанныеСФ 		= док.ТекущийДокумент();
						ВремТЗ.СуммаСФВыданной 		= ВремТЗ.ДокумРеализации.ТекущийДокумент().Сумма;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли Запрос.ДолгРасход<>0 Тогда
			ВремТЗ.ДокумОплаты 			= Запрос.Документ;
			ВремТЗ.СуммаДокумОплаты 	= Запрос.ДолгРасход;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СобериВсеВ_ТЗ()
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.КредДокумент 		= ВремТЗ.КредДокумент;
		ТЗ.СуммаКредДокумента 	= ВремТЗ.СуммаКредДокумента;
		ТЗ.РасхДокумент 		= ВремТЗ.РасхДокумент;
		ТЗ.СуммаРасхДокумента 	= ВремТЗ.СуммаРасхДокумента;
		ТЗ.ДокумОплаты 			= ВремТЗ.ДокумОплаты;
		ТЗ.СуммаДокумОплаты 	= ВремТЗ.СуммаДокумОплаты;
		ТЗ.ВыписанныеСФ 		= ВремТЗ.ВыписанныеСФ;
		ТЗ.СуммаСФВыданной 		= ВремТЗ.СуммаСФВыданной;
		ТЗ.ДокумРеализации 		= ВремТЗ.ДокумРеализации;
		ТЗ.СуммаДокумРеализации = ВремТЗ.СуммаДокумРеализации;
	КонецЦикла;
	
	ТЗ.Свернуть("КредДокумент,		РасхДокумент,		ДокумОплаты,		ДокумРеализации,		ВыписанныеСФ",
				"СуммаКредДокумента,СуммаРасхДокумента,	СуммаДокумОплаты,	СуммаДокумРеализации,	СуммаСФВыданной");	//на всякий случай скомпонуем
КонецПроцедуры
	

Процедура ВытащиВсеЭтоВ_Отчет()
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	
	ТЗ.Сортировать("КредДокумент+");
	ТЗ.ВыбратьСтроки();
	ном=0;
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		ном=ном+1;
		если ТЗ.СуммаКредДокумента<>0 Тогда
			док		= ТЗ.КредДокумент;
			Таб.ВывестиСекцию("СтрокаСчета");
		ИначеЕсли ТЗ.СуммаРасхДокумента<>0 Тогда
			док1	= ТЗ.РасхДокумент;
			Таб.ВывестиСекцию("СтрокаРасхДокумента");
		ИначеЕсли ТЗ.СуммаДокумОплаты<>0 Тогда
			док2	= ТЗ.ДокумОплаты;
			Таб.ВывестиСекцию("СтрокаДокумОплаты");
		ИначеЕсли ТЗ.СуммаДокумРеализации<>0 Тогда
			док3	= ТЗ.ДокумРеализации;
			док4	= ТЗ.ВыписанныеСФ;
			Таб.ВывестиСекцию("СтрокаДокумРеализации");
		КонецЕсли;
	КонецЦикла;
	
//	Таб.ВывестиСекцию("Подвал");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчёт по движениям розничных документов","");
	
	
КонецПроцедуры

//*******************************************
Процедура Сформировать()
	ТЗ.УдалитьСтроки();
	ВремТЗ.УдалитьСтроки();
	
	ЗаполниТЗДаннымиПоСчетамЗаПериод();				//Все счета + отгрузки по счетам
	ТЗ.ВыбратьСтроки();
	пока тз.ПолучитьСтроку()=1 Цикл
		если пустоеЗначение(ТЗ.РасхДокумент)=0 Тогда	//Значит уровень иерархии ПродажПоРознице
			//тут найдём все документы оплаты по этому счету
			ЗаполниВремянкуДвижениями();
		КонецЕсли;
	КонецЦикла;
	//ВремТЗ.ВыбратьСтроку();
	СобериВсеВ_ТЗ();
	ВытащиВсеЭтоВ_Отчет();
КонецПроцедуры  


//Распределяет документы в пределах дня в правильном порядке
Процедура РаскидайВПределахДня()
	НачатьТранзакцию();
	сч	= СоздатьОбъект("Документ.СчетБнРозница");
	сч.ВыбратьДокументы();
	Пока сч.ПолучитьДокумент() = 1 Цикл
		если сч.Проведен()=1 Тогда
			Состояние(сокрЛП(сч));
			сч.СделатьНеПроведенным();
			сч.УстановитьВремя(07,00,00);
			сч.Валюта	= глРубли;
			сч.Курс		= глКурсДляВалюты(сч.валюта,сч.ДатаДок);
			сч.Провести();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	НачатьТранзакцию();
	сч	= СоздатьОбъект("Документ.РасходнаяНакладнаяРозницаБезнал");
	сч.ВыбратьДокументы();
	Пока сч.ПолучитьДокумент() = 1 Цикл
		если сч.Проведен()=1 Тогда
			Состояние(сокрЛП(сч));
			сч.СделатьНеПроведенным();
			//теперь проверим соответствие с основным договором
			Если сч.КонтрагентЮЛ.ОсновнойДоговор<>сч.ДоговорЮЛ Тогда
				сч.ДоговорЮЛ=сч.КонтрагентЮЛ.ОсновнойДоговор;
				сч.Валюта	= глРубли;
				сч.Курс		= глКурсДляВалюты(сч.валюта,сч.ДатаДок);
				Сообщить("Изменили договор в документе: "+сокрЛП(сч));
			КонецЕсли;
			сч.УстановитьВремя(20,00,00);
			сч.Провести();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
	НачатьТранзакцию();
	сч	= СоздатьОбъект("Документ.СтрокаВыпискиПриход");
	сч.ВыбратьДокументы();
	Пока сч.ПолучитьДокумент() = 1 Цикл
		если сч.Проведен()=1 Тогда
			Состояние(сокрЛП(сч));
			сч.СделатьНеПроведенным();
			//теперь исправим косячокс
				Если ПустоеЗначение(сч.Договор.ВалютаВзаиморасчетов) =1 Тогда
					сч.СуммаВзаиморасчетов	= 0;
				Иначе
					сч.СуммаВзаиморасчетов = глПересчет(сч.Сумма, сч.Валюта,сч.Курс, сч.Договор.ВалютаВзаиморасчетов,сч.ДатаДок);
				КонецЕсли;
			сч.Провести();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры    


ТЗ=СоздатьОбъект("ТаблицаЗначений");
ВремТЗ=СоздатьОбъект("ТаблицаЗначений");

ТЗ.НоваяКолонка("КредДокумент",			"Документ.СчетБнРозница");					//К нему и будем всё привязывать
ТЗ.НоваяКолонка("СуммаКредДокумента",	"Число",15,2);								//Сколько было по исходному документу

ТЗ.НоваяКолонка("РасхДокумент",			"Документ.РасходнаяНакладнаяРозницаБезнал");	//По нему будет расход
ТЗ.НоваяКолонка("СуммаРасхДокумента",	"Число",15,2);								//Сколько было по расходному документу

ТЗ.НоваяКолонка("ДокумОплаты",			"Документ.СтрокаВыпискиПриход");			//Документ оплаты исходного документа
ТЗ.НоваяКолонка("СуммаДокумОплаты",		"Число",15,2);									//Сколько было по документу оплаты
                                                                                    	
ТЗ.НоваяКолонка("ВыписанныеСФ","Документ.СчетФактураВыданный");						//Документ СчетФактура выданная клиенту
ТЗ.НоваяКолонка("СуммаСФВыданной",		"Число",15,2);									//Сколько было по СФ выданной

ТЗ.НоваяКолонка("ДокумРеализации","Документ.Реализация");						//Документ Реализация - т.е. по чему выдали документы
ТЗ.НоваяКолонка("СуммаДокумРеализации",		"Число",15,2);									//Сколько было документу реализации


ТЗ.Выгрузить(ВремТЗ);	//Скопировали структуру