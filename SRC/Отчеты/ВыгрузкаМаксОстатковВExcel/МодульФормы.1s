////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//   
Перем ТекСтрокаВТаблице; // текущая строка в таблице значений  МФ 

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 

// переменные предназначены для механизма универсальных группировок отчета
Перем СписокГруппировок;
Перем КоличествоГруппировок;
Перем НомерГруппировкиПоТМЦ;      
Перем НомерГруппировкиПоСвойствуТМЦ;      
Перем ВалютаОтчета;             

// Таблица значений для формирования отчета
Перем тз;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ    
//******************************************************************************
// ВыбратьПоФильтру()
//
// Параметры:
//  Нет
//
// Описание:
//  Открывает обработку отбора элементов по произвольному фильтру
//
//Процедура ВыбратьПоФильтру()
//	
//	Перем  ВидЗначенияПодбора;
//	
//	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
//	
//	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	СписокПараметров=СоздатьОбъект("СписокЗначений");
//	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
//	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
//	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
//	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
//	ТаблицаМФ.ФлВкл=2;
//	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
//	
//КонецПроцедуры	// ВыбратьПоФильтру













//******************************************************************************
// Сформировать(ЗакрытьДиалог=0)
//
// Параметры:
//   ЗакрытьДиалог - флаг того, что после формирования отчета надо закрыть диалог	
//
// Возвращаемое значение: 
//	Нет
// 
// Вызывается из формул элементов диалога:
//   кнопки "Сформировать" и "ОК"
//
// Описание:   
//	Запускает отчет.
//
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем Запрос, ТекстЗапроса;          
	
	Если склд.выбран()=0 тогда
		предупреждение("Не выбран склад!");
		возврат;
	конецЕсли;
	ИмяФайла="";
	ИмяКаталога="";
	если ФС.ВыбратьФайл(1,ИмяФайла,ИмяКаталога,,"Файлы MS Excel|*.xls","*.xls")=1 тогда
		
		Таб = СоздатьОбъект("Таблица");
		//Если глПроверкаАктуальностиОтчета(ДатаНачала,ДатаКонца,Последовательность.ОсновнаяПоследовательность)=0 Тогда
		//	Возврат;
		//КонецЕсли;	  
		
		
		
		глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были
		
		
		//Создание объекта типа Запрос
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		//|Наим=Справочник.ОстаткиНоменклатуры.ТекущийЭлемент;
		|Номенклатура=Справочник.ОстаткиНоменклатуры.Владелец, Справочник.АВСГруппа.Владелец;
		|ЕдИзм=Справочник.ОстаткиНоменклатуры.Владелец.БазоваяЕдиница,Справочник.АВСГруппа.Владелец.БазоваяЕдиница;
		|Склад=Справочник.ОстаткиНоменклатуры.Склад,Справочник.АВСГруппа.Склад;
		|МаксимальныйОстаток=Справочник.ОстаткиНоменклатуры.МаксимальныйОстаток; 
		|ГруппаАВС=Справочник.АВСГруппа.Группа;
		|Условие (Склад=Склд);";
		
		
		Загол="";
		
		НетОш = 1; // нет ошибок при наложении фильтров
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Номенклатура",,,ТекстЗапроса,Загол,"СвойстваНоменклатуры");
		//НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Склад",,,ТекстЗапроса,Загол);
		Если НетОш = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|Функция МаксимальныйОстатокСумма = Сумма(МаксимальныйОстаток);
		|Группировка Номенклатура без групп;
		|Группировка Склад без групп;";
		тз = СоздатьОбъект("ТаблицаЗначений");
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;  
		запрос.выгрузить(тз,3,0);
		если ТЗ.КоличествоСтрок()=0 тогда
			сообщить("Нет данных для выгрузки");
			возврат;
		КонецЕсли;
			таб.ВывестиСекцию("ПустаяСтрока");
		ТЗ.выбратьстроки();
		Пока ТЗ.Получитьстроку()=1 цикл
			таб.ВывестиСекцию("Строка");
		КонецЦикла;
		//Таб.ТолькоПросмотр(1);
		Таб.Показать(); 
		Таб.Записать(имякаталога+имяфайла,1);
		сообщить("файл "+имякаталога+имяфайла+" успешно сохранен");
	конецЕсли;
	
КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура      
//
Процедура ПриОткрытии(ФлагВосстановленияНастройки)	
	
	//                  тип          вид           переменная  название
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Номенклатура", "Номенклатура",  "По номенклатуре");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ЗначенияСвойств", "Номенклатура",  "По свойствам номенклатуры");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Склады", "Склад",  "По складам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Пользователи", "Автор",  "По авторам документов");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Проекты", "Проект",  "По проектам");               
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Фирмы", "Фирма",  "По фирмам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","СвоиЮрЛица", "ЮрЛицо",  "По юр. лицам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","УпрАналитика", "УпрАналитика",  "По упр. аналитике");
	
	
	
	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
	
	
КонецПроцедуры		// ПриОткрытии()       

//******************************************************************************
// Предопределенная процедура.
Процедура ВводНового()
	
	// эта предопределенная процедура выполняется при восстановлении настройки
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
КонецПроцедуры // ВводНового()   

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер,Значение)	
	// закладки
	Если Номер=1 Тогда
		глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были
	КонецЕсли;      
	//УправлениеДиалогом();
	//ПерерисовкаНазванийЗакладок();
	
КонецПроцедуры	// ПриВыбореЗакладки

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПодбора(Значение)  
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора 


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
ДатаКонца = ПолучитьДатуТА();

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
	ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");

ТекСтрокаВТаблице="";

