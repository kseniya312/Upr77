////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем Устройство;
Перем КолвоКопий;
Перем Докум;
Перем Прочерк, КороткийПрочерк; 
Перем ПечВалюта;
Перем Доверенность,Ответственный,флСкидкаРеализация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПолучитьИНН(ИННКПП)
//
// Параметры:
//  ИННКПП  - строка, написанные вместе ИНН и КПП юр лица.
//
// Возвращаемое значение:
//  значение ИНН юр лица.
//  
// Описание:
//  Функция возращает ИНН из переданной строки 
//
Функция ПолучитьИНН(ИННКПП)
	
	Если Найти(ИННКПП, "\") <> 0 Тогда
		// найден разделитель
		Возврат Лев(ИННКПП, Найти(ИННКПП, "\") - 1);

	Иначе
		Возврат СокрЛП(ИННКПП);

	КонецЕсли;

КонецФункции // ПолучитьИНН()

//******************************************************************************
// ПолучитьКПП(ИННКПП)
//
// Параметры:
//  ИННКПП  - строка, написанные вместе ИНН и КПП юр лица.
//
// Возвращаемое значение:
//  значение КПП юр лица.
//  
// Описание:
//  Функция возращает КПП из переданной строки 
//
Функция ПолучитьКПП(ИННКПП)

	Если Найти(ИННКПП, "\") <> 0 Тогда
		// найден разделитель
		Возврат Сред(ИННКПП, Найти(ИННКПП, "\") + 1);

	Иначе
				
		Возврат "";

	КонецЕсли;

КонецФункции // ПолучитьКПП()

//******************************************************************************
// Функция ПредставлениеДокумента()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Строковое представление выбранного документа
//
// Вызывается из формул элементов диалога:
//  Элемент диалога Текст (без идентификатора) 
//
// Описание:
//  Возвращает строковое представление выбранного документа. 
//
Функция ПредставлениеДокумента()
	
	Перем Результат;
	
	Результат = "";
	Если ПустоеЗначение(Докум) = 0 Тогда
		Результат = глНазваниеДокументаВЖурнале(Докум) + " № " + СокрЛП(Докум.НомерДок) + " от " + Докум.ДатаДок;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ПредставлениеДокумента()

//******************************************************************************
// ПриИзмененииДокумента()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Элемент диалога Док 
//
// Описание:
//  Заполняет реквизиты диалога грузоотправитель, грузополучатель. 
//
Процедура ПриИзмененииДокумента()
	
	Если Док.Выбран() = 1 Тогда
		Грузоотправитель= Док.Фирма;
		Грузополучатель	= Док.Контрагент;
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииДокумента()

//******************************************************************************
// ПодготовитьРеквизитыШапки(Докум, Рекв)
//
// Параметры:
//  Докум - контекст СФ, выводимого на печать,
//  Рекв  - список значений реквизитов шапки.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Формирует список значений для формирования шапки печатной формы
//
Процедура ПодготовитьРеквизитыШапки(Докум, Рекв)
	
	//++Валерий МЭТР: для нового юр. лица "ИС"
	ВыбЮЛ = "БС";
	НазваниеПроектаИС = СокрЛП(Константа.ПолучитьАтрибут("НазваниеПроектаИС"));
	НазваниеПроектаЭксперт = СокрЛП(Константа.ПолучитьАтрибут("НазваниеПроектаЭксперт"));	
	Если Найти(Докум.Проект.Наименование, СокрЛП(НазваниеПроектаЭксперт)) > 0 Тогда
		ВыбЮЛ = "Эксп"; 
	ИначеЕсли Найти(Докум.Проект.Наименование, СокрЛП(НазваниеПроектаИС)) > 0 Тогда
		ВыбЮЛ = "ИС";
	КонецЕсли; 
	
	Если ВыбЮЛ = "БС" Тогда
		ЮрЛицоФирма = Докум.Фирма.ЮрЛицо;
		ЮрЛицоГрузоотправитель = Грузоотправитель.ЮрЛицо;
		
		Если Константа.ВыводитьБанковскиеРеквизиты = 1 Тогда
			СчетКонтрагента = РазделительСтрок + " р/с " + Докум.Контрагент.ОсновнойСчет.НомерСчета + " в " + Докум.Контрагент.ОсновнойСчет.Банк.Наименование + ", БИК " + Докум.Контрагент.ОсновнойСчет.Банк.Код+ ", корр/с " + Докум.Контрагент.ОсновнойСчет.Банк.КоррСчет;
			
			Если Докум.ДатаДок < '09.07.2009' Тогда
				ОсновнойСчет = Константа.ОсновнойРСДляСчФРанее;
			Иначе
				ОсновнойСчет = Докум.Фирма.ОсновнойСчет;
			КонецЕсли;	
			СчетОтправителя = РазделительСтрок + " р/с " + ОсновнойСчет.НомерСчета + " в " + ОсновнойСчет.Банк.Наименование + ", БИК " + ОсновнойСчет.Банк.Код+ ", корр/с " + ОсновнойСчет.Банк.КоррСчет;
		Иначе
			СчетОтправителя = "";
			СчетКонтрагента = ""; 
		КонецЕсли;
		
		ПечГрузоотправитель = "Грузоотправитель и его адрес: ";
		ПечГрузоотправитель = ПечГрузоотправитель + Шаблон("[ЮрЛицоГрузоотправитель.ПолнНаименование], Адрес: [глПредставлениеАдреса(ЮрЛицоГрузоотправитель.ФактАдрес)]"+СчетОтправителя);
				
		ЮрФизЛицоГрузополучатель = Грузополучатель.ЮрФизЛицо;
		ЮрФизЛицоГрузополучатель = ?(ПустоеЗначение(ЮрФизЛицоГрузополучатель) = 1, ПолучитьПустоеЗначение("Справочник.ЮрЛица"), ЮрФизЛицоГрузополучатель);
		
		ЮрФизЛицо = Докум.Контрагент.ЮрФизЛицо;
		ЮрФизЛицо = ?(ПустоеЗначение(ЮрФизЛицо) = 1, ПолучитьПустоеЗначение("Справочник.ЮрЛица"), ЮрФизЛицо);
		
		Рекв 	= СоздатьОбъект("СписокЗначений");  
		
		Рекв.ДобавитьЗначение(Шаблон("Продавец: [ЮрЛицоФирма.ПолнНаименование] ([ЮрЛицоФирма.Наименование])"), "Поставщик");
		ДатаСтр = НРег(Формат(Докум.ДатаДок, "Д(0)ДДММММГГГГ"));
		Рекв.ДобавитьЗначение(Шаблон("СЧЕТ-ФАКТУРА № [глНомерНаПечать(Докум.ДокОснование)] от " + ДатаСтр), "Номер");
		Рекв.ДобавитьЗначение(Шаблон("Адрес: [глПредставлениеАдреса(ЮрЛицоФирма.ЮрАдрес)]"), "АдресПоставщика");
		Рекв.ДобавитьЗначение(Шаблон("Телефон: [ЮрЛицоФирма.Телефоны]"), "ТелефонПоставщика");
		ТекстКПП = ?(ПустаяСтрока(ПолучитьКПП(ЮрЛицоФирма.ИНН)) = 0,"/"+ПолучитьКПП(ЮрЛицоФирма.ИНН),"");
		Рекв.ДобавитьЗначение(Шаблон("ИНН/КПП продавца: [ПолучитьИНН(ЮрЛицоФирма.ИНН)][ТекстКПП]"), "ИНН_КПППоставщика");
		Рекв.ДобавитьЗначение(ПечГрузоотправитель, "Грузоотправитель");
		Рекв.ДобавитьЗначение(Шаблон("Грузополучатель и его адрес: [ЮрФизЛицоГрузополучатель.ПолнНаименование], Адрес: [глПредставлениеАдреса(ЮрФизЛицоГрузополучатель.ФактАдрес)]"+СчетКонтрагента), "Грузополучатель");
		
		Если (ПустоеЗначение(Докум.НомерПлатРасчДок)=1) И (ПустоеЗначение(Докум.ДатаПлатРасчДок)=1) Тогда
			Рекв.ДобавитьЗначение("К платежно-расчетному документу №______________от____________", "ПоДокументу");
		Иначе
			Рекв.ДобавитьЗначение(Шаблон("К платежно-расчетному документу № [Докум.НомерПлатРасчДок] от [Формат(Докум.ДатаПлатРасчДок, ""Д ДДММГГГГ"")]"), "ПоДокументу");
		КонецЕсли;  
		
		Рекв.ДобавитьЗначение(Шаблон("Покупатель:[СокрП(ЮрФизЛицо.ПолнНаименование)]"), "Покупатель");
		Рекв.ДобавитьЗначение(Шаблон("Адрес: [глПредставлениеАдреса(ЮрФизЛицо.ЮрАдрес)]"), "АдресПокупателя");
		Рекв.ДобавитьЗначение(Шаблон("Телефон: [ЮрФизЛицо.Телефоны]"), "ТелефонПокупателя");
		ТекстКПП = ?(ПустаяСтрока(ПолучитьКПП(ЮрФизЛицо.ИНН)) = 0,"/"+ПолучитьКПП(ЮрФизЛицо.ИНН),"");
		Если ТекстКПП = "" Тогда
			Попытка
				ТекстКПП ="/" + ЮрФизЛицо.КПП;	
			Исключение
			Конецпопытки	
		КонецЕсли;	
		Рекв.ДобавитьЗначение(Шаблон("ИНН/КПП покупателя: [ПолучитьИНН(ЮрФизЛицо.ИНН)][ТекстКПП]"), "ИННКПП_Покупателя");
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		глРеквизитыФирмы(ВыбЮЛ, Параметры);
		
		ЮрЛицоФирма = Докум.Фирма.ЮрЛицо;
		ЮрЛицоГрузоотправитель = Грузоотправитель.ЮрЛицо;
		
		Если Константа.ВыводитьБанковскиеРеквизиты = 1 Тогда
			СчетКонтрагента = РазделительСтрок + " р/с " + Докум.Контрагент.ОсновнойСчет.НомерСчета + " в " + Докум.Контрагент.ОсновнойСчет.Банк.Наименование + ", БИК " + Докум.Контрагент.ОсновнойСчет.Банк.Код+ ", корр/с " + Докум.Контрагент.ОсновнойСчет.Банк.КоррСчет;
			СчетОтправителя = РазделительСтрок + " р/с " + Параметры.Получить("РасчСчет") + " в " + Параметры.Получить("Банк") + ", БИК " + Параметры.Получить("БИК") + ", корр/с " +Параметры.Получить("КоррСчет");
		Иначе
			СчетОтправителя = "";
			СчетКонтрагента = ""; 
		КонецЕсли;
		
		ПечГрузоотправитель = "Грузоотправитель и его адрес: ";
		ПечГрузоотправитель = ПечГрузоотправитель + СокрЛП(Параметры.Получить("ПолноеНаименованиеФирмы")+", Адрес: "+СокрЛП(Параметры.Получить("ПредставлениеЮрАдресаФирмы"))+СчетОтправителя);
				
		ЮрФизЛицоГрузополучатель = Грузополучатель.ЮрФизЛицо;
		ЮрФизЛицоГрузополучатель = ?(ПустоеЗначение(ЮрФизЛицоГрузополучатель) = 1, ПолучитьПустоеЗначение("Справочник.ЮрЛица"), ЮрФизЛицоГрузополучатель);
		
		ЮрФизЛицо = Докум.Контрагент.ЮрФизЛицо;
		ЮрФизЛицо = ?(ПустоеЗначение(ЮрФизЛицо) = 1, ПолучитьПустоеЗначение("Справочник.ЮрЛица"), ЮрФизЛицо);
		
		Рекв 	= СоздатьОбъект("СписокЗначений");

		Рекв.ДобавитьЗначение("Продавец: "+СокрЛП(Параметры.Получить("ПолноеНаименованиеФирмы"))+" "+СокрЛП(Параметры.Получить("СокрНаименованиеФирмы")), "Поставщик");
		ДатаСтр = НРег(Формат(Докум.ДатаДок, "Д(0)ДДММММГГГГ"));
		Рекв.ДобавитьЗначение(Шаблон("СЧЕТ-ФАКТУРА № [глНомерНаПечать(Докум.ДокОснование)] от " + ДатаСтр), "Номер");
		
		Рекв.ДобавитьЗначение("Адрес: "+СокрЛП(Параметры.Получить("ПредставлениеЮрАдресаФирмы")), "АдресПоставщика");
		Рекв.ДобавитьЗначение("Телефон: "+Параметры.Получить("Телефон")+", "+Параметры.Получить("Факс"), "ТелефонПоставщика");
		Рекв.ДобавитьЗначение("ИНН/КПП продавца: "+Параметры.Получить("ИНН")+"/"+Параметры.Получить("КПП"), "ИНН_КПППоставщика");	
		
		Рекв.ДобавитьЗначение(ПечГрузоотправитель, "Грузоотправитель");
		Рекв.ДобавитьЗначение(Шаблон("Грузополучатель и его адрес: [ЮрФизЛицоГрузополучатель.ПолнНаименование], Адрес: [глПредставлениеАдреса(ЮрФизЛицоГрузополучатель.ФактАдрес)]"+СчетКонтрагента), "Грузополучатель");
	
		Если (ПустоеЗначение(Докум.НомерПлатРасчДок)=1) И (ПустоеЗначение(Докум.ДатаПлатРасчДок)=1) Тогда
			Рекв.ДобавитьЗначение("К платежно-расчетному документу №______________от____________", "ПоДокументу");
		Иначе
			Рекв.ДобавитьЗначение(Шаблон("К платежно-расчетному документу № [Докум.НомерПлатРасчДок] от [Формат(Докум.ДатаПлатРасчДок, ""Д ДДММГГГГ"")]"), "ПоДокументу");
		КонецЕсли;  
		
		Рекв.ДобавитьЗначение(Шаблон("Покупатель:[СокрП(ЮрФизЛицо.ПолнНаименование)]"), "Покупатель");
		Рекв.ДобавитьЗначение(Шаблон("Адрес: [глПредставлениеАдреса(ЮрФизЛицо.ЮрАдрес)]"), "АдресПокупателя");
		Рекв.ДобавитьЗначение(Шаблон("Телефон: [ЮрФизЛицо.Телефоны]"), "ТелефонПокупателя");
		ТекстКПП = ?(ПустаяСтрока(ПолучитьКПП(ЮрФизЛицо.ИНН)) = 0,"/"+ПолучитьКПП(ЮрФизЛицо.ИНН),"");
		Если ТекстКПП = "" Тогда
			Попытка
				ТекстКПП ="/" + ЮрФизЛицо.КПП;	
			Исключение
			Конецпопытки	
		КонецЕсли;	
		Рекв.ДобавитьЗначение(Шаблон("ИНН/КПП покупателя: [ПолучитьИНН(ЮрФизЛицо.ИНН)][ТекстКПП]"), "ИННКПП_Покупателя");		
	КонецЕсли;
	//--Валерий МЭТР: для нового юр. лица "ИС"
	
КонецПроцедуры // ПодготовитьРеквизитыШапки()

//******************************************************************************
// СоздатьСтруктуру(МнЧ)
//
// Параметры:
//  МнЧ - подготавливаемая таблица значений для спецификации документа.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Создает стреуктуры таблицы значений для спецификации документа.
//
Процедура СоздатьСтруктуру(МнЧ)
	
	МнЧ = СоздатьОбъект("ТаблицаЗначений");
	МнЧ.НоваяКолонка("Цена",);
	МнЧ.НоваяКолонка("Сумма",);
	МнЧ.НоваяКолонка("СтавкаНДС");
	МнЧ.НоваяКолонка("СуммаНДС",);
	МнЧ.НоваяКолонка("СуммаНП",);
	МнЧ.НоваяКолонка("ВсегоСНДС",);
	МнЧ.НоваяКолонка("Номенклатура");
	МнЧ.НоваяКолонка("СтранаН");
	МнЧ.НоваяКолонка("НомерГТД");
	МнЧ.НоваяКолонка("Единица");
	МнЧ.НоваяКолонка("Количество");
	МнЧ.НоваяКолонка("АкцизЦена");
	
КонецПроцедуры // СоздатьСтруктуру()

//******************************************************************************
// СкорректироватьТаблицуОснования(МнЧ)
//
// Параметры:
//  ТаблицаОснования
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Корректирует цену, сумму, сумму НДС и сумму НП по итогам проведения
//  документа основания по регистрам в зависимости от вида документа
// 
Процедура СкорректироватьТаблицуОснования(Докум, ТаблицаОснования, ВидОсн)

	Если (ВидОсн = "Реализация") ИЛИ (ВидОсн = "РеализацияПрочее") Тогда

		ПечВалюта = Константа.ВалютаБухУчета;
	
		// корретируем табличную часть по регистру "Книга продаж"
		СуммыПоУчету = СоздатьОбъект("ТаблицаЗначений");
		СуммыПоУчету.НоваяКолонка("СуммаПоУчету",    "Число", 15, 2);	
		СуммыПоУчету.НоваяКолонка("СуммаНДСПоУчету", "Число", 15, 2);	
		СуммыПоУчету.НоваяКолонка("СуммаНППоУчету",  "Число", 15, 2);	
	    
		ВсегоСтрок = ТаблицаОснования.КоличествоСтрок();
		
		ОбщаяСуммаДокумента = ТаблицаОснования.Итог("Сумма");
	    Сумма0Стр    = 0;
	    СуммаНДС0Стр = 0;
	    СуммаНП0Стр  = 0;
	
		Для Сч = 1 По ВсегоСтрок Цикл
			СуммыПоУчету.НоваяСтрока();
		КонецЦикла;
		
		РегистрКнигиПродаж = СоздатьОбъект("Регистр.КнигаПродаж");
		Если РегистрКнигиПродаж.ВыбратьДвиженияДокумента(Докум.ДокОснование) = 1 Тогда
			Пока РегистрКнигиПродаж.ПолучитьДвижение() = 1 Цикл
				Если РегистрКнигиПродаж.Приход = 1 Тогда
					Если РегистрКнигиПродаж.НомерСтроки() = 0 Тогда
					    Сумма0Стр    = Сумма0Стр    + РегистрКнигиПродаж.СуммаРуб;
					    СуммаНДС0Стр = СуммаНДС0Стр + РегистрКнигиПродаж.СуммаНДС;
					    СуммаНП0Стр  = СуммаНП0Стр  + РегистрКнигиПродаж.СуммаНП;
						
					Иначе
						СуммыПоУчету.УстановитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаПоУчету", РегистрКнигиПродаж.СуммаРуб + 
						                                СуммыПоУчету.ПолучитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаПоУчету"));			
						СуммыПоУчету.УстановитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаНДСПоУчету", РегистрКнигиПродаж.СуммаНДС + 
						                                СуммыПоУчету.ПолучитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаНДСПоУчету"));			
						СуммыПоУчету.УстановитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаНППоУчету", РегистрКнигиПродаж.СуммаНП + 
						                                СуммыПоУчету.ПолучитьЗначение(РегистрКнигиПродаж.НомерСтроки(), "СуммаНППоУчету"));			
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОснования.ВыбратьСтроки();
		
		Пока ТаблицаОснования.ПолучитьСтроку() = 1 Цикл
	
			СуммаПеч    = СуммыПоУчету.ПолучитьЗначение(ТаблицаОснования.НомерСтроки, "СуммаПоУчету");
			СуммаНДСПеч = СуммыПоУчету.ПолучитьЗначение(ТаблицаОснования.НомерСтроки, "СуммаНДСПоУчету");
			СуммаНППеч  = СуммыПоУчету.ПолучитьЗначение(ТаблицаОснования.НомерСтроки, "СуммаНППоУчету");
			// распределяем общие суммы по строкам документа
			Если ОбщаяСуммаДокумента <> 0 Тогда
				СуммаПеч    = СуммаПеч    + Сумма0Стр * ТаблицаОснования.Сумма / ОбщаяСуммаДокумента;
				СуммаНДСПеч = СуммаНДСПеч + СуммаНДС0Стр * ТаблицаОснования.Сумма / ОбщаяСуммаДокумента;
				СуммаНППеч  = СуммаНППеч  + СуммаНП0Стр * ТаблицаОснования.Сумма / ОбщаяСуммаДокумента;
			КонецЕсли;
		
  			Если глЕстьРеквизитШапки("СуммаВклНДС", Докум.ДокОснование.Вид()) = 1 Тогда
				Если Докум.ДокОснование.СуммаВклНДС = 0 Тогда
	            	СуммаПеч = СуммаПеч - СуммаНДСПеч;
				КонецЕсли;
			КонецЕсли;
			
			Если глЕстьРеквизитШапки("СуммаВклНП", Докум.ДокОснование.Вид()) = 1 Тогда
				Если Докум.ДокОснование.СуммаВклНП = 0 Тогда
	            	СуммаПеч = СуммаПеч - СуммаНППеч;
				КонецЕсли;
			КонецЕсли;
			
	        ТаблицаОснования.Сумма = СуммаПеч;
            ТаблицаОснования.СуммаНДС = СуммаНДСПеч;
            ТаблицаОснования.СуммаНП = СуммаНППеч;
			
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры // СкорректироватьТаблицуОснования()

//******************************************************************************
// ПодготовитьМнЧосн(Докум, МнЧ, Итоги, ФорматКоличества, РегистрУчета)
//
// Параметры:
//  Докум            - контекст выводимого документа (СФ),
//  МнЧ              - таблица значений спецификации документа, 
//  Итоги            - список значений для итогов по документу,  
//  ФорматКоличества - строка представления формата количества 
//                     "Ч10.3" - если встречается дробное количество,
//                     "Ч6.0"  - если количество только целое.
//
// Возвращаемое значение:
//  "пустую строку" - если таблица подготовлена, или строку с описанием ошибки.
//
// Описание:
//  формирует таблицу значений из табличной части документа основания
//
Функция ПодготовитьМнЧосн(Докум, МнЧ, Итоги, ФорматКоличества, РегистрУчета)
	
	Перем ТаблицаГТД;
	Перем РегПартии;
	
	ТаблицаГТД = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаГТД.НоваяКолонка("Номенклатура");
	ТаблицаГТД.НоваяКолонка("СтранаПроисхождения");
	ТаблицаГТД.НоваяКолонка("ГТД");
	ТаблицаГТД.НоваяКолонка("Количество");  //в базовых единицах
	
	КолвоГТДТов = СоздатьОбъект("СписокЗначений");
	
	// Переберем все партии, которые были списаны документом - основанием. 
	// Если в партии были выбраны страна и ГТД, их следует перенести в СФ
	РегПартии = СоздатьОбъект("Регистр." + РегистрУчета);		
	РегПартии.ВыбратьДвиженияДокумента(Докум.ДокОснование);
	
	Пока РегПартии.ПолучитьДвижение() = 1 Цикл
		
		Если (РегПартии.Расход = 1) 
		и    (РегПартии.Партия.Выбран()=1)
		Тогда
			ВремСтрана 	= РегПартии.Партия.СтранаПроисхождения;
			ВремГТД		= РегПартии.Партия.ГТД;
			
			Если (ПустоеЗначение(ВремСтрана) = 0)
			 или (ПустоеЗначение(ВремГТД   ) = 0)
			Тогда
				ТаблицаГТД.НоваяСтрока();
				ТаблицаГТД.Номенклатура        = РегПартии.Номенклатура;
				ТаблицаГТД.СтранаПроисхождения = ВремСтрана;
				ТаблицаГТД.ГТД                 = ВремГТД;
				ТаблицаГТД.Количество          = РегПартии.Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СоздатьСтруктуру(МнЧ);
	
	// создадим таблицу документа
	ТаблицаОснования = СоздатьОбъект("ТаблицаЗначений");
	Докум.ДокОснование.ВыгрузитьТабличнуюЧасть(ТаблицаОснования);
	
	// теперь у нас есть таблица, в которой собраны строки документа - основания в нужной валюте
	// надо проставить ГТД
	//КАГ 06.07.09
	ВидОсн = Докум.ДокОснование.Вид();
	Если ВидОсн = "Реализация" Тогда
		флСкидкаРеализация = Докум.ДокОснование.ВыданоСоСкидкой;
	КонецЕсли;
	//--	
	Если ВидОсн = "ВводОстатковПокупателя" Тогда
		ТаблицаОснования.НоваяКолонка("Сумма");
		ТаблицаОснования.НоваяКолонка("Номенклатура");
	Иначе
		Если глЕстьРеквизитМнЧ("СуммаНП", ВидОсн) = 0 Тогда
			ТаблицаОснования.НоваяКолонка("СуммаНП");
			ОснСуммаВклНП = 0;
		Иначе
			ОснСуммаВклНП = Докум.ДокОснование.СуммаВклНП;
		КонецЕсли;
			
		Если глЕстьРеквизитМнЧ("СуммаНДС", ВидОсн) = 0 Тогда
			ТаблицаОснования.НоваяКолонка("СуммаНДС");
			ОснСуммаВклНДС = 0;
		Иначе
			ОснСуммаВклНДС = Докум.ДокОснование.СуммаВклНДС;
		КонецЕсли;
	КонецЕсли;
		
	Если глЕстьРеквизитШапки("КодОперации", ВидОсн) = 1 Тогда
		БратьСуммыИзУчета = глБратьСуммыИзУчета(Докум.ДатаДок, Докум.ДокОснование.КодОперации);
	Иначе
		БратьСуммыИзУчета = глБратьСуммыИзУчета(Докум.ДатаДок);
	КонецЕсли;
	
	Если БратьСуммыИзУчета = 1 Тогда
		СкорректироватьТаблицуОснования(Докум, ТаблицаОснования, ВидОсн);
	КонецЕсли;
	
	ИтогСумма    = 0;
	ВывелиСтроку = 0;
	
	РаспредГТД = СоздатьОбъект("ТаблицаЗначений");
	РаспредГТД.НоваяКолонка("Колво", "Число", 14, 3);
	РаспредГТД.НоваяКолонка("Страна");
	РаспредГТД.НоваяКолонка("Номер");
	
	ТаблицаОснования . ВыбратьСтроки();
	Пока ТаблицаОснования.ПолучитьСтроку()=1 Цикл
		
		Если ВидОсн = "ВводОстатковПокупателя" Тогда
			ТаблицаОснования.Сумма = ТаблицаОснования.СуммаРуб - ТаблицаОснования.СуммаНДС - ТаблицаОснования.СуммаНП;
		Иначе
			Если ОснСуммаВклНП = 1 Тогда
				ТаблицаОснования.Сумма = ТаблицаОснования.Сумма - ТаблицаОснования.СуммаНП;
			КонецЕсли;
			
			Если ОснСуммаВклНДС = 1 Тогда
				ТаблицаОснования.Сумма = ТаблицаОснования.Сумма - ТаблицаОснования.СуммаНДС;
			КонецЕсли;
		
		КонецЕсли;
		
		МнЧ.НоваяСтрока();
		
		МнЧ.СтранаН      = Прочерк;
		МнЧ.НомерГТД     = Прочерк;
		МнЧ.АкцизЦена    = КороткийПрочерк;
		
		Если ПустоеЗначение(ТаблицаОснования.Сумма) = 1 Тогда
			МнЧ.Сумма		= Прочерк;
			МнЧ.СтавкаНДС	= "Без НДС";
			МнЧ.СуммаНДС	= КороткийПрочерк;
			МнЧ.СуммаНП		= КороткийПрочерк;
		Иначе
			//КАГ 06.07.09
			Если ВидОсн = "Реализация" Тогда
				ВсегоСНДС        = ТаблицаОснования.Сумма+?(флСкидкаРеализация = 0,ТаблицаОснования.СуммаСкидки,0)+ТаблицаОснования.СуммаНДС;
		        СуммаНДС         = (ВсегоСНДС/(118))*18;
				Сумма        	 = ВсегоСНДС-СуммаНДС;
				Цена             = Сумма/ТаблицаОснования.Количество;
			КонецЕсли;
			Если ВидОсн = "Реализация" Тогда
				МнЧ.Сумма        = глФРМ(?(флСкидкаРеализация = 0,Сумма,ТаблицаОснования.Сумма));
			Иначе
				МнЧ.Сумма        = глФРМ(ТаблицаОснования.Сумма);
			КонецЕсли;
			МнЧ.СтавкаНДС    = ?(ТаблицаОснования.СтавкаНДС = Перечисление.СтавкиНДС.безНДС, "Без НДС", Строка(ТаблицаОснования.СтавкаНДС));
			Если ВидОсн = "Реализация" Тогда
				МнЧ.СуммаНДС     = ?(ТаблицаОснования.СтавкаНДС = Перечисление.СтавкиНДС.безНДС, КороткийПрочерк, глФРМ(?(флСкидкаРеализация = 0,СуммаНДС,ТаблицаОснования.СуммаНДС)));
			Иначе
				МнЧ.СуммаНДС     = ?(ТаблицаОснования.СтавкаНДС = Перечисление.СтавкиНДС.безНДС, КороткийПрочерк, глФРМ(ТаблицаОснования.СуммаНДС));
			КонецЕсли;
			МнЧ.СуммаНП      = глФРМ(ТаблицаОснования.СуммаНП);  
		КонецЕсли;
		
		Если ВидОсн = "РеализацияПрочее" Тогда
		    МнЧ.Номенклатура = ТаблицаОснования.Содержание;
			ВсегоКол         = 0;
			МнЧ.Количество   = ТаблицаОснования.Количество;
			ТекЕдиница       = "";
			
			Если (Докум.ДокОснование.УчитыватьНДС = 1)
			   и (Докум.ДокОснование.СуммаВклНДС  = 0) Тогда
				МнЧ.Цена 	 = ТаблицаОснования.Цена; 	
			Иначе
				МнЧ.Цена         = глФРМ(?(ТаблицаОснования.Количество = 0, 0, ТаблицаОснования.Сумма/ТаблицаОснования.Количество));
			КонецЕсли;

		ИначеЕсли ВидОсн = "ВводОстатковПокупателя" Тогда
			МнЧ.Номенклатура = ТаблицаОснования.ВидДолга;
			МнЧ.Количество   = 0;
			ТекЕдиница       = "";
			
			МнЧ.Цена         = "";
		Иначе
			МнЧ.Номенклатура = ТаблицаОснования.Номенклатура.ПолнНаименование;// + ?(Константа.ПоказыватьАртикул = 1, " " + ТаблицаОснования.Номенклатура.Артикул, ""); 
			МнЧ.Количество   = ТаблицаОснования.Количество;
			ТекЕдиница       = ТаблицаОснования.Единица;
			ВсегоКол 	     = ТаблицаОснования.Количество;

			Если (Докум.ДокОснование.УчитыватьНДС = 1)
			   и (Докум.ДокОснование.СуммаВклНДС  = 0) Тогда
				МнЧ.Цена 	 = ТаблицаОснования.Цена; 	
			Иначе
				Если ВидОсн = "Реализация" Тогда
				    МнЧ.Цена         = глФРМ(?(ТаблицаОснования.Количество = 0, 0, ?(флСкидкаРеализация = 0,Цена,ТаблицаОснования.Сумма/ТаблицаОснования.Количество)));
				Иначе
					МнЧ.Цена         = глФРМ(?(ТаблицаОснования.Количество = 0, 0, ТаблицаОснования.Сумма/ТаблицаОснования.Количество));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		МнЧ.Единица      = ТекЕдиница;
		//КАГ 06.07.09
		Если ВидОсн = "Реализация" Тогда
			МнЧ.ВсегоСНДС        = глФРМ(?(флСкидкаРеализация = 0,ВсегоСНДС,ТаблицаОснования.Сумма+ТаблицаОснования.СуммаНДС));
		Иначе
			МнЧ.ВсегоСНДС        = глФРМ(ТаблицаОснования.Сумма+ТаблицаОснования.СуммаНДС);
		КонецЕсли;
				
		Если (МнЧ.Количество - Цел(МнЧ.Количество)) > 0 Тогда
		    ФорматКоличества = "Ч14.3";
		КонецЕсли;
		
		НомСтр		= 0;
		ОстКолво	= ВсегоКол;
		РаспредГТД.УдалитьСтроки();
		
		Если (ВидОсн <> "РеализацияПрочее")
		   и (ВидОсн <> "ВводОстатковПокупателя")
		Тогда
			
			ТекКоэфф	= ТаблицаОснования.Коэффициент;
			ОстКолво	= ОстКолво * ТекКоэфф;

			Пока (ОстКолво > 0) 
			и    (ТаблицаГТД.НайтиЗначение(ТаблицаОснования.Номенклатура, НомСтр, "Номенклатура") <> 0)
			Цикл
				
				ТаблицаГТД.ПолучитьСтрокуПоНомеру(НомСтр);
				
				СписКолво	= Мин(ОстКолво, ТаблицаГТД.Количество);
				
				РаспредГТД.НоваяСтрока();
				РаспредГТД.Колво  = ?(ТекКоэфф = 0, СписКолво, СписКолво / ТекКоэфф);
				РаспредГТД.Номер  = ТаблицаГТД.ГТД;
				РаспредГТД.Страна = ТаблицаГТД.СтранаПроисхождения;
				
				ТаблицаГТД.Количество = ТаблицаГТД.Количество - СписКолво;
				Если ТаблицаГТД.Количество <= 0 Тогда
					// если по ГТД все списали, то удаляем строку
					ТаблицаГТД.УдалитьСтроку();
				КонецЕсли;
				
				ОстКолво = ОстКолво - СписКолво;
				НомСтр   = 0;
			КонецЦикла;
			
			Если (ОстКолво > 0)
			   и (ОстКолво < (ВсегоКол * ТекКоэфф))
			Тогда
				// только часть товара распределилась по ГТД
				РаспредГТД.НоваяСтрока();
				РаспредГТД.Колво  = ?(ТекКоэфф <> 0, ОстКолво / ТекКоэфф, ОстКолво);
				РаспредГТД.Номер  = Прочерк;
				РаспредГТД.Страна = Прочерк;
			КонецЕсли;
			
			РаспредГТД.Свернуть("Номер, Страна", "Колво");
			
			Если РаспредГТД.КоличествоСтрок() = 1 Тогда
				
				// одна строка в таблице. Товара с номером ГТД и страной в одной строке
				РаспредГТД.ПолучитьСтрокуПоНомеру(1);
				МнЧ.НомерГТД    = РаспредГТД.Номер;
				МнЧ.СтранаН     = РаспредГТД.Страна;
			Иначе
				
				РаспредГТД.ВыбратьСтроки();
				Пока РаспредГТД.ПолучитьСтроку() = 1 Цикл
					
				//	МнЧ.НоваяСтрока();
				//	МнЧ.Номенклатура = "     в т.ч.";
				//	МнЧ.Цена		 = Прочерк;
				//	МнЧ.Сумма		 = Прочерк;
				//	МнЧ.СтавкаНДС	 = КороткийПрочерк;
				//	МнЧ.СуммаНДС	 = КороткийПрочерк;
				//	МнЧ.СуммаНП		 = КороткийПрочерк;
				//	МнЧ.ВсегоСНДС	 = Прочерк;
					
				//	МнЧ.Единица     = ТекЕдиница;
				//	МнЧ.Количество  = РаспредГТД.Колво;
					МнЧ.НомерГТД    = РаспредГТД.Номер;
					МнЧ.СтранаН     = РаспредГТД.Страна;
					Прервать;
				//	Если (МнЧ.Количество - Цел(МнЧ.Количество)) > 0 Тогда
				//	    ФорматКоличества = "Ч14.3";
				//	КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;// по строкам таблицы основания
	
	Если ПустоеЗначение(ФорматКоличества) = 1 Тогда
	    ФорматКоличества	= "Ч010.0";
	КонецЕсли;
	
	Итоги = СоздатьОбъект("СписокЗначений");
	//КАГ 06.07.09
	Если ВидОсн = "Реализация" Тогда
		Итоги.ДобавитьЗначение(?(флСкидкаРеализация = 0,ТаблицаОснования.Итог("СуммаБезСкидки")		,ТаблицаОснования.Итог("Сумма") + ТаблицаОснования.Итог("СуммаНДС"))	, "ИтогВсегоСНДС");
		Итоги.ДобавитьЗначение(?(флСкидкаРеализация = 0,ТаблицаОснования.Итог("СуммаНДСбезСкидки")	,ТаблицаОснования.Итог("СуммаНДС"))	, "ИтогСуммаНДС");
	Иначе
		Итоги.ДобавитьЗначение(ТаблицаОснования.Итог("Сумма") + ТаблицаОснования.Итог("СуммаНДС"), "ИтогВсегоСНДС");
	    Итоги.ДобавитьЗначение(ТаблицаОснования.Итог("СуммаНДС"), "ИтогСуммаНДС");
	КонецЕсли;
	
	Итоги.ДобавитьЗначение(ТаблицаОснования.Итог("СуммаНП"),  "ИтогСуммаНП");

	Возврат "";
	
КонецФункции // ПодготовитьМнЧосн()
        
//******************************************************************************
// ПодготовитьПоКнигеПродаж(Докум, МнЧ, Итоги, ФорматКоличества, ИмяНоменклатуры)
//
// Параметры:
//  Докум            - контекст выводимого документа (СФ),
//  МнЧ              - таблица значений спецификации документа, 
//  Итоги            - список значений для итогов по документу,  
//  ФорматКоличества - строка представления формата количества 
//                     "Ч10.3" - если встречается дробное количество,
//                     "Ч6.0"  - если количество только целое.
//  ИмяНоменклатуры  - строка, которая будет присвоена ячейкам результирующей таблицы
//                     в колонке Номенклатура, например "Комиссионное вознаграждение" или
//                     "Корректировка начисленного НДС" .
//
// Возвращаемое значение:
//  "пустую строку" - если таблица подготовлена, или строку с описанием ошибки.
//
// Описание:
//  формирует таблицу значений для печати. Значения для таблицы беруться из 
//  движений документа  по регистру книга продаж.
//
Функция ПодготовитьПоКнигеПродаж(Докум, МнЧ, Итоги, ФорматКоличества, ИмяНоменклатуры)
	
	Перем РегКнигаПродаж;
	
	РегКнигаПродаж = СоздатьОбъект("Регистр.КнигаПродаж");
	
	СоздатьСтруктуру(МнЧ);
	
	ИтогСумма     = 0;
	ИтогСуммаНДС  = 0;
	ИтогВсегоСНДС = 0;
	ИтогСуммаНП   = 0;
	
	РегКнигаПродаж.ВыбратьДвиженияДокумента(Докум.ДокОснование);
	Пока РегКнигаПродаж.ПолучитьДвижение() = 1 Цикл
		Если РегКнигаПродаж.Приход = 1 Тогда
		    
			Поз = 0;
			ВремИтогСумма = РегКнигаПродаж.СуммаРуб - РегКнигаПродаж.СуммаНДС - РегКнигаПродаж.СуммаНП;
			
			Если МнЧ.НайтиЗначение(РегКнигаПродаж.СтавкаНДС, Поз, "СтавкаНДС") = 0 Тогда
			    МнЧ.НоваяСтрока();
				МнЧ.СтранаН      = Прочерк;
				МнЧ.НомерГТД     = Прочерк;
				МнЧ.Номенклатура = ИмяНоменклатуры;
				МнЧ.Единица      = "";
				МнЧ.Количество   = "";
				МнЧ.СтавкаНДС    = РегКнигаПродаж.СтавкаНДС;
				МнЧ.СуммаНДС     = РегКнигаПродаж.СуммаНДС;
				МнЧ.СуммаНП      = РегКнигаПродаж.СуммаНП;
				МнЧ.Сумма        = ВремИтогСумма;
				МнЧ.ВсегоСНДС    = РегКнигаПродаж.СуммаРуб;
				
				МнЧ.Цена         = "";
			Иначе
				МнЧ.ПолучитьСтрокуПоНомеру(Поз);
				МнЧ.СуммаНДС     = МнЧ.СуммаНДС  + РегКнигаПродаж.СуммаНДС;
				МнЧ.СуммаНП      = МнЧ.СуммаНП   + РегКнигаПродаж.СуммаНП;
				МнЧ.Сумма        = МнЧ.Сумма     + ВремИтогСумма;
				МнЧ.ВсегоСНДС    = МнЧ.ВсегоСНДС + РегКнигаПродаж.СуммаРуб;
			КонецЕсли;
			
			
			ИтогСуммаНП   = ИтогСуммаНП   + РегКнигаПродаж.СуммаНП;
			ИтогСумма     = ИтогСумма     + ВремИтогСумма;
			ИтогВсегоСНДС = ИтогВсегоСНДС + РегКнигаПродаж.СуммаРуб;
			
		КонецЕсли;
	КонецЦикла;
	                                 
	Итоги = СоздатьОбъект("СписокЗначений");
	//Итоги.ДобавитьЗначение(ИтогСумма	, "ИтогСумма");
	Итоги.ДобавитьЗначение(ИтогСуммаНДС	, "ИтогСуммаНДС");
	Итоги.ДобавитьЗначение(ИтогВсегоСНДС, "ИтогВсегоСНДС");
	Итоги.ДобавитьЗначение(ИтогСуммаНП	, "ИтогСуммаНП");

	Возврат "";
	
КонецФункции // ПодготовитьПоКнигеПродаж()

//******************************************************************************
// ПодготовитьМнЧ(Докум, МнЧ, Итоги, ФорматКоличества)
//
// Параметры:
//  Докум            - контекст выводимого документа (СФ),
//  МнЧ              - таблица значений спецификации документа, 
//  Итоги            - список значений для итогов по документу,  
//  ФорматКоличества - строка представления формата количества 
//                     "Ч10.3" - если встречается дробное количество,
//                     "Ч6.0"  - если количество только целое.
//
// Возвращаемое значение:
//  "пустую строку" - если таблица подготовлена, или строку с описанием ошибки.
//
// Описание:
//  формирует таблицу значений для печати. Значения для таблицы беруться из 
//  самого документа.
//
Функция ПодготовитьМнЧ(Докум, МнЧ, Итоги, ФорматКоличества)
	
	Итоги = СоздатьОбъект("СписокЗначений");
	СоздатьСтруктуру(МнЧ);
	
	ИтогСумма          = 0;
	
	Докум.ВыбратьСтроки();
	Пока Докум.ПолучитьСтроку() = 1 Цикл
		
		МнЧ.НоваяСтрока();
		
		ВывелиСтроку     = 1;
		МнЧ.Номенклатура = СокрП(Докум.Наименование);
		МнЧ.Единица      = Докум.Единица;
		МнЧ.Количество   = Докум.Количество;
		МнЧ.АкцизЦена    = КороткийПрочерк;
		
		Если ПустоеЗначение(Докум.Сумма) = 1 Тогда
			МнЧ.Цена		= Прочерк;
			МнЧ.Сумма		= Прочерк;
			МнЧ.СтавкаНДС	= "Без НДС";
			МнЧ.СуммаНДС	= КороткийПрочерк;
			МнЧ.СуммаНП		= КороткийПрочерк;
			МнЧ.ВсегоСНДС	= Прочерк;
		ИначеЕсли (Докум.СтавкаНДС = Перечисление.СтавкиНДС.НДС20_120) или (Докум.СтавкаНДС = Перечисление.СтавкиНДС.НДС10_110)
		      или (Докум.СтавкаНДС = Перечисление.СтавкиНДС.НДС18_118)Тогда
			МнЧ.Сумма		= глФРМ(Докум.Сумма - Докум.СуммаНП);
			ИтогСумма		= ИтогСумма + Докум.Сумма - Докум.СуммаНП;
			МнЧ.Цена		= ?(Докум.Количество = 0, 0, глФРМ(Докум.Цена - Докум.СуммаНП / Докум.Количество));
			МнЧ.СтавкаНДС	= Строка(Докум.СтавкаНДС);
			МнЧ.СуммаНДС	= глФРМ(Докум.СуммаНДС);
			МнЧ.ВсегоСНДС	= глФРМ(Докум.Сумма - Докум.СуммаНП);                                                 
		Иначе
			МнЧ.Сумма		= глФРМ(Докум.Сумма - Докум.СуммаНДС - Докум.СуммаНП);
			ИтогСумма		= ИтогСумма + Докум.Сумма - Докум.СуммаНДС - Докум.СуммаНП;
			МнЧ.Цена		= ?(Докум.Количество = 0, 0, глФРМ(Докум.Цена - (Докум.СуммаНДС + Докум.СуммаНП) / Докум.Количество));
			МнЧ.СтавкаНДС	= ?(Докум.СтавкаНДС = Перечисление.СтавкиНДС.безНДС, "Без НДС", Строка(Докум.СтавкаНДС));
			МнЧ.СуммаНДС	= ?(Докум.СтавкаНДС = Перечисление.СтавкиНДС.безНДС, КороткийПрочерк, глФРМ(Докум.СуммаНДС));
			МнЧ.ВсегоСНДС	= глФРМ(Докум.Сумма - Докум.СуммаНП);                                                 
		КонецЕсли;
		
		Если ПустоеЗначение(Докум.СтранаПроисхождения)=1 Тогда
			МнЧ.СтранаН		= "";
			
			//Если не указал страну, и указал Номер ГТД, то зачем-то это было нужно
			Если ПустаяСтрока(Докум.ГТД) = 1 Тогда        
				МнЧ.НомерГТД	= Прочерк;
			Иначе
				МнЧ.НомерГТД	= Докум.ГТД;
			КонецЕсли;
		Иначе
			МнЧ.СтранаН	= Докум.СтранаПроисхождения;
			// Если номер пустой, и указана страна, то позволяем потом вписать номер ГТД 
			// в напечатанном документе руками
			МнЧ.НомерГТД	= Докум.ГТД;
		КонецЕсли;
	
		Если Докум.Количество - Цел(Докум.Количество) > 0 Тогда
			ФорматКоличества	= "Ч14.3";
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустоеЗначение(ФорматКоличества) = 1 Тогда
	    ФорматКоличества	= "Ч10.0";
	КонецЕсли;
	
	//Итоги.ДобавитьЗначение(глФРМ(ИтогСумма), "ИтогСумма");
	Итоги.ДобавитьЗначение(Докум.Итог("СуммаНДС"), "ИтогСуммаНДС");
	Итоги.ДобавитьЗначение(Докум.Итог("Сумма")-Докум.Итог("СуммаНП"), "ИтогВсегоСНДС");
	Итоги.ДобавитьЗначение(Докум.Итог("СуммаНП"), "ИтогСуммаНП");

	Возврат "";
	
КонецФункции // ПодготовитьМнЧ()

//******************************************************************************
// Печать(Докум, Устройство=0, КолвоКопий=1)
//
// Параметры:
//  Докум      - контекст выводимого документа (СФ), 
//  Устройство - если 0, то вывод на экран, иначе - на принтер,
//               необязателен, по умолчанию - на экран,
//  КолвоКопий - количество копий, по умолчанию - 1.
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Процедура печати документа (СФ). 
//
Процедура Печать(Докум, Устройство=0, КолвоКопий=1)
	
	Перем МнЧ, Итоги, ФорматКоличества;
	Перем ТекстВал;
	Перем РеквШапки;
	
	ИсхТабл = СоздатьОбъект("Таблица");
	ПодготовитьРеквизитыШапки(Докум, РеквШапки);
	
	Если (Докум.КоличествоСтрок() = 0) И (ПустоеЗначение(Докум.ДокОснование) = 0) Тогда
		ВидОсн = Докум.ДокОснование.Вид();
		
		Если ВидОсн = "ОтчетКомитенту" Тогда
            ПодготовитьПоКнигеПродаж(Докум, МнЧ, Итоги, ФорматКоличества, "Комиссионное вознаграждение");
			ПечВалюта = глРубли;
		ИначеЕсли ВидОсн = "ЗакрытиеМесяца" Тогда
            ПодготовитьПоКнигеПродаж(Докум, МнЧ, Итоги, ФорматКоличества, "Корректировка начисленного НДС");
			ПечВалюта = глРубли;
		ИначеЕсли ВидОсн = "ВводОстатковПокупателя" Тогда
			ПодготовитьМнЧосн(Докум, МнЧ, Итоги, ФорматКоличества, "ПартииНаличие");
			ПечВалюта = глРубли;
		ИначеЕсли ВидОсн = "ОтчетКомиссионера" Тогда
			ПодготовитьМнЧосн(Докум, МнЧ, Итоги, ФорматКоличества, "ПартииОтданные");
			ПечВалюта = глРубли;
		ИначеЕсли (ВидОсн = "ПКО") ИЛИ (ВидОсн = "КорректировкаДолга") Тогда
			ПодготовитьМнЧ(Докум, МнЧ, Итоги, ФорматКоличества);
			ПечВалюта = Докум.Валюта;
		Иначе
		    // есть основание и пустая табличная часть
			ПодготовитьМнЧосн(Докум, МнЧ, Итоги, ФорматКоличества, "ПартииНаличие");
			ПечВалюта = Докум.ДокОснование.Валюта;
		КонецЕсли;
	Иначе
		ПодготовитьМнЧ(Докум, МнЧ, Итоги, ФорматКоличества);
		ПечВалюта = Докум.Валюта;
	КонецЕсли;
	
	ИсхТабл.ВывестиСекцию("Заголовок");
	НачПовт = ИсхТабл.ВысотаСекции("Заголовок");
	ИсхТабл.ВывестиСекцию("ШапкаТаблицы");
	КонПовт = НачПовт + ИсхТабл.ВысотаСекции("ШапкаТаблицы");
	
	// повторим шапку таблицы на каждой странице
	ИсхТабл.ПовторятьПриПечатиСтроки(НачПовт + 1, КонПовт);
	
	МнЧ.ВыбратьСтроки();
	Пока МнЧ.ПолучитьСтроку() = 1 Цикл
		ИсхТабл.ВывестиСекцию("Строка");
	КонецЦикла;
	
	ИтогСуммаНП = Итоги.Получить("ИтогСуммаНП");
	Если ИтогСуммаНП = 0 Тогда
	    ПечИтогНП	= "";
	Иначе
		ПечИтогНП	= "Сумма налога с продаж: " + глФРМ(ИтогСуммаНП, ПечВалюта);
	КонецЕсли;

	// Индивидуальный предприниматель
	//Если Докум.Фирма.ЮрЛицо.ИндивидуальныйПредприниматель = 1 Тогда
	//    ПредпринимательРеквизитыСвидетельства = Шаблон("№ [Докум.Фирма.ЮрЛицо.СвидетельствоСерияНомер] от [Докум.Фирма.ЮрЛицо.СвидетельствоДатаВыдачи] г.");
	//	ПредпринимательРасшифровка            = Шаблон("/[Докум.Фирма.ЮрЛицо.Руководитель.Получить(Докум.ДатаДок)]/");
	//	РуководительРасшифровка               = "";
	//	ГлБухгалтерРасшифровка                = "";
	//Иначе
		РуководительРасшифровка               = Шаблон("/[Докум.Фирма.ЮрЛицо.Руководитель.Получить(Докум.ДатаДок)]/");
		ГлБухгалтерРасшифровка                = Шаблон("/[Докум.Фирма.ЮрЛицо.ГлБухгалтер.Получить(Докум.ДатаДок)]/");
	    ПредпринимательРеквизитыСвидетельства = "";
		ПредпринимательРасшифровка            = "";
	//КонецЕсли;
    
	ИсхТабл.ВывестиСекцию("Подвал1");   
	 
	//Валерий МЭТР
	Если Доверенность <> "" Тогда
		ИсхТабл.ВывестиСекцию("Подвал_Довер"); 
	КонецЕсли;
	
	ИсхТабл.ВывестиСекцию("Подвал2");
	
	Если Устройство = 0 Тогда
		ИсхТабл.Опции(0, 0, 0, 0, "ДляСчетаФактурыВыданного", "ДляСчетаФактурыВыданного");

		Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
			ИсхТабл.Защита(1);
		Иначе
			ИсхТабл.Защита(0);
		КонецЕсли;
		ИсхТабл.ТолькоПросмотр(1);

		ИсхТабл.Показать(глНазваниеДокументаВжурнале(Докум),"");  
	Иначе     
		ИсхТабл.ПараметрыСтраницы(,,,,,,,,,1,,);
		ИсхТабл.КоличествоЭкземпляров(КолвоКопий);
		ИсхТабл.Напечатать(0);
	КонецЕсли; 
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//  Кнопка "Печать" 
//
// Описание:
//  Выполняет проверку заполнения реквизитов диалога, вызывает процедуру Печать
//
Процедура ПоКнопкеПечать()
	
	Перем ПечДок;
	
	ПечДок = ?(ПустоеЗначение(Док) = 1, Докум, Док);
	
	ТестОшибки = "";
	Если ПустоеЗначение(ПечДок) = 1 Тогда
	    ТестОшибки = "Не выбран документ!";
	ИначеЕсли ПустоеЗначение(Грузоотправитель) = 1 Тогда
	    ТестОшибки = "Не выбран грузоотправитель!";
	ИначеЕсли ПустоеЗначение(Грузополучатель) = 1 Тогда
	    ТестОшибки = "Не выбран грузополучатель!";
	КонецЕсли;
	
	Если ПустоеЗначение(ТестОшибки) = 0 Тогда
	    Предупреждение(ТестОшибки, 60);
		Возврат;
	КонецЕсли;
	
	Печать(ПечДок);
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ПустоеЗначение(Форма.Параметр) = 1 Тогда
		// не передан контекст документа
		Форма.ИспользоватьСлой("Шапка1,Подвал", 2);
	Иначе
		//Докум           = СоздатьОбъект("Документ");
		//Докум.НайтиДокумент(Форма.Параметр.Получить("Контекст"));
		Докум           = Форма.Параметр.Получить("Контекст");
		Устройство		= Форма.Параметр.Получить("Устройство");
		КолвоКопий		= Форма.Параметр.Получить("КоличествоКопий");
		Ответственный   = Форма.Параметр.Получить("Ответственный");
		Доверенность    = Форма.Параметр.Получить("Доверенность");
		Грузоотправитель= Докум.Фирма;
		Грузополучатель	= Докум.Контрагент;
		Форма.ИспользоватьСлой("Шапка2,Подвал", 2);
	
		Если Докум.Выбран() = 0 Тогда
		    Предупреждение("Не записан документ!", 60);
			Статусвозврата(0);
			Возврат;
		КонецЕсли;

	КонецЕсли;
	Форма.Грузополучатель.ВыборГруппы(0);
	Если  Устройство = 1 Тогда
		ПоКнопкеПечать();
		Статусвозврата(0);
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
Устройство	= 0;
КолвоКопий	= 1;
Прочерк = " ----- ";
КороткийПрочерк = " -- ";   
