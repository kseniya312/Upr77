
Функция НайдиЦену(Товар)
	Перем Рез;
	Состояние("Проверяем цену товара: "+сокрЛП(Товар));
	рез	= 0;
	спр	= СоздатьОбъект("Справочник.Номенклатура");
	спр2= СоздатьОбъект("Справочник.Номенклатура");
	если спр.НайтиЭлемент(Товар)=1 Тогда
		Рез	= спр.ПоследняяЦенаПрихода.Получить(ВыбКонПериода);
		КР	= спр.КодРозницы;
		
		//Поищем цену в более раннем варианте (не на дату отчёта)
		если рез=0 Тогда
			Переодик=СоздатьОбъект("Периодический");
			Переодик.ИспользоватьОбъект("ПоследняяЦенаПрихода", Спр);
			Переодик.ОбратныйПорядок(1);
			Переодик.ВыбратьЗначения();
			Цена1	= Переодик.Значение;
			Пока Переодик.ПолучитьЗначение() = 1 Цикл
				Цена 	    = Переодик.Значение;
				если цена <>0 Тогда
					Рез = цена;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		если (Рез=0) и (КР<>0) Тогда	//Попытаемся найти цену в аналогичных позициях...
			если спр2.ВыбратьЭлементыПоРеквизиту("КодРозницы",КР,0,0)=1 тогда
				промежИтог=0; промежКолво=0;
				пока спр2.ПолучитьЭлемент()=1 Цикл
					времЦена	= спр2.ПоследняяЦенаПрихода.Получить(ВыбКонПериода);
					если времЦена<>0 Тогда
						промежИтог	= промежИтог + времЦена;
						промежКолво	= промежКолво + 1;
					КонецЕсли;
				КонецЦикла;
				если промежКолво<>0 Тогда	//Мало-ли что :)
					рез = промежИтог/промежКолво;
				КонецЕсли;
			Иначе
				сообщить("		Для позиции ("+Товар+" Аналогов не найдено...");
				Рез=0;
			КонецЕсли;
		КонецЕсли;
	Иначе	//мало-ли что бывает :)
		сообщить(Товар+", не найден в базе!","!");
		Рез=0;
	КонецЕсли;
	
	Состояние("");
	Возврат Рез;	
КонецФункции


//*******************************************
// Процедура генерации запроса Сформировать.
//
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Номенклатура = Регистр.ОстаткиТМЦ.Номенклатура;
	|Склад = Регистр.ОстаткиТМЦ.Склад;
	|Количество = Регистр.ОстаткиТМЦ.Количество;
	|Функция КоличествоНачОст = НачОст(Количество);
	|Функция КоличествоПриход = Приход(Количество);
	|Функция КоличествоРасход = Расход(Количество);
	|Функция КоличествоКонОст = КонОст(Количество);
	|Группировка Номенклатура без групп;
	|Группировка Склад без групп;
	|Условие(Номенклатура в ВыбНоменклатура);
	|Условие(Склад в ВыбСклад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
              
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ,0,0);
	ТЗ.НоваяКолонка("Себест_НачОст","число",14,2);
	ТЗ.НоваяКолонка("Себест_Приход","число",14,2);
	ТЗ.НоваяКолонка("Себест_Расход","число",14,2);
	ТЗ.НоваяКолонка("Себест_КонОст","число",14,2);
	
	
	ТЗ.ВыбратьСтроки();	СтарыйТовар="";	СтараяЦена=0;
	
	пока ТЗ.ПолучитьСтроку()=1 цикл
		Если ТЗ.Номенклатура<>СтарыйТовар тогда	//Шобы не ползать в запрос лишний раз...
			себест				= НайдиЦену(ТЗ.Номенклатура);
			СтараяЦена			= себест;
		Иначе
			себест				= СтараяЦена;
		КонецЕсли;
		СтарыйТовар			= ТЗ.Номенклатура;
		если себест=0 Тогда
			Сообщить("Для позиции: "+ТЗ.Номенклатура+" не найдено закупочной цены!");
			Продолжить;
		КонецЕсли;
		//Суммы остатка или движения товара
		ТЗ.Себест_НачОст	= ТЗ.КоличествоНачОст*себест; 	
		ТЗ.Себест_Приход	= ТЗ.КоличествоПриход*себест;
		ТЗ.Себест_Расход	= ТЗ.КоличествоРасход*себест;
		ТЗ.Себест_КонОст	= ТЗ.КоличествоКонОст*себест;
	КонецЦикла;
    
	Состояние("Финишная подчистка данных...");
	//Собирём до групп - если нужно
	ТЗ.НоваяКолонка("группаТовара","Справочник.Номенклатура");
	ТЗ.ВыбратьСтроки();
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		ТЗ.группаТовара	= ТЗ.Номенклатура.Родитель;
	КонецЦикла;
	
	если флДоГрупп=1 тогда
		ТЗ.Свернуть("группаТовара, склад","Себест_НачОст, Себест_Приход, Себест_Расход, Себест_КонОст");
		ТЗ.Свернуть("","");
		если флСортировки=1 Тогда
			ТЗ.Сортировать("Склад+, группаТовара+");
		ИначеЕсли флСортировки=2 Тогда
			ТЗ.Сортировать("группаТовара+, склад+");
		КонецЕсли;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	//// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	ТЗ.ВыбратьСтроки();
	Состояние("Выводим результирующие данные...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	если флДоГрупп=1 тогда
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Таб.ВывестиСекцию("строкаГруппы");
		КонецЦикла;
	КонецЕсли;
	
	Таб.ВывестиСекцию("Итого");
	//// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");
КонецПроцедуры


