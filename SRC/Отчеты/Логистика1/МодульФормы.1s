////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
//
Перем ТекСтрокаВТаблице; // текущая строка в таблице значений  МФ

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 

// ВыбратьПоФильтру()
//
// Параметры:
//  Нет
//
// Описание:
//  Открывает обработку отбора элементов по произвольному фильтру
//
Процедура ВыбратьПоФильтру()
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

//******************************************************************************
// ПерерисовкаНазванийЗакладок
//
// Параметры:
// 	Нет
//
// Описание:
//  Добавляет "(!)" в заголовок закладки с множественным фильтром, когда этот фильтр задан
//
Функция ПерерисовкаНазванийЗакладок()      
	
	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	

//******************************************************************************
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда           
		Форма.ИспользоватьСлой("Основной");
	Иначе     
		Форма.ИспользоватьСлой("МФ");
	КонецЕсли;

КонецПроцедуры //УправлениеДиалогом()

//******************************************************************************                                                    
// РасшифровкаОбновить(Обновить)
//
// Параметры:
//  Обновить = 	1 - нажата кнопка "Обновить"
//				2 - нажата кнопка "Настройка"	
//
// Возвращаемое значение: 
//	Расшифровка (список значений)
//
// Вызывается из формул элементов диалога:
//  из таблицы, кнопки "Обновить" и "Настройка"
//
// Описание:  
//	функция для стандартного механизма кнопок ""Обновить" и "Настройка""
//  помещает значение параметра в список Расшифровка  и возвращает этот список
//
Функция РасшифровкаОбновить(Обновить)  
	
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;           
	
КонецФункции //РасшифровкаОбновить()                                            






//******************************************************************************
//******************************************************************************

//*******************************************
//	ОБРАБОТКА ТЕКУЩЕЙ ПОЗИЦИИ ТОВАРА
//	ДЛЯ ЗАПИСИ РЕЗУЛЬТАТА В СВОДНУЮ ТЗ
Процедура ОбработайПозицию(ВыбНоменклатура, ТЗ)
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Фирма = Регистр.ПартииНаличие.Фирма;
	|МОЛ = Регистр.ПартииНаличие.МОЛ;
	|Номенклатура = Регистр.ПартииНаличие.Номенклатура;
	|Партия = Регистр.ПартииНаличие.Партия;
	|Количество = Регистр.ПартииНаличие.Количество;
	|СуммаУпр = Регистр.ПартииНаличие.СуммаУпр;
	|СуммаРуб = Регистр.ПартииНаличие.СуммаРуб;
	|КодОперации = Регистр.ПартииНаличие.КодОперации;
	|ПродСтоимость = Регистр.ПартииНаличие.ПродСтоимость;
	|Выручка = Регистр.ПартииНаличие.Выручка;
	|ТекущийДокумент = Регистр.ПартииНаличие.ТекущийДокумент;
	|Функция КоличествоНачОст = НачОст(Количество);
	|Функция КоличествоПриход = Приход(Количество);
	|Функция КоличествоРасход = Расход(Количество);
	|Функция КоличествоКонОст = КонОст(Количество);
	|Функция СуммаУпрНачОст = НачОст(СуммаУпр);
	|Функция СуммаУпрПриход = Приход(СуммаУпр);
	|Функция СуммаУпрРасход = Расход(СуммаУпр);
	|Функция СуммаУпрКонОст = КонОст(СуммаУпр);
	|Функция СуммаРубНачОст = НачОст(СуммаРуб);
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Функция ПродСтоимостьСумма = Сумма(ПродСтоимость);
	|Функция ВыручкаСумма = Сумма(Выручка);
	|Условие(Номенклатура = ВыбНоменклатура);
	|Условие(МОЛ в ВыбМОЛ);
	|Условие(Фирма в ВыбФирма);
	|"//}}ЗАПРОС
	;
	
	//По какому интервалу будем работать
	инт=сокрЛП(сп_Период.ПолучитьЗначение(сп_Период.ТекущаяСтрока()));
	// Если ошибка в запросе, то выход из процедуры
	ТекстЗапроса=ТекстЗапроса+"Группировка "+инт+" все;";
	ТекстЗапроса=ТекстЗапроса+"Группировка МОЛ без групп все ВошедшиеВЗапрос;Группировка Номенклатура без групп все ВошедшиеВЗапрос;Группировка ТекущийДокумент;";
	
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		сообщить("Ошибка в обработке запроса","!");
		Возврат;
	КонецЕсли;
	
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Период","строка",13);
	ТЗ.НоваяКолонка("МОЛ","Справочник.ФизЛица");
	ТЗ.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
	ТЗ.НоваяКолонка("Документ","Документ");
	
	ТЗ.НоваяКолонка("КолПриход","Число",15,5);
	ТЗ.НоваяКолонка("СуммПриходУпр","Число",15,2);
	ТЗ.НоваяКолонка("СуммПриходРуб","Число",15,2);
	
	ТЗ.НоваяКолонка("КолРасход","Число",15,5);
	ТЗ.НоваяКолонка("СуммРасходУпр","Число",15,2);
	ТЗ.НоваяКолонка("СуммРасходРуб","Число",15,2);
	
	ТЗ.НоваяКолонка("КолКонОст","Число",15,5);
	ТЗ.НоваяКолонка("СуммРубКонОст","Число",15,2);
	ТЗ.НоваяКолонка("СуммУпрКонОст","Число",15,2);
	
	ТЗ.НоваяКолонка("СебестУпр","Число",15,2);
	ТЗ.НоваяКолонка("СебестРуб","Число",15,2);
	
	//Выше себестоимость - ниже продажные и колво сделок
	
	ТЗ.НоваяКолонка("ПродСтоимость","Число",15,2);	//В рублях
	ТЗ.НоваяКолонка("ПродСтоимостьУпр","Число",15,2);	//В рублях
	ТЗ.НоваяКолонка("КолвоПродаж","Число",15,2);	//Кол-во проданного товара
	ТЗ.НоваяКолонка("ЧислоПродаж","число",6);	//Кол-во сделок по реализаии
	
	//Контрольное значение
	ТЗ.НоваяКолонка("ОК","число",1);
	Пока Запрос.Группировка(1) = 1 Цикл
		Пока Запрос.Группировка(2) = 1 Цикл
			ВК=0;
			Пока Запрос.Группировка(3) = 1 Цикл
				вап= Запрос.КоличествоКонОст;	ОК=0;
				Пока Запрос.Группировка(4) = 1 Цикл
					ТЗ.НоваяСтрока();
					//Заполним общее
					Если инт="Год" Тогда
						ТЗ.Период = Запрос.Год;
					иначеесли инт="Квартал" тогда
						ТЗ.Период = Запрос.Квартал;
					иначеесли инт="Месяц" тогда
						ТЗ.Период = Запрос.Месяц;
					иначеесли инт="Неделя" тогда
						ТЗ.Период = Запрос.Неделя;
					иначеесли инт="День" тогда
						ТЗ.Период = Запрос.День;
					КонецЕсли;
					ТЗ.МОЛ			= Запрос.МОЛ;
					ТЗ.Номенклатура	= Запрос.Номенклатура;
					а				= Запрос.ТекущийДокумент;	//кэширование
					ТЗ.Документ		= а.ТекущийДокумент();
					Если (а.Вид()="Реализация") или (а.Вид()="РасходнаяНакладнаяРозница") Тогда	//Имеет смысл Продажная цена
						ТЗ.ПродСтоимость	= Запрос.ПродСтоимостьСумма;
						ТЗ.КолвоПродаж		= Запрос.КоличествоРасход;
						ТЗ.ЧислоПродаж	= 1;
						ТЗ.ПродСтоимостьУпр	= глПересчет(ТЗ.ПродСтоимость,глРубли,а.ДатаДок,глДоллары,а.ДатаДок);
					КонецЕсли;
					
					//Заполним кол/суммы
					ТЗ.КолПриход	= Запрос.КоличествоПриход;
					ТЗ.СуммПриходУпр= Запрос.СуммаУпрПриход;
					ТЗ.СуммПриходРуб= Запрос.СуммаРубПриход;
					
					ТЗ.КолРасход	= Запрос.КоличествоРасход;
					ТЗ.СуммРасходУпр= Запрос.СуммаУпрРасход;
					ТЗ.СуммРасходРуб= Запрос.СуммаРубРасход;
					
					
					Если (ТЗ.КолПриход>0) и (ТЗ.СуммПриходУпр>0) тогда
						ТЗ.СебестУпр	= ТЗ.СуммПриходУпр/ТЗ.КолПриход;
					КонецЕсли;
					Если (ТЗ.КолПриход>0) и (ТЗ.СуммПриходРуб>0) тогда
						ТЗ.СебестРуб	= ТЗ.СуммПриходРуб/ТЗ.КолПриход;
					КонецЕсли;
					Если (ТЗ.КолРасход>0) и (ТЗ.СуммРасходУпр>0) тогда
						ТЗ.СебестУпр	= ТЗ.СуммРасходУпр/ТЗ.КолРасход;
					КонецЕсли;
					Если (ТЗ.КолРасход>0) и (ТЗ.СуммРасходРуб>0) тогда
						ТЗ.СебестРуб	= ТЗ.СуммРасходРуб/ТЗ.КолРасход;
					КонецЕсли;
					Ок=1;
					ТЗ.ОК=1;	//Контрольный флаг
				КонецЦикла;
				Если Ок<>1 Тогда	//Мы не нашли документов за отчётный период, укажем просто "нулевой"
					ТЗ.НоваяСтрока();
					//Заполним общее
					Если инт="Год" Тогда
						ТЗ.Период = Запрос.Год;
					иначеесли инт="Квартал" тогда
						ТЗ.Период = Запрос.Квартал;
					иначеесли инт="Месяц" тогда
						ТЗ.Период = Запрос.Месяц;
					иначеесли инт="Неделя" тогда
						ТЗ.Период = Запрос.Неделя;
					иначеесли инт="День" тогда
						ТЗ.Период = Запрос.День;
					КонецЕсли;
					ТЗ.МОЛ			= Запрос.МОЛ;
					ТЗ.Номенклатура	= Запрос.Номенклатура;
					ТЗ.ОК=0;
				КонецЕсли;
				ТЗ.КолКонОст=вап;	//мы добавляем лишь один раз в ТЗ общий остаток
				ВК=1;
			КонецЦикла;
			//Если ВК<>1 Тогда	//Мы не вошли в сл. цикл, просто вылетаем
			//	ТЗ.НоваяСтрока();
			//	//Заполним общее
			//	Если инт="Год" Тогда
			//		ТЗ.Период = Запрос.Год;
			//	иначеесли инт="Квартал" тогда
			//		ТЗ.Период = Запрос.Квартал;
			//	иначеесли инт="Месяц" тогда
			//		ТЗ.Период = Запрос.Месяц;
			//	иначеесли инт="Неделя" тогда
			//		ТЗ.Период = Запрос.Неделя;
			//	иначеесли инт="День" тогда
			//		ТЗ.Период = Запрос.День;
			//	КонецЕсли;
			//	ТЗ.МОЛ			= Запрос.МОЛ;
			//	ТЗ.Номенклатура	= Запрос.Номенклатура;
			//	ТЗ.ОК=0;
			//КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//Если ВК=0 тогда небыло движений
	Если ВК=1 тогда	
		//Обработаем "нулевые строки" - удалим их из ТЗ
		ТЗ.ВыбратьСтроки();
		
		состояние("Удаляем кривые строки...");
		пока ТЗ.ПолучитьСтроку()=1 цикл
			если (((ТЗ.КолПриход=0) и (ТЗ.КолРасход=0)) и (ТЗ.ОК=1)) тогда
				ТЗ.УдалитьСтроку();
			КонецЕсли;
		КонецЦикла;
		
		состояние("Рассчитываем ср.себестоимость и проставляем её во все строки, где она нулевая...");
		ТЗ.ВыбратьСтроки();
		СрЗначПериода=СоздатьОбъект("СписокЗначений");
		а=0;б=0;Ср=0;Ср1=0;
		Стар_пер=ТЗ.ПолучитьЗначение(1,1);
		
		Пока ТЗ.ПолучитьСтроку()=1 Цикл		//Находим ср. значение за период
			Если ТЗ.Период=Стар_пер Тогда
				если ТЗ.СебестРуб<>0 тогда
					а=а+1;	//Оба не могут быть!!!
					Ср=Ср+ТЗ.СебестРуб;
				КонецЕсли;
				если ТЗ.СебестУпр<>0 тогда
					б=б+1;	//Оба не могут быть!!!
					Ср1=Ср1+ТЗ.СебестУпр;
				КонецЕсли;
				ОК=0;
			иначе
				Если а<>0 Тогда
					Ср	= Ср/а;
				КонецЕсли;
				Если б<>0 Тогда
					Ср1	= Ср1/б;
				КонецЕсли;
				СрЗначПериода.ДобавитьЗначение(Ср,"Рубли");
				СрЗначПериода.ДобавитьЗначение(Ср1,"Управл.");
				а=0;б=0;Ср=0;Ср1=0;
				Стар_пер=ТЗ.Период;
				ОК=1;
			КонецЕсли;
		КонецЦикла;
		
		Если ОК=0 Тогда	//Рассчёт последней строки - типа она одна в выбраном периоде
			Если а<>0 Тогда
				Ср	= Ср/а;
			КонецЕсли;
			Если б<>0 Тогда
				Ср1	= Ср1/б;
			КонецЕсли;
			СрЗначПериода.ДобавитьЗначение(Ср,"Рубли");	
			СрЗначПериода.ДобавитьЗначение(Ср1,"Управл.");
		КонецЕсли;
		
		состояние("Сворачиваем по периодам/МОЛам/ПродСтоимости/Числу Сделок по реализации...");
		ТЗ.Свернуть("Период,МОЛ","КолПриход,КолРасход,КолКонОст,КолвоПродаж,ПродСтоимость,ПродСтоимостьУпр,ЧислоПродаж,СебестРуб,СебестУпр,СуммРубКонОст,СуммУпрКонОст");
		//	ТЗ.ВыбратьСтроку();
		состояние("Проставляем ср. себестоимость...");
		ТЗ.ВыбратьСтроки();а=2;
		СрР=СрЗначПериода.ПолучитьЗначение(1);//рубли
		СрУ=СрЗначПериода.ПолучитьЗначение(2);//УЕ
		//Если "нулевое значение, то берём из посл.цены прихода на начало периода!!!
		Если СрУ=0 Тогда
			СрУ=ВыбНоменклатура;
			СрУ=СрУ.ПоследняяЦенаПрихода.Получить(ВыбНачПериода);
			СрР=глПересчет(СрУ,глДоллары,ВыбНачПериода,глРубли,ВыбНачПериода);
			сообщить("Для позиции: "+ВыбНоменклатура+", начальная ср. цена берется, как посл.цена прихода на начало отчёта");
		КонецЕсли;
		
		Стар_пер=ТЗ.ПолучитьЗначение(1,1);
		Пока ТЗ.ПолучитьСтроку()=1 Цикл
			Если ТЗ.Период=Стар_пер Тогда
				ТЗ.СебестРуб	= СрЗначПериода.ПолучитьЗначение(а-1);
				ТЗ.СебестУпр	= СрЗначПериода.ПолучитьЗначение(а);
				ТЗ.СуммРубКонОст= ТЗ.СебестРуб*ТЗ.КолКонОст;
				ТЗ.СуммУпрКонОст= ТЗ.СебестУпр*ТЗ.КолКонОст;
				Если ТЗ.СебестРуб=0 Тогда
					ТЗ.СебестРуб=СрР;
					ТЗ.СебестУпр=СрУ;
					ТЗ.СуммРубКонОст= ТЗ.СебестРуб*ТЗ.КолКонОст;
					ТЗ.СуммУпрКонОст= ТЗ.СебестУпр*ТЗ.КолКонОст;
				иначе
					СрР=ТЗ.СебестРуб;
					СрУ=ТЗ.СебестУпр;
				КонецЕсли;
			иначе
				ТЗ.СебестРуб	= СрЗначПериода.ПолучитьЗначение(а-1);
				ТЗ.СебестУпр	= СрЗначПериода.ПолучитьЗначение(а);
				ТЗ.СуммРубКонОст= ТЗ.СебестРуб*ТЗ.КолКонОст;
				ТЗ.СуммУпрКонОст= ТЗ.СебестУпр*ТЗ.КолКонОст;
				Стар_пер=ТЗ.Период;
				Если ТЗ.СебестРуб=0 Тогда
					ТЗ.СебестРуб=СрР;
					ТЗ.СебестУпр=СрУ;
					ТЗ.СуммРубКонОст= ТЗ.СебестРуб*ТЗ.КолКонОст;
					ТЗ.СуммУпрКонОст= ТЗ.СебестУпр*ТЗ.КолКонОст;
				иначе
					СрР=ТЗ.СебестРуб;
					СрУ=ТЗ.СебестУпр;
				КонецЕсли;
				а=а+2;
			КонецЕсли;
		КонецЦикла;
		сообщить("Обработана позиция: "+ВыбНоменклатура);
	иначе
		сообщить("Обработана позиция: "+ВыбНоменклатура+", для неё небыло найдено движений. Игнорируется","!");
	КонецЕсли;
КонецПроцедуры

//  			17/11/2005
//	ТУТ МЫ СОБИРАЕМ ВСЕ ДАННЫЕ ИЗ РАЗЛИЧНЫХ 
//	ЗАПРОСОВ, ДЛЯ ФОРМИРОВАНИЯ СВОДНОЙ ТАБЛИЦЫ 
//		И ПОСЛЕДУЮЩЕГО ВЫВОДА ЕЁ НА ЭКРАН
Процедура КомпоновкаПозицийСводнойТЗ()
	ТЗ_Свод=СоздатьОбъект("ТаблицаЗначений");	//Это итоговая таблица
	ОчиститьОкноСообщений();	//Т.к. у нас есть комментарии, мы очищаем экран
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_Свод.НоваяКолонка("Период","строка",13);
	ТЗ_Свод.НоваяКолонка("МОЛ","Справочник.ФизЛица");
	ТЗ_Свод.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
	
	ТЗ_Свод.НоваяКолонка("КолПриход","Число",15,5);
	ТЗ_Свод.НоваяКолонка("КолРасход","Число",15,5);
	
	ТЗ_Свод.НоваяКолонка("КолКонОст","Число",15,5);
	ТЗ_Свод.НоваяКолонка("СуммРубКонОст","Число",15,2);
	ТЗ_Свод.НоваяКолонка("СуммУпрКонОст","Число",15,2);
	
	ТЗ_Свод.НоваяКолонка("СебестУпр","Число",15,2);
	ТЗ_Свод.НоваяКолонка("СебестРуб","Число",15,2);
	
	ТЗ_Свод.НоваяКолонка("ПродСтоимость","Число",15,2);	//В рублях
	ТЗ_Свод.НоваяКолонка("ПродСтоимостьУпр","Число",15,2);	//В УЕ
	ТЗ_Свод.НоваяКолонка("КолвоПродаж","Число",15,2);	//В рублях
	ТЗ_Свод.НоваяКолонка("ЧислоПродаж","число",6);	//Кол-во сделок по реализаии

	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были
	
	Если глМножественныйФильтрЗадан(ТаблицаМФ)=0 тогда	//Тут разбираем, откуда исходные данные
		ОбработайПозицию(ВыбТовар, ТЗ1);
		ТЗ1.ВыбратьСтроки();
		Пока ТЗ1.ПолучитьСтроку()=1 Цикл
			ТЗ_Свод.НоваяСтрока();
			ТЗ_Свод.Период			= ТЗ1.Период;
			ТЗ_Свод.МОЛ				= ТЗ1.МОЛ;
			ТЗ_Свод.Номенклатура	= ВыбТовар;			//Нам необходимо для сортировки
			ТЗ_Свод.КолПриход		= ТЗ1.КолПриход;
			ТЗ_Свод.КолРасход		= ТЗ1.КолРасход;
			ТЗ_Свод.КолКонОст		= ТЗ1.КолКонОст;
			ТЗ_Свод.СуммРубКонОст	= ТЗ1.СуммРубКонОст;
			ТЗ_Свод.СуммУпрКонОст	= ТЗ1.СуммУпрКонОст;
			ТЗ_Свод.СебестРуб		= ТЗ1.СебестРуб;
			ТЗ_Свод.СебестУпр		= ТЗ1.СебестУпр;
			ТЗ_Свод.КолвоПродаж		= ТЗ1.КолвоПродаж;
			ТЗ_Свод.ПродСтоимость	= ТЗ1.ПродСтоимость;
			ТЗ_Свод.ПродСтоимостьУпр= ТЗ1.ПродСтоимостьУпр;
			ТЗ_Свод.ЧислоПродаж		= ТЗ1.ЧислоПродаж;
		КонецЦикла;
	иначе
		ТаблицаМФ.ВыбратьСтроки();
		Пока ТаблицаМФ.ПолучитьСтроку()=1 Цикл
		    Если ТаблицаМФ.ФлВкл=2 Тогда
				Если ТаблицаМФ.Вид="Номенклатура" Тогда
					Сч = 0;
					Для Сч = 1 По СписокЭлементовМФ.РазмерСписка() Цикл
						Пров=СписокЭлементовМФ.ПолучитьЗначение(Сч);
						ТЗ1.УдалитьСтроки();
						Если Пров.ЭтоГруппа()=1 Тогда
							//Разбираем группу на товар и потом гоним в обычный цикл
							спр=СоздатьОбъект("Справочник.Номенклатура");
							спр.ИспользоватьРодителя(Пров);
							спр.ВыбратьЭлементы();
							Пока спр.ПолучитьЭлемент()=1 Цикл
								//ТЗ1.УдалитьСтроки();
							    Если спр.ЭтоГруппа()=0 Тогда	//ПодУровни мы не будем рассматривать
									ОбработайПозицию(Спр.ТекущийЭлемент(), ТЗ1);
									ТЗ1.ВыбратьСтроки();
									Пока ТЗ1.ПолучитьСтроку()=1 Цикл
										ТЗ_Свод.НоваяСтрока();
										ТЗ_Свод.Период			= ТЗ1.Период;
										ТЗ_Свод.МОЛ				= ТЗ1.МОЛ;
										ТЗ_Свод.Номенклатура	= Спр.ТекущийЭлемент();			//Нам необходимо для сортировки
										ТЗ_Свод.КолПриход		= ТЗ1.КолПриход;
										ТЗ_Свод.КолРасход		= ТЗ1.КолРасход;
										ТЗ_Свод.КолКонОст		= ТЗ1.КолКонОст;
										ТЗ_Свод.СуммРубКонОст	= ТЗ1.СуммРубКонОст;
										ТЗ_Свод.СуммУпрКонОст	= ТЗ1.СуммУпрКонОст;
										ТЗ_Свод.СебестРуб		= ТЗ1.СебестРуб;
										ТЗ_Свод.СебестУпр		= ТЗ1.СебестУпр;
										ТЗ_Свод.КолвоПродаж		= ТЗ1.КолвоПродаж;
										ТЗ_Свод.ПродСтоимостьУпр= ТЗ1.ПродСтоимостьУпр;
										ТЗ_Свод.ПродСтоимость	= ТЗ1.ПродСтоимость;
										ТЗ_Свод.ЧислоПродаж		= ТЗ1.ЧислоПродаж;
									КонецЦикла;
							    КонецЕсли;
							КонецЦикла;
						иначе	//Это четко заданная позиция - её разбивать ненадо
							ОбработайПозицию(Пров, ТЗ1);
							ТЗ1.ВыбратьСтроки();
							Пока ТЗ1.ПолучитьСтроку()=1 Цикл
								ТЗ_Свод.НоваяСтрока();
								ТЗ_Свод.Период			= ТЗ1.Период;
								ТЗ_Свод.МОЛ				= ТЗ1.МОЛ;
								ТЗ_Свод.Номенклатура	= Пров;			//Нам необходимо для сортировки
								ТЗ_Свод.КолПриход		= ТЗ1.КолПриход;
								ТЗ_Свод.КолРасход		= ТЗ1.КолРасход;
								ТЗ_Свод.КолКонОст		= ТЗ1.КолКонОст;
								ТЗ_Свод.СуммРубКонОст	= ТЗ1.СуммРубКонОст;
								ТЗ_Свод.СуммУпрКонОст	= ТЗ1.СуммУпрКонОст;
								ТЗ_Свод.СебестРуб		= ТЗ1.СебестРуб;
								ТЗ_Свод.СебестУпр		= ТЗ1.СебестУпр;
								ТЗ_Свод.КолвоПродаж		= ТЗ1.КолвоПродаж;
								ТЗ_Свод.ПродСтоимостьУпр= ТЗ1.ПродСтоимостьУпр;
								ТЗ_Свод.ПродСтоимость	= ТЗ1.ПродСтоимость;
								ТЗ_Свод.ЧислоПродаж		= ТЗ1.ЧислоПродаж;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	//Конец Обработки по товару
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;	

	Если гр1=0 Тогда	//не собирать товар до групп
		ТЗ_Свод.Сортировать("Период+,МОЛ+,Номенклатура+");
		ТЗ_Свод.Свернуть("","");
	
		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Сформировать");
		Таб.ВывестиСекцию("Шапка");
		Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);

		ТЗ_Свод.ВыбратьСтроки();
		Пока ТЗ_Свод.ПолучитьСтроку()=1 Цикл
			Таб.ВывестиСекцию("Строка_1");
		КонецЦикла;
		Таб.ВывестиСекцию("Подвал");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Детализация до номенклатуры","");
	
	иначе	//Обработаем по группам
		ТЗ_Свод.НоваяКолонка("Групп","Справочник.Номенклатура");
		ТЗ_Свод.ВыбратьСтроки();
		Пока ТЗ_Свод.ПолучитьСтроку()=1 Цикл
		    ТЗ_Свод.Групп=ТЗ_Свод.Номенклатура.Родитель;
		КонецЦикла;
		ТЗ_Свод.Свернуть("Период,МОЛ,Групп","КолКонОст,СуммРубКонОст,СуммУпрКонОст,КолвоПродаж,ПродСтоимость,ПродСтоимостьУпр,ЧислоПродаж");
		ТЗ_Свод.Сортировать("Период+,МОЛ+,Групп+");

		Таб = СоздатьОбъект("Таблица");
		Таб.ИсходнаяТаблица("Сформировать");
		Таб.ВывестиСекцию("Шапка_2");
		Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);

		ТЗ_Свод.ВыбратьСтроки();
		Пока ТЗ_Свод.ПолучитьСтроку()=1 Цикл
			Таб.ВывестиСекцию("Строка_2");
		КонецЦикла;
		Таб.ВывестиСекцию("Подвал_2");
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Детализация до групп","");
		
	    
	КонецЕсли;
	
КонецПроцедуры                    

//******************************************************************************
//******************************************************************************
//******************************************************************************
Процедура ПриОткрытии(ФлагВосстановленияНастройки)	
	
	//                  тип          вид           переменная  название
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Номенклатура", "Номенклатура",  "По номенклатуре");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Склады", "Склад",  "По складам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ЗначенияСвойств", "Номенклатура",  "По свойствам номенклатуры");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Фирмы", "Фирма",  "По фирмам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","СвоиЮрЛица", "ЮрЛицо",  "По юр. лицам");
	//глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","УпрАналитика", "УпрАналитика",  "По упр. аналитике");
	
	Если ФлагВосстановленияНастройки = 0 Тогда
		
		ВидЕдиницы = 1;
		ВидРазделителя 	= 1;     

	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;

		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			КомпоновкаПозицийСводнойТЗ();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;                      
	                     
	ПерерисовкаНазванийЗакладок();

	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");

	УправлениеДиалогом();
	
КонецПроцедуры		// ПриОткрытии()       

//******************************************************************************
// Предопределенная процедура.
Процедура ВводНового()
	
	// эта предопределенная процедура выполняется при восстановлении настройки
	ПерерисовкаНазванийЗакладок();
	УправлениеДиалогом();       
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриВыбореЗакладки(Номер,Значение)	
	// закладки
    Если Номер=1 Тогда
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были   
	КонецЕсли;      
	УправлениеДиалогом();
	ПерерисовкаНазванийЗакладок();
	
КонецПроцедуры	// ПриВыбореЗакладки
                                       
//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПодбора(Значение)  
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора  


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
                                                                                
ТекСтрокаВТаблице="";

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);    


//Выставим основные данные
Если Сп_Период.РазмерСписка()=0 Тогда
	Сп_Период.ДобавитьЗначение("Год");
	Сп_Период.ДобавитьЗначение("Квартал");
	Сп_Период.ДобавитьЗначение("Месяц");
	Сп_Период.ДобавитьЗначение("Неделя");
	Сп_Период.ДобавитьЗначение("День");
КонецЕсли;


