////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//******************************************************************************
// ПоКнопкеНомераЛистов()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Вызывается по кнопке "Номера листов кассовой книги"
//
Процедура ПоКнопкеНомераЛистов()
	                                                                                    
	Если ВыбЮрЛицо.Выбран()=0 Тогда
		Предупреждение("Не выбрано юридическое лицо!",60);
		Возврат;
	КонецЕсли;
	
	глЗначенияПериодическихРеквизитов(ВыбЮрЛицо, , ДатаКонца, "НомерЛистаКассовойКниги");
	
КонецПроцедуры // ПоКнопкеНомераЛистов()

//******************************************************************************
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	
КонецПроцедуры //УправлениеДиалогом()   

//******************************************************************************
// РасшифровкаОбновить(Обновить)
//
// Параметры:
//  Обновить = 	1 - нажата кнопка "Обновить"
//				2 - нажата кнопка "Настройка"	
//
// Возвращаемое значение: 
//	Расшифровка (список значений)
//
// Вызывается из формул элементов диалога:
//  из таблицы, кнопки "Обновить" и "Настройка"
//
// Описание:  
//	функция для стандартного механизма кнопок ""Обновить" и "Настройка""
//  помещает значение параметра в список Расшифровка  и возвращает этот список
//
Функция РасшифровкаОбновить(Обновить)
	
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
	
КонецФункции //РасшифровкаОбновить()                                            

//******************************************************************************
// Сформировать(ЗакрытьДиалог=0)
//
// Параметры:
//   ЗакрытьДиалог - флаг того, что после формирования отчета надо закрыть диалог	
//
// Возвращаемое значение: 
//	Нет
// 
// Вызывается из формул элементов диалога:
//   кнопки "Сформировать" и "ОК"
//
// Описание:   
//	Запускает отчет.
//
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем Запрос, ТекстЗапроса;
	
	// отчет не зависит от ГП, поэтому ее не проверяем
	Если глПроверкаДаты(ДатаНачала,ДатаКонца)=0 Тогда
		Возврат;
	КонецЕсли;       
	             
	Если ВыбЮрЛицо.Выбран()=0 Тогда
		Предупреждение("Не выбрано юридическое лицо!",60);
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;    
	
	Таб.ИсходнаяТаблица( "КассоваяКнига" );
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "КассоваяКнига");
	
	// все настройки помещаем в список
	Расшифровка.Установить("ДатаНачала", 	ДатаНачала);
    Расшифровка.Установить("ДатаКонца", 	ДатаКонца);
	Расшифровка.Установить("ВыбЮрЛицо",     ВыбЮрЛицо);

	Расшифровка.Установить("ПоследнийЛист", ПоследнийЛист);
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ДатаНачала по ДатаКонца;
	|Фирма  		= Регистр.Касса.Фирма;
	|Валюта			= Регистр.Касса.Валюта;
	|СуммаВал		= Регистр.Касса.СуммаВал;
	|СуммаРуб		= Регистр.Касса.СуммаРуб;
	|КодОперации    = Регистр.Касса.КодОперации;";
	
	ТекстЗапроса = ТекстЗапроса +
	"Функция НачОстВал = НачОст(СуммаВал);
	|Функция ПриходВал = Приход(СуммаВал);
	|Функция РасходВал = Расход(СуммаВал);
	|Функция КонОстВал = КонОст(СуммаВал);
	|Функция НачОстРуб = НачОст(СуммаРуб);
	|Функция ПриходРуб = Приход(СуммаРуб) Когда (КодОперации <> глКО.КурсоваяРазница);
	|Функция РасходРуб = Расход(СуммаРуб) Когда (КодОперации <> глКО.КурсоваяРазница);
	|Функция КонОстРуб = КонОст(СуммаРуб);
	|Функция ПриходКР  = Приход(СуммаРуб) Когда (КодОперации = глКО.КурсоваяРазница);
	|Функция РасходКР  = Расход(СуммаРуб) Когда (КодОперации = глКО.КурсоваяРазница);";
	                                  
	ТекстЗапроса = ТекстЗапроса +
	"Группировка День;
	|Группировка Валюта;
	|Группировка Документ;
	|Условие (КодОперации <> глКО.Перемещение);
	|Условие(Фирма.ЮрЛицо = ВыбЮрЛицо);";
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;                    
	
	НачалоГода = НачГода(ДатаНачала);        
	
	П = СоздатьОбъект("Периодический");
	П.ИспользоватьОбъект("НомерЛистаКассовойКниги", ВыбЮрЛицо);
	// расчет номера начального листа
	ЛистовЗаГод   = 0;
	ЛистовЗаМесяц = 0;
	Если ДатаНачала <> НачалоГода Тогда
		Если П.НайтиЗначение(ДатаНачала - 1, -1) = 1 Тогда
			Если П.ДатаЗнач >= НачалоГода Тогда
				ЛистовЗаГод =  П.Значение;
			КонецЕсли;     
			Если НачМесяца(ДатаНачала) = НачалоГода Тогда  
 				   ЛистовЗаМесяц = ЛистовЗаГод; 
	  		ИначеЕсли П.НайтиЗначение(НачМесяца(ДатаНачала)-1, -1) = 1 Тогда 
				Если П.ДатаЗнач  >= НачалоГода Тогда
					ЛистовЗаМесяц = ЛистовЗаГод - П.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	глЧислоСтрок = 0;
	БылУжеЛист   = 0;
	ДатаЛиста    = Дата("");
                 
	Таб.ВывестиСекцию("Кнопки");
	
	глОживить(1);
	
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0, "КассоваяКнига", "КассоваяКнига");
	
	ТаблицаДокументов = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДокументов.НоваяКолонка("Валюта");
	ТаблицаДокументов.НоваяКолонка("ТекДок");
	ТаблицаДокументов.НоваяКолонка("ПриходРуб","Число","15","2");
	ТаблицаДокументов.НоваяКолонка("ПриходВал","Число","15","2");
	ТаблицаДокументов.НоваяКолонка("РасходРуб","Число","15","2");
	ТаблицаДокументов.НоваяКолонка("РасходВал","Число","15","2");
	
	Таб.ОбластьПечати(3);
	Пока Запрос.Группировка("День") = 1 Цикл  
		
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		
		ПриходЗаДеньРуб = Запрос.ПриходРуб + Запрос.ПриходКР;
		РасходЗаДеньРуб = Запрос.РасходРуб + Запрос.РасходКР;
		
		// не выводим дни, когда не было движений
		Если (ПриходЗаДеньРуб = 0) 
		и    (РасходЗаДеньРуб = 0)
		Тогда
			Продолжить;
		КонецЕсли;
		
		Если БылУжеЛист = 1 Тогда
			Если НачМесяца(ДатаЛиста) <> НачМесяца(Запрос.День) Тогда
				Таб.ВывестиСекцию     ("ЛистовЗаМесяц|Отчет");
				Таб.ПрисоединитьСекцию("ЛистовЗаМесяц|Отчет");
				ЛистовЗаМесяц = 0;
			КонецЕсли;
			Если НачГода(ДатаЛиста) <> НачГода(Запрос.День) Тогда
				Таб.ВывестиСекцию("ЛистовЗаГод|Отчет");
				Таб.ПрисоединитьСекцию("ЛистовЗаГод|Отчет");
				ЛистовЗаГод = 0;
			КонецЕсли;
			Таб.НоваяСтраница();
		КонецЕсли; // был уже лист
		                            
		БылУжеЛист    = 1;
		ДатаЛиста     = Запрос.День;
		ЛистовЗаГод   = ЛистовЗаГод   + 1;
		ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
		
		НомерЛиста = ЛистовЗаГод;
		Если ВыбЮрЛицо.НомерЛистаКассовойКниги.Получить(ДатаЛиста) <> НомерЛиста Тогда
			П.ДатаЗнач = ДатаЛиста; П.Значение = НомерЛиста; П.Записать();
		КонецЕсли;

		ЕстьВалюта = 0;
		Пока Запрос.Группировка("Валюта") = 1 Цикл
			Если Запрос.Валюта <> глРубли Тогда
				ЕстьВалюта = 1;
			КонецЕсли;
		КонецЦикла; 
		
		// выводим шапку дня
   		ОстатокРуб = Запрос.НачОстРуб;
		Таб.ВывестиСекцию     ("ВкладнойЛист|Отчет");
		Таб.НоваяКолонка();
		Таб.ПрисоединитьСекцию("ОтчетКассира|Отчет");
		Таб.ВывестиСекцию     ("Шапка|Отчет");
		Таб.ПрисоединитьСекцию("Шапка|Отчет");    
		глОживить(1);
		
		Если ЕстьВалюта = 1 Тогда
			Таб.ВывестиСекцию     ("ВТомЧисле|Отчет");
		    Таб.ПрисоединитьСекцию("ВТомЧисле|Отчет");
			Запрос.Получить(Запрос.День,,);
		    Пока Запрос.Группировка("Валюта") = 1 Цикл
		   		ОстатокВал = Запрос.НачОстВал;
		   		ОстатокРуб = Запрос.НачОстРуб;
		   		Валюта = Запрос.Валюта;
		   		Если (ОстатокРуб <> 0) 
		   		или  (ОстатокВал <> 0) 
		   		Тогда
		   			Если Валюта = глРубли Тогда            
		   				Таб.ВывестиСекцию     ("ОстатокРуб|Отчет");
		            	Таб.ПрисоединитьСекцию("ОстатокРуб|Отчет");        	
		   			Иначе
		   				Таб.ВывестиСекцию     ("ОстатокВал|Отчет");
		            	Таб.ПрисоединитьСекцию("ОстатокВал|Отчет");        
		   			КонецЕсли;
		   		КонецЕсли;
			КонецЦикла;	
		КонецЕсли; 
                             
		ВывелиЗаголовокКР = 0;
		ТаблицаДокументов.УдалитьСтроки();
		Запрос.Получить(Запрос.День,,);
		Пока Запрос.Группировка("Валюта") = 1 Цикл      
			
			ПриходКР = Запрос.ПриходКР;
			РасходКР = Запрос.РасходКР;
			Если (ПриходКР <> 0) 
			или  (РасходКР <> 0)
			Тогда
				Если ВывелиЗаголовокКР = 0 Тогда
					ВывелиЗаголовокКР = 1;
	   				Таб.ВывестиСекцию     ("КурсоваяРазница|Отчет");
    				Таб.ПрисоединитьСекцию("КурсоваяРазница|Отчет");
	    			глОживить(1);
				КонецЕсли;

				КоррСчет = ?(ПриходКР<>0,"91.1","91.2");
				Таб.ВывестиСекцию     ("СтрокаКурсоваяРазница|Отчет");
    			Таб.ПрисоединитьСекцию("СтрокаКурсоваяРазница|Отчет");
	    		глОживить(1);
			КонецЕсли; 
			
			Пока Запрос.Группировка("Документ") = 1 Цикл
				
				Если (Запрос.ПриходРуб <> 0) 
				или  (Запрос.РасходРуб <> 0) 
				или  (Запрос.ПриходВал <> 0) 
				или  (Запрос.РасходВал <> 0)  
				Тогда
					ТаблицаДокументов.НоваяСтрока();
					ТаблицаДокументов.Валюта = Запрос.Валюта;
					ТаблицаДокументов.ТекДок = Запрос.Документ;
					ТаблицаДокументов.ПриходРуб = Запрос.ПриходРуб;
					ТаблицаДокументов.ПриходВал = Запрос.ПриходВал;
					ТаблицаДокументов.РасходРуб = Запрос.РасходРуб;
					ТаблицаДокументов.РасходВал = Запрос.РасходВал;    
				КонецЕсли;
			КонецЦикла; // по документам
		КонецЦикла; // по валютам
		                                
		ТаблицаДокументов.Сортировать("+ТекДок",1);
		
		ТаблицаДокументов.ВыбратьСтроки();
		Пока ТаблицаДокументов.ПолучитьСтроку() = 1 Цикл
			ТекДок = ТаблицаДокументов.ТекДок;               
			НомерДокПечатнойФормы = глНомерНаПечать(ТекДок);
			Если (ТекДок.Вид()="ПКО") Тогда
				Клиент   = ТекДок.ПринятоОт;
			ИначеЕсли (ТекДок.Вид()="РКО")
				  или (ТекДок.Вид()="ВыплатаИзКассы") Тогда
				Клиент   = ТекДок.Выдать;        
			ИначеЕсли (ТекДок.Вид()="ОтчетККМ") Тогда
				Клиент   = ТекДок.Касса;
			Иначе
				Клиент   = "";
			КонецЕсли;
			
			КоррСчет = "";
			Если ТекДок.Проведен()=1 Тогда
				Рез = "";
				Если (ТаблицаДокументов.ПриходРуб<>0)ИЛИ(ТаблицаДокументов.ПриходВал<>0) Тогда
					глОпределитьКоррСчетаДокумента(ТекДок,Рез,"50",1);
					КоррСчет = Рез.Получить("СчетаКредита");
				Иначе
					глОпределитьКоррСчетаДокумента(ТекДок,Рез,"50",2);
					КоррСчет = Рез.Получить("СчетаДебета");
				КонецЕсли;
			КонецЕсли;
			
			
			ПриходРуб = ТаблицаДокументов.ПриходРуб;
			РасходРуб = ТаблицаДокументов.РасходРуб; 
			ПриходВал = ТаблицаДокументов.ПриходВал;
			РасходВал = ТаблицаДокументов.РасходВал; 
			Если ПриходВал > 0 Тогда
				КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
			ИначеЕсли РасходВал > 0 Тогда
				КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
			КонецЕсли;
			     
			Валюта = ТаблицаДокументов.Валюта;
			Если Валюта = глРубли Тогда
				Таб.ВывестиСекцию     ("СтрокаРуб|Отчет");
				Таб.ПрисоединитьСекцию("СтрокаРуб|Отчет");
			Иначе
				Таб.ВывестиСекцию     ("СтрокаВал|Отчет");
				Таб.ПрисоединитьСекцию("СтрокаВал|Отчет");
			КонецЕсли;
			глОживить(1);
			
		КонецЦикла;
		                                         
		// обороты за день
		Таб.ВывестиСекцию     ("Оборот|Отчет");
		Таб.ПрисоединитьСекцию("Оборот|Отчет");  
		Если ЕстьВалюта = 1 Тогда
			Таб.ВывестиСекцию     ("ВТомЧисле|Отчет");
		    Таб.ПрисоединитьСекцию("ВТомЧисле|Отчет");
			Запрос.Получить(Запрос.День,,);
		    Пока Запрос.Группировка("Валюта") = 1 Цикл
   				ПриходЗаДеньРуб = Запрос.ПриходРуб + Запрос.ПриходКР;
        		РасходЗаДеньРуб = Запрос.РасходРуб + Запрос.РасходКР;
	        	ПриходЗаДеньВал = Запрос.ПриходВал;
          		РасходЗаДеньВал = Запрос.РасходВал;
                    
		  		Валюта = Запрос.Валюта;
		   		Если (ПриходЗаДеньРуб <> 0) 
		   		или  (РасходЗаДеньРуб <> 0) 
		   		или  (ПриходЗаДеньВал <> 0) 
		   		или  (РасходЗаДеньВал <> 0) 
		   		Тогда
		   			Если Валюта = глРубли Тогда            
		   				Таб.ВывестиСекцию     ("ОборотРуб|Отчет");
		            	Таб.ПрисоединитьСекцию("ОборотРуб|Отчет");        	
		   			Иначе
		   				Таб.ВывестиСекцию     ("ОборотВал|Отчет");
		            	Таб.ПрисоединитьСекцию("ОборотВал|Отчет");        
		   			КонецЕсли;
		   		КонецЕсли;
			КонецЦикла;	
		КонецЕсли; 

		// остатки на конец дня
		ОстатокРуб      = Запрос.КонОстРуб;
		
		Таб.ВывестиСекцию     ("КонечныйОстаток|Отчет");
		Таб.ПрисоединитьСекцию("КонечныйОстаток|Отчет");
		
		Если ЕстьВалюта = 1 Тогда
			Таб.ВывестиСекцию     ("ВТомЧисле|Отчет");
		    Таб.ПрисоединитьСекцию("ВТомЧисле|Отчет");
			Запрос.Получить(Запрос.День,,); 
		    Пока Запрос.Группировка("Валюта") = 1 Цикл
		   		ОстатокВал = Запрос.КонОстВал;
		   		ОстатокРуб = Запрос.КонОстРуб;
		   		Валюта = Запрос.Валюта;
		   		Если (ОстатокРуб <> 0) 
		   		или  (ОстатокВал <> 0) 
		   		Тогда
		   			Если Валюта = глРубли Тогда            
		   				Таб.ВывестиСекцию     ("ОстатокРуб|Отчет");
		            	Таб.ПрисоединитьСекцию("ОстатокРуб|Отчет");        	
		   			Иначе
		   				Таб.ВывестиСекцию     ("ОстатокВал|Отчет");
		            	Таб.ПрисоединитьСекцию("ОстатокВал|Отчет");        
		   			КонецЕсли;
		   		КонецЕсли;
			КонецЦикла;	
		КонецЕсли; 
        
		Таб.ВывестиСекцию     ("Подвал|Отчет");
		Таб.ПрисоединитьСекцию("Подвал|Отчет");
		глОживить(1);

	КонецЦикла; // по дням
	   
	Если БылУжеЛист = 1 Тогда
		Если (КонМесяца(ДатаЛиста) =  ДатаЛиста) 
		Или  (НачМесяца(ДатаЛиста) <> НачМесяца(ДатаКонца)) 
		Или  (ПоследнийЛист <> 1) 
		Тогда
			Таб.ВывестиСекцию     ("ЛистовЗаМесяц|Отчет");
			Таб.ПрисоединитьСекцию("ЛистовЗаМесяц|Отчет");
		КонецЕсли;
		
		Если (КонГода(ДатаЛиста) =  ДатаЛиста) 
		Или  (НачГода(ДатаЛиста) <> НачГода(ДатаКонца)) 
		Или  (ПоследнийЛист = 3)	
		Тогда
			Таб.ВывестиСекцию     ("ЛистовЗаГод|Отчет");
			Таб.ПрисоединитьСекцию("ЛистовЗаГод|Отчет"); 
		КонецЕсли;
	КонецЕсли;

	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);             
	Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
		Таб.Защита(1);
	КонецЕсли;
	Таб.Показать("Кассовая книга", "");
	                             
	Если РаспечататьОбложку = 1 Тогда
		// Печать обложки и титульного листа
		Таб1= СоздатьОбъект("Таблица");
		Таб1.ИсходнаяТаблица( "Обложка");
		Таб1.ВывестиСекцию("Обложка");
		Таб1.НоваяСтраница();
		Таб1.ВывестиСекцию("Обложка");
		// Последний лист кассовой книги
		Таб1.НоваяСтраница();
		Таб1.ВывестиСекцию("ПослДеньГода");
		Таб1.ТолькоПросмотр(1);
		Таб1.Опции(0,0,0,0,"ОпцииПечатиКО_4");
		Таб1.ПараметрыСтраницы(1,,,10,10);
		Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
			Таб1.Защита(1);
		КонецЕсли;
		Таб1.Показать("Обложка и титульный лист кассовой книги","");
    КонецЕсли;
	
	Если (Обновить = 2)ИЛИ(ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура   
//
Процедура ПриОткрытии(ФлагВосстановленияНастройки)	
	
	Если ФлагВосстановленияНастройки = 0 Тогда
	                                                      
		Фирма          = глЗначениеПоУмолчанию("ОсновнаяФирма");
		ВыбЮрЛицо      = ?(ПустоеЗначение(Фирма)=1,"",Фирма.ЮрЛицо);
		ПоследнийЛист  = 1; // обычный
        ДатаНачала      = глЗначениеПоУмолчанию("ОсновнаяДатаНачалаОтчетов");
		Если ПустоеЗначение(ДатаНачала) = 1 Тогда
			ДатаНачала      = НачМесяца(ДатаКонца);    
		КонецЕсли;
		
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		ДатаНачала 		= глРасшифровка.Получить("ДатаНачала");
		ДатаКонца 		= глРасшифровка.Получить("ДатаКонца");
		ВыбЮрЛицо	    = глРасшифровка.Получить("ВыбЮрЛицо");
		
		ПоследнийЛист   = глРасшифровка.Получить("ПоследнийЛист");
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;                      
	
	УправлениеДиалогом();
	
КонецПроцедуры		// ПриОткрытии()       

//******************************************************************************
// Предопределенная процедура.     
//
Процедура ВводНового()
	
	// эта предопределенная процедура выполняется при восстановлении настройки
	УправлениеДиалогом();
	
КонецПроцедуры // ВводНового()
                                                                                
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
ДатаКонца = ПолучитьДатуТА();