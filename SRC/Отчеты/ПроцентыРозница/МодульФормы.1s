Процедура Вверх()
	х=вариантЗаполнения.ТекущаяСтрока();
	Если х>1 Тогда
		вариантЗаполнения.СдвинутьЗначение(-1);
	КонецЕсли;
КонецПроцедуры
Процедура Вниз()
	х=вариантЗаполнения.ТекущаяСтрока();
	Если х<3 Тогда
		вариантЗаполнения.СдвинутьЗначение(1);
	КонецЕсли;
КонецПроцедуры



Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб,ТЗ_проценты, ТЗ_запрос;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Контрагент = Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия = Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин = Регистр.Покупатели_розница.Магазин;
	|АналитикаПродажи = Регистр.Покупатели_розница.КредДокумент;
	|АналитикаСчетБезнал = Регистр.Покупатели_розница.АналитикаСчетБезнал;
	|КредДокумент = Регистр.Покупатели_розница.АналитикаПродажи;
	|СуммаРуб = Регистр.Покупатели_розница.СуммаРуб;";                 
	Если вариантЗаполнения.Пометка(5)=1 Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|ТекущийДокумент = Регистр.Покупатели_розница.ТекущийДокумент;";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Функция СуммаРубНачОст = НачОст(СуммаРуб);
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);";
	;
	
	списокГрупп=СоздатьОбъект("СписокЗначений");
	//Начинаем формировать группировки, в зависимости от выбора пользователя
	х = 0;
	Для х = 1 По 5 Цикл
		//Если вариантЗаполнения.Пометка(х)=1 Тогда   
		Если (вариантЗаполнения.Пометка(х)=0) и (х=5) Тогда   
			Продолжить;
		КонецЕсли;	
		ТекстЗапроса=ТекстЗапроса+"Группировка "+вариантЗаполнения.ПолучитьЗначение(х)+" без Групп;";
		//КонецЕсли;
		Если вариантЗаполнения.Пометка(х)=1 Тогда
			списокГрупп.ДобавитьЗначение(вариантЗаполнения.ПолучитьЗначение(х));
		КонецЕсли;
	КонецЦикла;	
	
	ВыбМагазин=СоздатьОбъект("СписокЗначений");
	х = 0;
	Для х = 1 По списокМагазинов.РазмерСписка() Цикл
		Если списокМагазинов.Пометка(х)=1 Тогда
			ВыбМагазин.ДобавитьЗначение(списокМагазинов.ПолучитьЗначение(х));
		КонецЕсли;
	КонецЦикла;	
	
	ТекстЗапроса=ТекстЗапроса+
	"Условие(Контрагент в ВыбКонтрагент);
	|Условие(ВидВзаимодействия в ВыбВидВзаимодействияРозница);
	|Условие(Магазин в ВыбМагазин);
	|"//}}ЗАПРОС
	;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	Запрос.Выгрузить(ТЗ_запрос,1,0);
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сформировать");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	глОживить(1);
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 5, "ПроцентыРозница", "ПроцентыРозница");
	Состояние("Заполнение выходной таблицы...");
	//Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	ТЗ_1=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_2=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_3=СоздатьОбъект("ТаблицаЗначений"); 
	ТЗ_4=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_5=СоздатьОбъект("ТаблицаЗначений");
	свернутьПо=""; 
	ПорядковыйНомерГруппировки = 1; 
	
	Для х = 1 По 5 Цикл
		Если вариантЗаполнения.Пометка(х)=1 Тогда
			свернутьПо=свернутьПо+вариантЗаполнения.ПолучитьЗначение(х)+",";
			Если (Пустоезначение(ТЗ_1)=1) и (ПорядковыйНомерГруппировки = 1) тогда
				ТЗ_1.Загрузить(ТЗ_запрос);
				ТЗ_1.Свернуть(лев(свернутьПо,стрдлина(свернутьПо)-1),"СуммаРубНачОст,СуммаРубПриход,СуммаРубРасход,СуммаРубКонОст");
				ТЗ_1.Сортировать(лев(свернутьПо,стрдлина(свернутьПо)-1));
				ПорядковыйНомерГруппировки = ПорядковыйНомерГруппировки +1;
			ИначеЕсли (Пустоезначение(ТЗ_2)=1) и (ПорядковыйНомерГруппировки = 2) тогда
				ТЗ_2.Загрузить(ТЗ_запрос);
				ТЗ_2.Свернуть(лев(свернутьПо,стрдлина(свернутьПо)-1),"СуммаРубНачОст,СуммаРубПриход,СуммаРубРасход,СуммаРубКонОст");	
				ТЗ_2.Сортировать(лев(свернутьПо,стрдлина(свернутьПо)-1));
				ПорядковыйНомерГруппировки = ПорядковыйНомерГруппировки +1;
			ИначеЕсли (Пустоезначение(ТЗ_3)=1) и (ПорядковыйНомерГруппировки = 3) тогда
				ТЗ_3.Загрузить(ТЗ_запрос);
				ТЗ_3.Свернуть(лев(свернутьПо,стрдлина(свернутьПо)-1),"СуммаРубНачОст,СуммаРубПриход,СуммаРубРасход,СуммаРубКонОст");	
				ТЗ_3.Сортировать(лев(свернутьПо,стрдлина(свернутьПо)-1)); 
				ПорядковыйНомерГруппировки = ПорядковыйНомерГруппировки +1;
			ИначеЕсли (Пустоезначение(ТЗ_4)=1) и (ПорядковыйНомерГруппировки = 4) тогда
				ТЗ_4.Загрузить(ТЗ_запрос);
				ТЗ_4.Свернуть(лев(свернутьПо,стрдлина(свернутьПо)-1),"СуммаРубНачОст,СуммаРубПриход,СуммаРубРасход,СуммаРубКонОст");	
				ТЗ_4.Сортировать(лев(свернутьПо,стрдлина(свернутьПо)-1));     
				ПорядковыйНомерГруппировки = ПорядковыйНомерГруппировки +1;
			ИначеЕсли (Пустоезначение(ТЗ_5)=1) и (ПорядковыйНомерГруппировки = 5) тогда
				ТЗ_5.Загрузить(ТЗ_запрос);
				ТЗ_5.Свернуть(лев(свернутьПо,стрдлина(свернутьПо)-1),"СуммаРубНачОст,СуммаРубПриход,СуммаРубРасход,СуммаРубКонОст");	
				ТЗ_5.Сортировать(лев(свернутьПо,стрдлина(свернутьПо)-1));
				ПорядковыйНомерГруппировки = ПорядковыйНомерГруппировки +1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	//ТЗ_запрос.выбратьстроки();
	//пока ТЗ_запрос.ПолучитьСтроку()=1 цикл
	Если Пустоезначение(ТЗ_1)=0 тогда
		ТЗ_1.ВыбратьСтроки();
		Пока ТЗ_1.ПолучитьСтроку()=1 цикл
			ЗначениеУпорядочивания=ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1);
			СуммаРубНачОст = ТЗ_1.СуммаРубНачОст;
			СуммаРубПриход = ТЗ_1.СуммаРубПриход;
			СуммаРубРасход = ТЗ_1.СуммаРубРасход;
			СуммаРубКонОст = ТЗ_1.СуммаРубКонОст;
			//номстр="";
			Если (СуммаРубНачОст<>0)или(СуммаРубПриход<>0)или(СуммаРубРасход<>0)или(СуммаРубКонОст<>0) тогда
				Таб.ВывестиСекцию("Контрагент");
				Если Пустоезначение(ТЗ_2)=0 тогда 
					х2=0;
					//номстр=ТЗ_2.НайтиЗначение(ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1),номстр,1);
					ТЗ_2.ВыбратьСтроки();
					Пока ТЗ_2.ПолучитьСтроку()=1 цикл
						Если ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1)=ТЗ_2.ПолучитьЗначение(ТЗ_2.НомерСтроки,1) ТОгда
							х2=ТЗ_2.НомерСтроки;
							ЗначениеУпорядочивания=ТЗ_2.ПолучитьЗначение(ТЗ_2.НомерСтроки,2);
							СуммаРубНачОст = ТЗ_2.СуммаРубНачОст;
							СуммаРубПриход = ТЗ_2.СуммаРубПриход;
							СуммаРубРасход = ТЗ_2.СуммаРубРасход;
							СуммаРубКонОст = ТЗ_2.СуммаРубКонОст;
							Если (СуммаРубНачОст<>0)или(СуммаРубПриход<>0)или(СуммаРубРасход<>0)или(СуммаРубКонОст<>0) тогда
								Таб.ВывестиСекцию("ВидВзаимодействия");
								Если Пустоезначение(ТЗ_3)=0 тогда
									х3=0;
									ТЗ_3.ВыбратьСтроки();
									Пока ТЗ_3.ПолучитьСтроку()=1 цикл
										Если (ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1)=ТЗ_3.ПолучитьЗначение(ТЗ_3.НомерСтроки,1))
										и(ТЗ_2.ПолучитьЗначение(ТЗ_2.НомерСтроки,2)=ТЗ_3.ПолучитьЗначение(ТЗ_3.НомерСтроки,2)) ТОгда
											х3=ТЗ_3.НомерСтроки;
											ЗначениеУпорядочивания=ТЗ_3.ПолучитьЗначение(ТЗ_3.НомерСтроки,3);
											СуммаРубНачОст = ТЗ_3.СуммаРубНачОст;
											СуммаРубПриход = ТЗ_3.СуммаРубПриход;
											СуммаРубРасход = ТЗ_3.СуммаРубРасход;
											СуммаРубКонОст = ТЗ_3.СуммаРубКонОст;
											Если (СуммаРубНачОст<>0)или(СуммаРубПриход<>0)или(СуммаРубРасход<>0)или(СуммаРубКонОст<>0) тогда
												
												Таб.ВывестиСекцию("Магазин");
												Если Пустоезначение(ТЗ_4)=0 тогда
													х4=0;
													ТЗ_4.ВыбратьСтроки();
													Пока ТЗ_4.ПолучитьСтроку()=1 цикл
														Если (ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1)=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,1))
														и(ТЗ_2.ПолучитьЗначение(ТЗ_2.НомерСтроки,2)=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,2))
														и(ТЗ_3.ПолучитьЗначение(ТЗ_3.НомерСтроки,3)=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,3)) ТОгда
															х4=ТЗ_4.НомерСтроки;
															КредДокумент=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,5);
															ПозКР = 5;
															Если ПустоеЗначение(КредДокумент) = 1 Тогда
																КредДокумент=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,6);
																ПозКР = 6;
															КонецЕсли;
															Если ПустоеЗначение(КредДокумент) = 1 Тогда
																КредДокумент=ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,4);
																ПозКР = 4;
															КонецЕсли;
															СуммаРубНачОст = ТЗ_4.СуммаРубНачОст;
															СуммаРубПриход = ТЗ_4.СуммаРубПриход;
															СуммаРубРасход = ТЗ_4.СуммаРубРасход;
															СуммаРубКонОст = ТЗ_4.СуммаРубКонОст;
															Если (СуммаРубНачОст<>0)или(СуммаРубПриход<>0)или(СуммаРубРасход<>0)или(СуммаРубКонОст<>0) тогда
																Таб.ВывестиСекцию("КредДокумент");
																Если Пустоезначение(ТЗ_5)=0 тогда
																	х5=0;
																	ТЗ_5.ВыбратьСтроки();
																	Пока ТЗ_5.ПолучитьСтроку()=1 Цикл
																		Если (ТЗ_1.ПолучитьЗначение(ТЗ_1.НомерСтроки,1)=ТЗ_5.ПолучитьЗначение(ТЗ_5.НомерСтроки,1))
																		и(ТЗ_2.ПолучитьЗначение(ТЗ_2.НомерСтроки,2)=ТЗ_5.ПолучитьЗначение(ТЗ_5.НомерСтроки,2))
																		и(ТЗ_3.ПолучитьЗначение(ТЗ_3.НомерСтроки,3)=ТЗ_5.ПолучитьЗначение(ТЗ_5.НомерСтроки,3))
																		и(ТЗ_4.ПолучитьЗначение(ТЗ_4.НомерСтроки,ПозКР)=ТЗ_5.ПолучитьЗначение(ТЗ_5.НомерСтроки,ПозКР))ТОгда
																			х5=ТЗ_5.НомерСтроки;   
																			СуммаРубНачОст = 0;
																			СуммаРубПриход = 0;
																			СуммаРубРасход = 0;
																			СуммаРубКонОст = 0;
																			СуммаРубНачОст = ТЗ_5.СуммаРубНачОст;
																			СуммаРубПриход = ТЗ_5.СуммаРубПриход;
																			СуммаРубРасход = ТЗ_5.СуммаРубРасход;
																			СуммаРубКонОст = ТЗ_5.СуммаРубКонОст;
																			ДокументДвижения 	= "";
																			ДокументДвижения	=ТЗ_5.ПолучитьЗначение(ТЗ_5.НомерСтроки,8);
																			Если (СуммаРубНачОст<>0)или(СуммаРубПриход<>0)или(СуммаРубРасход<>0)или(СуммаРубКонОст<>0) тогда
																				ТекущаяРасшифровка = ДокументДвижения;
																				Таб.ВывестиСекцию("ДокументДвижения");
																			КонецЕсли;
																		Иначе
																			если х5<>0 тогда
																				прервать;
																			конецЕсли;
																		КонецЕсли;
																	КонецЦикла;
																КонецЕсли;	
															конецЕсли;
														иначе
															если х4<>0 тогда
																прервать;
															конецЕсли;
														КонецЕсли;
													конецЦикла;
												КонецЕсли;
												
											КонецЕсли;
										Иначе
											если х3<>0 тогда
												прервать;
											конецЕсли;
										КонецЕсли;
									конецЦикла;
									
								КонецЕсли;
							КонецЕсли;
							
						иначе
							если х2<>0 тогда
								прервать;
							конецЕсли;
						КонецЕсли;
					конецЦикла;
					
				КонецЕсли;
			КонецЕсли;
		конецЦикла;
	КонецЕсли;
	
	
	СуммаРубНачОст = ТЗ_запрос.Итог("СуммаРубНачОст");
	СуммаРубПриход = ТЗ_запрос.Итог("СуммаРубПриход");
	СуммаРубРасход = ТЗ_запрос.Итог("СуммаРубРасход");
	СуммаРубКонОст = ТЗ_запрос.Итог("СуммаРубКонОст");
	Таб.ВывестиСекцию("Итого");

	
	// Вывод заполненной формы
	//Таб.ОбластьПечати(3);
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);   
	//Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
	//	Таб.Защита(1);
	//КонецЕсли;
	Таб.Показать("Сформировать", "");
	
КонецПроцедуры

Процедура ВнестиКонтрагента()
	ОткрытьПодбор("Справочник.Контрагенты","ФормаДляВыбораРозница",Контекст,1);
КонецПроцедуры 

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.ЭтоГруппа()=0 Тогда
		Если ВыбКонтрагент.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
			ВыбКонтрагент.ДобавитьЗначение(Элемент.ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()
//******************************************************************************
//			Операторы основной программы			

вариантЗаполнения.УдалитьВсе();
вариантЗаполнения.ДобавитьЗначение("Контрагент");
вариантЗаполнения.ДобавитьЗначение("Магазин");
вариантЗаполнения.ДобавитьЗначение("ВидВзаимодействия","Вид взаимодействия");
вариантЗаполнения.ДобавитьЗначение("КредДокумент");
вариантЗаполнения.ДобавитьЗначение("ТекущийДокумент", "Документ движения");

списокМагазинов.УдалитьВсе();
сп=СоздатьОбъект("Справочник.Склады");
сп.ВыбратьЭлементы();
Пока сп.ПолучитьЭлемент()=1 Цикл
    Если сп.Магазин=1 Тогда
        списокМагазинов.ДобавитьЗначение(сп.ТекущийЭлемент());
    КонецЕсли;
КонецЦикла;

ВыбКонтрагент.УдалитьВсе();
