//******************************************************************************
// ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ

Перем ТекНомерОтчета;	// номер отчета из константы
Перем Сформирован;		// флаг того, что отчет был сформирован

Перем Т;		
Перем Обновить;
Перем Расшифровка; 
// используются для стандартного механизма кнопок "Обновить" и "Настройка"

//******************************************************************************
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	Форма.ИспользоватьСлой("Шапка,Подвал,Основной1,Разделитель"+СокрЛП(ВидРазделителя));
	
КонецПроцедуры //УправлениеДиалогом()   

//******************************************************************************
// РасшифровкаОбновить(Обновить)
//
// Параметры:
//  Обновить = 	1 - нажата кнопка "Обновить"
//				2 - нажата кнопка "Наcтройка"
//
// Возвращаемое значение:
//
// Описание:  функция для стандартного механизма кнопок ""Обновить" и "Настройка""
//   помещает значение параметра в список Расшифровка  и возвращает этот список
//
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции // РасшифровкаОбновить()


//******************************************************************************
// Сформировать(ЗакрытьЭкран)
//
// Параметры:
//   ЗакрытьЭкран - флаг того, что после формирования отчета надо закрыть экран	
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Запускает отчет
//
Процедура Сформировать(ЗакрытьЭкран=0)    
	Перем Контрагент;                        
	
	Если ПустоеЗначение(Номер) = 1 Тогда
	    Предупреждение("Не задан номер отчета");
		Возврат;
	КонецЕсли;
	
	Если ВидРазделителя = 1 Тогда
		Если ПустоеЗначение(ВыбРазделитель1) = 1 Тогда
			Предупреждение("Не выбрана собственная фирма", 60);
			Возврат;
		КонецЕсли;
		ВремЮрЛицо = ВыбРазделитель1.ЮрЛицо;
		НаимФирмы = ВремЮрЛицо.ПолнНаименование;
		ФирмаОКПО = ВремЮрЛицо.ОКПО;
	ИначеЕсли ВидРазделителя = 2 Тогда
		Если ПустоеЗначение(ВыбРазделитель2) = 1 Тогда
			Предупреждение("Не выбрано собственное юридическое лицо", 60);
			Возврат;
		КонецЕсли;
		НаимФирмы = ВыбРазделитель2.ПолнНаименование;
		ФирмаОКПО = ВыбРазделитель2.ОКПО;
	КонецЕсли;
	
	Если глПроверкаДаты(ДатаНачала, ДатаКонца) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Т) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Т = СоздатьОбъект("Таблица");
	Иначе
	 	Т.Очистить();
	КонецЕсли;
	 
   	Т.ИсходнаяТаблица("ТОРГ-31");
   	//Т.ИсходнаяТаблица("Таблица1");
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "СопроводительныйРеестр");
	
	// все настройки помещаем в список
	Расшифровка.Установить("Номер"     , Номер);
	Расшифровка.Установить("ДатаНачала"     , ДатаНачала);
    Расшифровка.Установить("ДатаКонца"      , ДатаКонца);
	Расшифровка.Установить("ВыбРазделитель1", ВыбРазделитель1);
	Расшифровка.Установить("ВыбРазделитель2", ВыбРазделитель2);
	Расшифровка.Установить("ВидРазделителя" , ВидРазделителя);
	Расшифровка.Установить("Склад"          , Склад);

	
	ТекстЗапросаПрихода = "
	|Период с ДатаНачала по ДатаКонца;";
	
	ТекстЗапросаРасхода = "
	|Период с ДатаНачала по ДатаКонца;";
	
	Если ПустоеЗначение(Склад) = 0 Тогда
		ТекстЗапросаПрихода = ТекстЗапросаПрихода + "
		|Док      = Документ.ВозвратОтПокупателя.ТекущийДокумент,
		|           Документ.ОприходованиеТМЦ.ТекущийДокумент,
		|           Документ.ПоступлениеТМЦ.ТекущийДокумент,
		|           Документ.ПоступлениеТМЦИмпорт.ТекущийДокумент,
		|           Документ.ВводОстатковТМЦ.ТекущийДокумент,
		|           Документ.ПеремещениеТМЦ.ТекущийДокумент,
		|           Документ.КомплектацияТМЦ.ТекущийДокумент,
		|           Документ.СтрокаАвансОтчетаТМЦ.ТекущийДокумент;
		|ФирмаДок = Документ.ВозвратОтПокупателя.Фирма,
		|           Документ.ОприходованиеТМЦ.Фирма,
		|           Документ.ПоступлениеТМЦ.Фирма,
		|           Документ.ПоступлениеТМЦИмпорт.Фирма,
		|           Документ.ВводОстатковТМЦ.Фирма,
		|           Документ.ПеремещениеТМЦ.ФирмаПолучатель,
		|           Документ.КомплектацияТМЦ.Фирма,
		|           Документ.СтрокаАвансОтчетаТМЦ.Фирма;
		|СкладДок = Документ.ВводОстатковТМЦ.Склад,
		|           Документ.ВозвратОтПокупателя.Склад, 
		|           Документ.ОприходованиеТМЦ.Склад,
		|           Документ.ПоступлениеТМЦ.Склад,
		|           Документ.ПоступлениеТМЦИмпорт.Склад,
		|           Документ.ПеремещениеТМЦ.СкладПолучатель,
		|           Документ.КомплектацияТМЦ.СкладПолучатель,
		|           Документ.СтрокаАвансОтчетаТМЦ.Склад;
		|Условие(СкладДок = Склад);";

		ТекстЗапросаРасхода = ТекстЗапросаРасхода + "
		|Док      = Документ.ВозвратПоставщику.ТекущийДокумент,
		|           Документ.ОтчетККМ.ТекущийДокумент,
		|           Документ.Реализация.ТекущийДокумент,
		|           Документ.РеализацияРозница.ТекущийДокумент,
		|           Документ.СписаниеТМЦ.ТекущийДокумент,
		|           Документ.ПеремещениеТМЦ.ТекущийДокумент,
		|           Документ.КомплектацияТМЦ.ТекущийДокумент;
		|ФирмаДок = Документ.ВозвратПоставщику.Фирма, 
		|           Документ.ОтчетККМ.Фирма,
		|           Документ.Реализация.Фирма,
		|           Документ.РеализацияРозница.Фирма,
		|           Документ.СписаниеТМЦ.Фирма,
		|           Документ.ПеремещениеТМЦ.Фирма,
		|           Документ.КомплектацияТМЦ.Фирма;
		|СкладДок = Документ.ВозвратПоставщику.Склад,
		|           Документ.ОтчетККМ.Склад, 
		|           Документ.Реализация.Склад,
		|           Документ.РеализацияРозница.Склад,
		|           Документ.СписаниеТМЦ.Склад,
		|           Документ.ПеремещениеТМЦ.Склад,
		|           Документ.КомплектацияТМЦ.Склад;
		|Условие(СкладДок = Склад);";
	Иначе
		ТекстЗапросаПрихода = ТекстЗапросаПрихода + "
		|Док      = Документ.ВозвратОтПокупателя.ТекущийДокумент,
		|           Документ.ОприходованиеТМЦ.ТекущийДокумент,
		|           Документ.ПоступлениеТМЦ.ТекущийДокумент,
		|           Документ.ПоступлениеТМЦИмпорт.ТекущийДокумент,
		|           Документ.ВводОстатковТМЦ.ТекущийДокумент,
		|           Документ.СтрокаАвансОтчетаТМЦ.ТекущийДокумент,
		|           Документ.ПеремещениеТМЦ.ТекущийДокумент,
		|           Документ.КомплектацияТМЦ.ТекущийДокумент;
		|ФирмаДок = Документ.ВозвратОтПокупателя.Фирма,
		|           Документ.ОприходованиеТМЦ.Фирма,
		|           Документ.ПоступлениеТМЦ.Фирма,
		|           Документ.ПоступлениеТМЦИмпорт.Фирма,
		|           Документ.ВводОстатковТМЦ.Фирма,
		|           Документ.СтрокаАвансОтчетаТМЦ.Фирма,
		|           Документ.ПеремещениеТМЦ.ФирмаПолучатель,
		|           Документ.КомплектацияТМЦ.Фирма;";

		ТекстЗапросаРасхода = ТекстЗапросаРасхода + "
		|Док      = Документ.ВозвратПоставщику.ТекущийДокумент, 
		|           Документ.ОтчетККМ.ТекущийДокумент,
		|           Документ.Реализация.ТекущийДокумент,
		|           Документ.РеализацияРозница.ТекущийДокумент,
		|           Документ.СписаниеТМЦ.ТекущийДокумент,
		|           Документ.ПеремещениеТМЦ.ТекущийДокумент,
		|           Документ.КомплектацияТМЦ.ТекущийДокумент;
		|ФирмаДок = Документ.ВозвратПоставщику.Фирма, 
		|           Документ.ОтчетККМ.Фирма,
		|           Документ.Реализация.Фирма,
		|           Документ.РеализацияРозница.Фирма,
		|           Документ.СписаниеТМЦ.Фирма,
		|           Документ.ПеремещениеТМЦ.Фирма,
		|           Документ.КомплектацияТМЦ.Фирма;";
		
	КонецЕсли;
	
	ТекстЗапросаПрихода = ТекстЗапросаПрихода + "Группировка Док;";
	ТекстЗапросаРасхода = ТекстЗапросаРасхода + "Группировка Док;";
	
	Если ВидРазделителя = 1 Тогда
		ТекстЗапросаПрихода = ТекстЗапросаПрихода + "Условие(ФирмаДок = ВыбРазделитель1);";
		ТекстЗапросаРасхода = ТекстЗапросаРасхода + "Условие(ФирмаДок = ВыбРазделитель1);";
	ИначеЕсли ВидРазделителя = 2 Тогда
		ТекстЗапросаПрихода = ТекстЗапросаПрихода + "Условие(ФирмаДок.ЮрЛицо = ВыбРазделитель2);";
		ТекстЗапросаРасхода = ТекстЗапросаРасхода + "Условие(ФирмаДок.ЮрЛицо = ВыбРазделитель2);";
	Иначе
		Возврат;
	КонецЕсли;
	
	// ПРИХОД
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапросаПрихода) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписПрихода = СоздатьОбъект("СписокЗначений");
	Пока Запрос.Группировка("Док") = 1 Цикл
		СписПрихода.ДобавитьЗначение(Запрос.Док);
	КонецЦикла;
	
	// РАСХОД
	
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапросаРасхода) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписРасхода = СоздатьОбъект("СписокЗначений");
	Пока Запрос.Группировка("Док") = 1 Цикл
		СписРасхода.ДобавитьЗначение(Запрос.Док);
	КонецЦикла;

    // ВЫВОДИМ ШАПКУ ОТЧЕТА
		
	Т.ВывестиСекцию("Кнопки");
	НачСтрока = НачСтрока + Т.ВысотаСекции("Кнопки");
	
	Т.ВывестиСекцию("Шапка");
	НачСтрока = НачСтрока + Т.ВысотаСекции("Шапка");

	Т.ВывестиСекцию("ШапкаТаблицы");
	КонСтрока = НачСтрока + Т.ВысотаСекции("ШапкаТаблицы");
	
	Т.ПовторятьПриПечатиСтроки(НачСтрока + 1, КонСтрока);
	
	
	//******************************************************************************
	СтрокНаСтранице = 42; // без учета шапки таблицы и итога по странице, т.к. они 
	                      // выводятся на каждой странице
	СтрокВшапке     = 18;
	СтрокВподвале   = 20;
	//******************************************************************************
	ТекСтраница   = 1;
	
	// ВЫВОДИМ ДОКУМЕНТЫ ПРИХОДА

	Текст = "ПРИХОД";
	Т.ВывестиСекцию("ПустаяСтрока");
	Текст = "";
	Т.ВывестиСекцию("ПустаяСтрока");
	
	Ном = 0;
	
	ВыведеноСтрок = 2;
	глОживить(2);
	
	ВыведенИтогПоСтранице = 0;
	
	Для Сч = 1 По СписПрихода.РазмерСписка() Цикл
		ТекДок    = СписПрихода.ПолучитьЗначение(Сч);
			
		ИмяКонрагента  = "";
		ОКПОКонрагента = "";
		
		Если глЕстьРеквизитШапки("Контрагент", ТекДок.Вид()) = 1 Тогда
			ТекКонтрагент = ТекДок.Контрагент;
			ЮрФизЛицо = ТекКонтрагент.ЮрФизЛицо;
			Если ПустоеЗначение(ЮрФизЛицо) = 0 Тогда
				ИмяКонрагента  = ЮрФизЛицо.ПолнНаименование;
				Если ЮрФизЛицо.Вид() <> "ФизЛица" Тогда
					ОКПОКонрагента = ЮрФизЛицо.ОКПО;
				КонецЕсли;
			Иначе
				ИмяКонрагента  = ТекКонтрагент.Наименование;
			КонецЕсли;
		КонецЕсли;
		
		Ном = 1 + Ном;
		
		Если ТекСтраница = 1 Тогда
			ОстСтрок = СтрокНаСтранице - СтрокВшапке - ВыведеноСтрок;
		Иначе
			ОстСтрок = СтрокНаСтранице - ВыведеноСтрок;
		КонецЕсли;
		
		Если ОстСтрок <= 0 Тогда
			Т.ВывестиСекцию("ИтогПоСтранице");
		    
			Т.НоваяСтраница();
			ВыведеноСтрок = 0;
			ТекСтраница   = ТекСтраница + 1;
			ВыведенИтогПоСтранице = 1;
		КонецЕсли;
		
		Если глЕстьРеквизитШапки("ДатаДокВходящий", ТекДок.Вид()) = 1 тогда
			ПечДата = ТекДок.ДатаДокВходящий;
		Иначе
			ПечДата = ТекДок.ДатаДок;
		КонецЕсли;  
		
		Т.ВывестиСекцию("Строка");
		ВыведеноСтрок = ВыведеноСтрок + 1;

		глОживить(1);
	КонецЦикла;
	
	// проверим, нужно ли переносить секцию расход на другой лист
	
	Если ТекСтраница = 1 Тогда
		ОстСтрок = СтрокНаСтранице - СтрокВшапке - ВыведеноСтрок;
	Иначе
		ОстСтрок = СтрокНаСтранице - ВыведеноСтрок;
	КонецЕсли;
	
	// для продолжения печати на той же странице должны быть свободными 4 строки.
	// - пустая строка
	// - Расход
	// - пустая строка
	// - строка с документом
	
	Если ОстСтрок < 4 Тогда
		Т.ВывестиСекцию("ИтогПоСтранице");
		
		Т.НоваяСтраница();
		ВыведеноСтрок = 0;
		ТекСтраница   = ТекСтраница + 1;
	Иначе
		Текст = "";
		Т.ВывестиСекцию("ПустаяСтрока");
		ВыведеноСтрок = ВыведеноСтрок + 1;
		глОживить(1);
	КонецЕсли;

	Текст = "РАСХОД";
	Т.ВывестиСекцию("ПустаяСтрока");
	Текст = "";
	Т.ВывестиСекцию("ПустаяСтрока");
	
	ВыведеноСтрок = ВыведеноСтрок + 2;
	глОживить(2);
	
	ВыведенИтогПоСтранице = 0;
	
	Для Сч = 1 По СписРасхода.РазмерСписка() Цикл
		ТекДок = СписРасхода.ПолучитьЗначение(Сч);
			
		ИмяКонрагента  = "";
		ОКПОКонрагента = "";
		
		Если глЕстьРеквизитШапки("Контрагент", ТекДок.Вид()) = 1 Тогда
			ТекКонтрагент = ТекДок.Контрагент;
			ЮрФизЛицо = ТекКонтрагент.ЮрФизЛицо;
			Если ПустоеЗначение(ЮрФизЛицо) = 0 Тогда
				ИмяКонрагента  = ЮрФизЛицо.ПолнНаименование;
				Если ЮрФизЛицо.Вид() <> "ФизЛица" Тогда
					ОКПОКонрагента = ЮрФизЛицо.ОКПО;
				КонецЕсли;
			Иначе
				ИмяКонрагента  = ТекКонтрагент.Наименование;
			КонецЕсли;
			
		КонецЕсли;
		
		Ном = Ном + 1;
		
		ОстСтрок = СтрокНаСтранице - ВыведеноСтрок;
		Если ТекСтраница = 1 Тогда
			ОстСтрок = ОстСтрок - СтрокВшапке;
		КонецЕсли;
		
		Если Сч = СписРасхода.РазмерСписка() Тогда
			// последняя строка. учитываем подвал
		    ОстСтрок = ОстСтрок - СтрокВподвале;
		КонецЕсли;
		
		Если ОстСтрок <= 0 Тогда
			Т.ВывестиСекцию("ИтогПоСтранице");
			глОживить(1);
		    
			Т.НоваяСтраница();
			ВыведеноСтрок = 0;
			ТекСтраница   = ТекСтраница + 1;
		КонецЕсли;
		
		
		Если глЕстьРеквизитШапки("ДатаДокВходящий", ТекДок.Вид()) = 1 тогда
			ПечДата = ТекДок.ДатаДокВходящий;
		Иначе
			ПечДата = ТекДок.ДатаДок;
		КонецЕсли;
		
		Т.ВывестиСекцию("Строка");
		ВыведеноСтрок = ВыведеноСтрок + 1;
		глОживить(1);
	КонецЦикла;

	Т.ВывестиСекцию("ИтогПоСтранице");
	Т.ВывестиСекцию("Подвал");
	глОживить(16);
	
	//Вызов выходного отчета в окно просмотра и редактирования.
	Т.Опции(0, 0, 0, 0, "СопроводительныйРеестр", "СопроводительныйРеестр");
	//Т.Защита(Константа.ФлагЗащитыТаблиц);
	Т.ТолькоПросмотр(1);
	Т.ОбластьПечати(2);
	Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
		Т.Защита(1);
	КонецЕсли;
	Т.Показать("Сопроводительный реестр № "+Номер, "");

	Сформирован    = 1;
	Номер          = Номер + 1;
	ТекНомерОтчета = Номер;
	
	Если (Обновить = 2)ИЛИ(ЗакрытьЭкран=1) Тогда
	    СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

//******************************************************************************
// Предопределенная процедура	
//
Процедура ВводНового()
	Номер = ТекНомерОтчета;
КонецПроцедуры  // ВводНового()

//******************************************************************************
// Предопределенная процедура	
//
Процедура ПриОткрытии(ФлагЧтенияНастройки)	
	
	Если ФлагЧтенияНастройки = 0 Тогда
	    ДатаНачала      = глЗначениеПоУмолчанию("ОсновнаяДатаНачалаОтчетов");
		Если ПустоеЗначение(ДатаНачала) = 1 Тогда
			ДатаНачала      = НачМесяца(ДатаКонца);    
		КонецЕсли;
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		Номер			= глРасшифровка.Получить("Номер");
		ДатаНачала		= глРасшифровка.Получить("ДатаНачала");
		ДатаКонца		= глРасшифровка.Получить("ДатаКонца");
		ВидРазделителя	= глРасшифровка.Получить("ВидРазделителя");
		ВыбРазделитель1	= глРасшифровка.Получить("ВыбРазделитель1");
		ВыбРазделитель2	= глРасшифровка.Получить("ВыбРазделитель2");
		ВыбРазделитель3	= глРасшифровка.Получить("ВыбРазделитель3");
		Склад			= глРасшифровка.Получить("Склад");
		
		Если Обновить <> 0 Тогда
			Т = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		
		Обновить = 0;
	КонецЕсли;
                               
	Если (ФлагЧтенияНастройки = 0)
	 или (Обновить = 0) 
	Тогда
		Номер          = 1 + ВосстановитьЗначение("СопроводительныйРеестр_Номер");
		ТекНомерОтчета = Номер;
	КонецЕсли;
	
	Форма.Обновить(1);
	Сформирован = 0;
	
	Если ВидРазделителя = 0 Тогда
	    ВидРазделителя = 1;
	КонецЕсли;
	УправлениеДиалогом();
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура	
//
Процедура ПриЗакрытии()
	
	Если Сформирован = 1 Тогда
		СохранитьЗначение("СопроводительныйРеестр_Номер", Номер);
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

ДатаКонца  = ПолучитьДатуТА();