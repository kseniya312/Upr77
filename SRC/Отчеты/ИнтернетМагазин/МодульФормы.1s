перем ТЗ;
перем ТипДока;
перем СписокПроекты;
Перем СписокВариантовВводимыхНаОсновании;
Перем СписокДействий;  // Список действий по документу

Процедура Обновить() Далее

Процедура ЗагрузитьПроекты() 
	
	СписокПроекты.УдалитьВсе();	
	Спр = СоздатьОбъект("Справочник.Проекты");
	Спр.ВыбратьЭлементы(); 	
	Пока Спр.ПолучитьЭлемент() = 1 Цикл  		
		Если глПроектИнтернетМагазин(Спр.ТекущийЭлемент()) = 1 Тогда
			СписокПроекты.ДобавитьЗначение(Спр.ТекущийЭлемент());
		КонецЕсли;                 		
	КонецЦикла;      
	
КонецПроцедуры  

Процедура ВидимостьВыбораДок(Видимость)
	Если Видимость = 1 Тогда
		Форма.КнУдаление.Видимость(0);
		Форма.КнПроведение.Видимость(0);
		Форма.КнВвестиНаОсновании.Видимость(0);
	Иначе
		Форма.КнУдаление.Видимость(1);
		Форма.КнПроведение.Видимость(1);
		Форма.КнВвестиНаОсновании.Видимость(1);
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьНаличиеОплаты(Док)
	ЕстьОплата = 0;
	сп	= СоздатьОбъект("Документ");
	сп.ВыбратьПодчиненныеДокументы(,,Док);
	Пока сп.ПолучитьДокумент() = 1 Цикл
		Если (Найти(сп.Вид(),"СтрокаВыпискиПриход") > 0) или (Найти(сп.Вид(),"ПКО") > 0) Тогда
			ЕстьОплата = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьОплата = 0 Тогда
		сп.ВыбратьПодчиненныеДокументы(,,Док.ДокОснование);
		Пока сп.ПолучитьДокумент() = 1 Цикл
			Если (Найти(сп.Вид(),"СтрокаВыпискиПриход") > 0) или (Найти(сп.Вид(),"ПКО") > 0) Тогда
				ЕстьОплата = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	Возврат ЕстьОплата;
КонецФункции

Процедура ЗаполнитьТЗ(Номер=0)
	
	Запрос = СоздатьОбъект("Запрос");	
	ТекстЗапроса = 
	"//({ЗАПРОС(Сформировать)
	|Период с ДатаНач по ДатаКон; 
	|ОбрабатыватьДокументы все; 
	|Докум = ";
	
	Если ТипДока = 1 Тогда  
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.ЗаявкаПокупателя.ТекущийДокумент, Документ.Реализация.ТекущийДокумент," + 
		"Документ.ВозвратОтПокупателя.ТекущийДокумент," +
		"Документ.ПолучениеЗалога_Розница.ТекущийДокумент, Документ.ВозвратЗалога_Розница.ТекущийДокумент,"+
		"Документ.СолянкаПоПоставкам.ТекущийДокумент, Документ.ЗаявкаКлиентаРозница.ТекущийДокумент, Документ.РасходнаяНакладнаяРозница.ТекущийДокумент," +
		"Документ.СчетБнРозница.ТекущийДокумент, Документ.ВозвратОтПокупателя_Розница.ТекущийДокумент, Документ.РасходнаяНакладнаяРозницаБезнал.ТекущийДокумент";       
		Если ВыбСклад.Выбран() = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + ",Документ.ПКО.ТекущийДокумент, Документ.РКО.ТекущийДокумент;";
		Иначе
			ТекстЗапроса = ТекстЗапроса + ";";
		КонецЕсли;
	ИначеЕсли ТипДока = 2 Тогда 
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.ЗаявкаПокупателя.ТекущийДокумент, Документ.ЗаявкаКлиентаРозница.ТекущийДокумент, Документ.СчетБнРозница.ТекущийДокумент;";
	ИначеЕсли ТипДока = 3 Тогда 
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.Реализация.ТекущийДокумент, Документ.РасходнаяНакладнаяРозница.ТекущийДокумент, Документ.РасходнаяНакладнаяРозницаБезнал.ТекущийДокумент;";                               
	ИначеЕсли ТипДока = 4 Тогда 
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.ВозвратОтПокупателя.ТекущийДокумент, Документ.ВозвратОтПокупателя_Розница.ТекущийДокумент;";   
	ИначеЕсли ТипДока = 5 Тогда 
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.СолянкаПоПоставкам.ТекущийДокумент;";
	ИначеЕсли ТипДока = 6 Тогда 
		ТекстЗапроса = ТекстЗапроса +	
		"Документ.ПолучениеЗалога_Розница.ТекущийДокумент, Документ.ВозвратЗалога_Розница.ТекущийДокумент;";	
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|Группировка Докум;
	|Условие (Докум.Проект В СписокПроекты);";
	Если ВыбСклад.Выбран() = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"Условие (Докум.Склад в ВыбСклад);";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + 
	"
	|"//}}ЗАПРОС
	;  
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда 
		Сообщить("Ошибка!");
   		Возврат;
   	КонецЕсли; 
   	
   	ТЗ_2 = СоздатьОбъект("ТаблицаЗначений");   	
   	Запрос.Выгрузить(ТЗ_2,,0);  
   	ТЗ_2.ВыбратьСтроки();
   	                       
   	
   	ТЗ.УдалитьСтроки();
	Пока ТЗ_2.ПолучитьСтроку() = 1 Цикл		
		
		ТЗ.НоваяСтрока();
		Если ТЗ_2.Докум.Проведен() = 1 Тогда
			ТЗ.Флаг = 2;
		ИначеЕсли ТЗ_2.Докум.ПометкаУдаления() = 1 Тогда
			ТЗ.Флаг = 7; 
		Иначе
			ТЗ.Флаг = 1;
		КонецЕсли;    		
		ТЗ.Дата = ТЗ_2.Докум.ДатаДок;
		ТЗ.Номер = ТЗ_2.Докум.НомерДок;	
		ТЗ.Проект = ТЗ_2.Докум.Проект;
		ТЗ.Документ = глНазваниеДокументаВЖурнале(ТЗ_2.Докум.ТекущийДокумент());
		ТЗ.ВидДокумента = ТЗ_2.Докум.Вид();
		ТЗ.Контрагент = ТЗ_2.Докум.Контрагент;
		Попытка
			ТЗ.Склад = ТЗ_2.Докум.Склад;
		Исключение 
			ТЗ.Склад = "";
		КонецПопытки;         
		 
		Если (ТЗ.ВидДокумента = "ЗаявкаКлиентаРозница") Тогда
			Попытка ТЗ.CтатусСайта = СокрЛП(ТЗ_2.Докум.СтатусСайта) Исключение КонецПопытки; 
		КонецЕсли;	
			
		Если глЕстьРеквизитШапки("СуммаВзаиморасчетов", ТЗ_2.Докум.ТекущийДокумент().Вид()) = 1 Тогда
			ТЗ.Сумма = ТЗ_2.Докум.СуммаВзаиморасчетов;
		Иначе
			//Сообщить(ТЗ_2.Докум);
			Попытка
				ТЗ.Сумма = ТЗ_2.Докум.Итог("Сумма")+?(ТЗ_2.Докум.СуммаВклНП=1,0,ТЗ_2.Докум.Итог("СуммаНП"))+?(ТЗ_2.Докум.СуммаВклНДС=1,0,ТЗ_2.Докум.Итог("СуммаНДС"));
			Исключение КонецПопытки;
		КонецЕсли;
		Попытка
			ТЗ.Валюта = ТЗ_2.Докум.Валюта;
		Исключение КонецПопытки;
		ТЗ.Автор = ТЗ_2.Докум.Автор;
		ТЗ.АвторЗаявки = ТЗ_2.Докум.АвторЗаявки;
		ТЗ.Комментарий = ТЗ_2.Докум.Комментарий;
		Если (ТипДока = 2) или (ТипДока = 3) Тогда
			Если (Найти(ТЗ.ВидДокумента, "Заявка") > 0) или (Найти(ТЗ.ВидДокумента, "Реализация") > 0) или (Найти(ТЗ.ВидДокумента, "Расходная") > 0) Тогда
				ЕстьРеализация = 0;
				ЕстьОплата = 0;
				сп	= СоздатьОбъект("Документ");
				сп.ВыбратьПодчиненныеДокументы(,,ТЗ_2.Докум.ТекущийДокумент());
				Пока сп.ПолучитьДокумент() = 1 Цикл
					если (Найти(сп.Вид(),"Реализация") > 0) или (Найти(сп.Вид(),"Расходная") > 0) Тогда
						если сп.Проведен()=1 Тогда
							ЕстьРеализация = 1;
							Если ЕстьОплата = 0 Тогда
								ЕстьОплата = ПроверитьНаличиеОплаты(сп.ТекущийДокумент());
							КонецЕсли;
							Если ЕстьОплата = 1 Тогда Прервать КонецЕсли;
						КонецЕсли;
					ИначеЕсли (Найти(сп.Вид(),"СтрокаВыпискиПриход") > 0) или (Найти(сп.Вид(),"ПКО") > 0) Тогда
						ЕстьОплата = 1;
					КонецЕсли;
				КонецЦикла;
				ТЗ.ФлагРеализация = ?(ЕстьРеализация = 1, 8, 10);
				ТЗ.ФлагОплата = ?(ЕстьОплата = 1, 8, 10);
			КонецЕсли;
		КонецЕсли;  
		
		ТекЗаявка = глПолучитьЗаявку(ТЗ_2.Докум);
		Если ПустоеЗначение(ТекЗаявка) = 0 Тогда
			Если (ТЗ.ВидДокумента = "ЗаявкаКлиентаРозница") Тогда
				Если (ПустоеЗначение(ТекЗаявка.СсылкаДляОплаты) = 0)
					и (ПустоеЗначение(ТекЗаявка.НомерЗаявкиСайт) = 0) Тогда   
					ПодчДок = СоздатьОбъект("Документ");
					ПодчДок.ВыбратьПодчиненныеДокументы(,,ТекЗаявка.ТекущийДокумент());
					
					Пока ПодчДок.ПолучитьДокумент() = 1 Цикл
						Если ПодчДок.ПометкаУдаления() = 1 Тогда
							Продолжить;
						КонецЕсли;
						Если (ПодчДок.Вид() = "ПолучениеЗалога_Розница") Тогда
							Если (ПодчДок.ПоКарте = 1) Тогда   
								ЕстьОплата = 1;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
		ТЗ.ФлагОплата = ?(ЕстьОплата = 1, 8, 10);
	КонецЦикла;
	
	ТабДок.Загрузить(ТЗ);
	ТабДок.ВыводитьПиктограммы("Флаг",1); 
	ТабДок.ВыводитьПиктограммы("ФлагРеализация",1); 
	ТабДок.ВыводитьПиктограммы("ФлагОплата",1); 
	
	Если (Номер > 0) И (Номер < ТабДок.КоличествоСтрок()) Тогда
		ТабДок.ТекущаяСтрока(Номер);
	КонецЕсли;

	ТабДок.ВидимостьКолонки("ВидДокумента",0);
    Если ТипДока = 2 Тогда
		ТабДок.ВидимостьКолонки("ФлагОплата",1);
		ТабДок.ВидимостьКолонки("ФлагРеализация",1);		
	ИначеЕсли ТипДока = 3 Тогда
		ТабДок.ВидимостьКолонки("ФлагОплата",1);
		ТабДок.ВидимостьКолонки("ФлагРеализация",0);		
	Иначе
		ТабДок.ВидимостьКолонки("ФлагОплата",0);
		ТабДок.ВидимостьКолонки("ФлагРеализация",0);		
	КонецЕсли;
	Если (ТипДока = 3) или (ТипДока = 4) Тогда
		ТабДок.ВидимостьКолонки("АвторЗаявки",1);	
	Иначе
		ТабДок.ВидимостьКолонки("АвторЗаявки",0);	
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ОбновитьФорму()
	
КонецФункции // ОбновитьФорму()
								
Процедура ПриОткрытии()

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Общий");
	Форма.Закладки.ДобавитьЗначение("Заявки покупателя");
	Форма.Закладки.ДобавитьЗначение("Реализация");
	Форма.Закладки.ДобавитьЗначение("Возврат");
	Форма.Закладки.ДобавитьЗначение("Солянка по поставкам");
	Форма.Закладки.ДобавитьЗначение("Залоги");
	


	ВидимостьВыбораДок(0);
	
	Если НазваниеНабораПрав() = "Продавец_розница" Тогда
		Форма.КнПроведение.Доступность(0);
	КонецЕсли;
		    
	ЗагрузитьПроекты();
	
	ТЗ.НоваяКолонка("Флаг","Число",,,"",4);
	ТЗ.НоваяКолонка("ФлагОплата","Число",,,"Оп",4);
	ТЗ.НоваяКолонка("CтатусСайта","Строка",20,,"Статус",15);
	ТЗ.НоваяКолонка("ФлагРеализация","Число",,,"Р",4);
	ТЗ.НоваяКолонка("Дата","Дата");
	ТЗ.НоваяКолонка("Номер","Строка",,,,16);
	ТЗ.НоваяКолонка("Документ","Строка");
	ТЗ.НоваяКолонка("Проект","Справочник.Проекты");
	ТЗ.НоваяКолонка("Автор","Справочник.Пользователи",,,,22);
	ТЗ.НоваяКолонка("АвторЗаявки","Справочник.Пользователи",,,"Автор заявки");
	ТЗ.НоваяКолонка("Контрагент","Справочник.Контрагенты",,,,16);
	ТЗ.НоваяКолонка("Склад","Справочник.Склады",,,,22); 
	ТЗ.НоваяКолонка("Сумма","Число",15,2);
	ТЗ.НоваяКолонка("Валюта","Справочник.Валюты",,,,8);
	ТЗ.НоваяКолонка("Комментарий","Строка"); 
	ТЗ.НоваяКолонка("ВидДокумента","Строка");
	
	ДатаНач = ТекущаяДата();
	ДатаКон = ТекущаяДата();
	
	ТипДока = 1;

	ЗаполнитьТЗ();	
	
	
КонецПроцедуры    

Функция НайтиДок(ЭтаДата,ЭтотНомер,ЭтотВид)
	
	ЭтотДок = СоздатьОбъект("Документ."+ЭтотВид);
	Если ЭтотДок.НайтиПоНомеру(ЭтотНомер,ЭтаДата) = 1 Тогда
		Возврат ЭтотДок;
	Иначе
		Возврат ПолучитьПустоеЗначение(ЭтотДок);
	КонецЕсли;
		
КонецФункции

Процедура ПриИзмененииТЗ(Стр, Колонка) 
	
	ВидимостьВыбораДок(0);
	
	Если Стр > 0 Тогда     
		Если Колонка = "Автор" Тогда
			Если ПустоеЗначение(ТабДок.Автор) = 0 Тогда
				ОткрытьФормуМодально(ТабДок.Автор); 
			КонецЕсли; 
		ИначеЕсли Колонка = "Контрагент" Тогда
			Если ПустоеЗначение(ТабДок.Контрагент) = 0 Тогда
				ОткрытьФормуМодально(ТабДок.Контрагент); 
			КонецЕсли; 
		ИначеЕсли Колонка = "Склад" Тогда
			Если ПустоеЗначение(ТабДок.Склад) = 0 Тогда
				ОткрытьФормуМодально(ТабДок.Склад); 
			КонецЕсли;
		Иначе
			ЭтотДок = НайтиДок(ТабДок.Дата,ТабДок.Номер,ТабДок.ВидДокумента).ТекущийДокумент();
			Если ПустоеЗначение(ЭтотДок) = 0 Тогда
				ОткрытьФормуМодально(ЭтотДок);
				Обновить();
			Иначе
				Предупреждение("Документ "+ТабДок.ВидДокумента+" "+ТабДок.Номер+" ("+Формат(ТабДок.Дата,"")+") не найден!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
  
КонецПроцедуры 

Процедура КнНовый()
	ВидВводимогоДокумента = "";
	Если СписокВариантовВводимыхНаОсновании.ВыбратьЗначение(ВидВводимогоДокумента) = 1 Тогда
		ОткрытьФорму(ВидВводимогоДокумента);
	КонецЕсли;
	//ВидимостьВыбораДок(1);
КонецПроцедуры 

Процедура КнУдаление()  
	ВидимостьВыбораДок(0);
	
	ВыбСтрока = ТабДок.ТекущаяСтрока();
	Если ВыбСтрока> 0 Тогда 
		ЭтотДок = НайтиДок(ТабДок.Дата,ТабДок.Номер,ТабДок.ВидДокумента);
		Если ПустоеЗначение(ЭтотДок.ТекущийДокумент()) = 0 Тогда
			Если (НазваниеНабораПрав() = "Продавец_розница") И (ЭтотДок.ТекущийДокумент().Автор <> глПользователь) Тогда
				Предупреждение("У вас недостаточно прав!");
				Возврат;
			КонецЕсли; 			
			
			Если ЭтотДок.ТекущийДокумент().ПометкаУдаления() = 1 Тогда
				ЭтотДок.СнятьПометкуУдаления();
			ИначеЕсли ЭтотДок.ТекущийДокумент().Проведен() = 0 Тогда
				ЭтотДок.Удалить(0);
			Иначе
				Предупреждение("У вас недостаточно прав!");
				Возврат;
			КонецЕсли;
			ЭтотДок.Записать();
			ЗаполнитьТЗ(ВыбСтрока);
		КонецЕсли;  
	КонецЕсли;	
КонецПроцедуры 

Процедура КнПроведение()
	ВидимостьВыбораДок(0);
	
	ВыбСтрока = ТабДок.ТекущаяСтрока();
	Если ВыбСтрока> 0 Тогда
		ЭтотДок = НайтиДок(ТабДок.Дата,ТабДок.Номер,ТабДок.ВидДокумента);
		Если ПустоеЗначение(ЭтотДок.ТекущийДокумент()) = 0 Тогда
			Если (НазваниеНабораПрав() = "Продавец_розница") И (ЭтотДок.ТекущийДокумент().Автор <> глПользователь) Тогда
				Предупреждение("У вас недостаточно прав!");
				Возврат;
			КонецЕсли;
			
			Если ЭтотДок.ТекущийДокумент().Проведен() = 1 Тогда
				ЭтотДок.СделатьНеПроведенным();
			Иначе
				ЭтотДок.Провести();
			КонецЕсли;   
			ЭтотДок.Записать();
			ЗаполнитьТЗ(ВыбСтрока);
		КонецЕсли;  
	КонецЕсли;
КонецПроцедуры 

Процедура КнВвестиНаОсновании()
	ВыбСтрока = ТабДок.ТекущаяСтрока();
	СписокВводимыхНаОсновании = СоздатьОбъект("СписокЗначений");
	Если ВыбСтрока> 0 Тогда
		ЭтотДок = НайтиДок(ТабДок.Дата,ТабДок.Номер,ТабДок.ВидДокумента);
		Если ПустоеЗначение(ЭтотДок.ТекущийДокумент()) = 0 Тогда
			КоличествоВводимыхНаОсновании = Метаданные.Документ(ТабДок.ВидДокумента).ВводимыеНаОснованииДокументы.Количество();
			Для х = 1 По КоличествоВводимыхНаОсновании Цикл
				ПолныйИдентификатор = Метаданные.Документ(ТабДок.ВидДокумента).ВводимыеНаОснованииДокументы.Получить(х).ПолныйИдентификатор();
				Представление = Метаданные.Документ(ТабДок.ВидДокумента).ВводимыеНаОснованииДокументы.Получить(х).Представление();
				Если СписокВариантовВводимыхНаОсновании.НайтиЗначение(ПолныйИдентификатор) > 0 Тогда 
					СписокВводимыхНаОсновании.ДобавитьЗначение(ПолныйИдентификатор, Представление);
				КонецЕсли;
			КонецЦикла;
			Если СписокВводимыхНаОсновании.РазмерСписка() = 0 Тогда Возврат КонецЕсли;
			ВидВводимогоДокумента = "";
			Если СписокВводимыхНаОсновании.ВыбратьЗначение(ВидВводимогоДокумента) = 1 Тогда
				ОткрытьФорму(ВидВводимогоДокумента,, ЭтотДок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореЗакладки(Номер)
	Форма.ИспользоватьСлой("Основной", 2);
	Если Номер = 1 Тогда
		ВидимостьВыбораДок(0); //Общий
		ТипДока = 1;
		ЗаполнитьТЗ(1);
	ИначеЕсли Номер = 2 Тогда
		ВидимостьВыбораДок(0); //Заявка покупателя
	    ТипДока = 2;
		ЗаполнитьТЗ(1);
	ИначеЕсли Номер = 3 Тогда
		ВидимостьВыбораДок(0); //Реализация
	    ТипДока = 3;
		ЗаполнитьТЗ(1);
	ИначеЕсли Номер = 4 Тогда
		ВидимостьВыбораДок(0); //Возврат
	    ТипДока = 4;
		ЗаполнитьТЗ(1);
	ИначеЕсли Номер = 5 Тогда
		ВидимостьВыбораДок(0); //Солянка по поставкам
	    ТипДока = 5;
		ЗаполнитьТЗ(1); 
	ИначеЕсли Номер = 6 Тогда
		ВидимостьВыбораДок(0); //Залоги
	    ТипДока = 6;
		ЗаполнитьТЗ(1);	
	КонецЕсли;
КонецПроцедуры

Процедура Обновить()
	ЗаполнитьТЗ(1);
КонецПроцедуры

Процедура ДатаПриИзменении()
	Если ДатаНач <= ДатаКон Тогда
		ЗаполнитьТЗ(1);
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьСводныйРеестр()

	КонтекстФормы = СоздатьОбъект("СписокЗначений");
	КонтекстФормы.ДобавитьЗначение(ДатаНач);
	КонтекстФормы.ДобавитьЗначение(ДатаКон);
	КонтекстФормы.ДобавитьЗначение(1);
	ОткрытьФорму("Отчет.СводныйРеестр",КонтекстФормы);
	
КонецПроцедуры

Процедура ПечатьРеестрДокументов()
	КонтекстФормы = СоздатьОбъект("СписокЗначений");
	КонтекстФормы.ДобавитьЗначение(ДатаНач);
	КонтекстФормы.ДобавитьЗначение(ДатаКон);
	КонтекстФормы.ДобавитьЗначение(1);
	ОткрытьФорму("Отчет.РеестрДокументов",КонтекстФормы);
КонецПроцедуры

Процедура ПриНажатииКнопкиКлавиатуры(Код, Alt, Shift, Ctrl, Символ, СтандартнаяОбработка)
	Если Код = 45 Тогда
		КнНовый();
	КонецЕсли;
КонецПроцедуры


СписокПроекты = СоздатьОбъект("СписокЗначений"); 
ТЗ = СоздатьОбъект("ТаблицаЗначений");   

Форма.ИспользоватьСлой("Основной", 2);

СписокВариантовВводимыхНаОсновании = СоздатьОбъект("СписокЗначений");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.ЗаявкаПокупателя", "Заявка покупателя");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.ЗаявкаКлиентаРозница", "Заявка клиента (магазин)");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.Реализация", "Реализация");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.РасходнаяНакладнаяРозница", "Продажа товара (магазин)");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.ВозвратОтПокупателя", "Возврат от покупателя");
СписокВариантовВводимыхНаОсновании.ДобавитьЗначение("Документ.ПКО", "Приходный кассовый ордер");

//Инициализирум список действий по кнопке "Действия"
СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");  
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Скопировать в...");         
