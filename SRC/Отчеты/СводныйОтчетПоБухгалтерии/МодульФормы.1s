// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 

Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции //РасшифровкаОбновить()                                            

Процедура УправлениеДиалогом()
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда           
		Форма.ИспользоватьСлой("Основной");
	Иначе     
		Форма.ИспользоватьСлой("МнФильтр");
	КонецЕсли;
КонецПроцедуры //УправлениеДиалогом()   

//*******************************************
// Процедура генерации запроса Сформировать.
//
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");

	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "СводныйОтчетПоБухгалтерии");
	
	// все настройки помещаем в список
	Расшифровка.Установить("ВыбНачПериода"	, ВыбНачПериода);
   	Расшифровка.Установить("ВыбКонПериода"	, ВыбКонПериода);
   	Расшифровка.Установить("ВыбКасса"		, ВыбКасса);
   	Расшифровка.Установить("ВыбФирма"		, ВыбФирма);
//   	Расшифровка.Установить("флаг"			, флаг);
   	
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Фирма = Регистр.Банк.Фирма, Регистр.Касса.Фирма;
	|БанковскийСчет = Регистр.Банк.БанковскийСчет;
	|СуммаРуб = Регистр.Банк.СуммаРуб, Регистр.Касса.СуммаРуб;
	|СуммаВал = Регистр.Банк.СуммаВал, Регистр.Касса.СуммаВал;
	|СтатьяДР = Регистр.Банк.СтатьяДР, Регистр.Касса.СтатьяДР;
	|Касса = Регистр.Касса.Касса;
	|Валюта = Регистр.Касса.Валюта, Регистр.Банк.БанковскийСчет.ВалютаСчета;
	|ТекущийДокумент = Регистр.Касса.ТекущийДокумент, Регистр.Банк.ТекущийДокумент;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаВалПриход = Приход(СуммаВал);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Функция СуммаВалРасход = Расход(СуммаВал);
	|Группировка СтатьяДР;
	|Группировка Валюта;
	|Группировка ТекущийДокумент;
	|Условие(СтатьяДР в ВыбСтатьяДР);
	|Условие(Фирма в ВыбФирма);
	|Условие(ПустоеЗначение(СтатьяДР)=0);
	|Условие(БанковскийСчет в ВыбБанковскийСчет);
	|Условие(Касса в ВыбКасса);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

//	|Условие(СтатьяДР в ВыбСтатьяДР1);
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе		   	
 		Таб.Очистить();
	КонецЕсли;
	Таб.ИсходнаяТаблица("Таблица1");
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ,0,0);
	ТЗ.НоваяКолонка("ПриходДоллары","число","14","2");
	ТЗ.НоваяКолонка("ПриходЕвро","число","14","2");
	ТЗ.НоваяКолонка("РасходДоллары","число","14","2");
	ТЗ.НоваяКолонка("РасходЕвро","число","14","2");
	ТЗ.НоваяКолонка("ОстатокДоллары","число","14","2");
	ТЗ.НоваяКолонка("ОстатокЕвро","число","14","2");
	ТЗ.НоваяКолонка("ОстатокРуб","число","14","2");
	ТЗ.НоваяКолонка("текГруппа","строка",150,0);
	ТЗ.ВыбратьСтроки();
	
	//Делаем отбор по желаемым правилам
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		//Заполним данные по валютам
		Если ТЗ.Валюта.Код="978" Тогда	//Евро
			ТЗ.СуммаРубПриход	= 0;ТЗ.СуммаРубРасход	= 0;
			ТЗ.ПриходЕвро	= ТЗ.СуммаВалПриход; ТЗ.РасходЕвро	= ТЗ.СуммаВалРасход;
			если глЕстьРеквизитШапки("ДокОснование", тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро;
				иначе
					ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро - ТЗ.ПриходЕвро;
				КонецЕсли;
			Иначе
				ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро - ТЗ.ПриходЕвро;
				Сообщить(тз.текущийДокумент);
			КонецЕсли;
		ИначеЕсли ТЗ.Валюта.Код="840" Тогда	//Доллары
			ТЗ.СуммаРубПриход	= 0;ТЗ.СуммаРубРасход	= 0;
			ТЗ.ПриходДоллары= ТЗ.СуммаВалПриход; ТЗ.РасходДоллары= ТЗ.СуммаВалРасход;
			если глЕстьРеквизитШапки("ДокОснование",тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары;
				иначе
					ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары - ТЗ.ПриходДоллары;
				КонецЕсли;
			Иначе
				ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары - ТЗ.ПриходДоллары;
				Сообщить(тз.текущийДокумент);
			КонецЕсли;
		ИначеЕсли ТЗ.Валюта.Код="643" Тогда	//Рубли
			ТЗ.СуммаВалПриход=0; ТЗ.СуммаВалРасход=0;
			если глЕстьРеквизитШапки("ДокОснование", тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход;
				иначе
					ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход - ТЗ.СуммаРубПриход;
				КонецЕсли;
			Иначе
				ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход - ТЗ.СуммаРубПриход;
				Сообщить(тз.текущийДокумент);
			КонецЕсли;
		КонецЕсли;
		
		//Теперь зададим группу
		ТЗ.текГруппа = ТЗ.СтатьяДР.ПолноеНаименование();
	КонецЦикла;

//	ТЗ.УдалитьКолонку("СуммаВалПриход");
//	ТЗ.УдалитьКолонку("СуммаВалРасход");

	ТЗ.Свернуть("текГруппа,СтатьяДР,Валюта","ОстатокРуб,ОстатокДоллары,ОстатокЕвро");
	ТЗ.ВыбратьСтроки();	
	
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		Ст	= тз.СтатьяДР;	//Для расшифровки записи и выводе уточняющей таблицы
		гру	= тз.текгруппа;
		Таб.ВывестиСекцию("Группа1");
	КонецЦикла;

	Таб.ВывестиСекцию("Итого");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");
КонецПроцедуры


Процедура ПриОткрытии()
	//если	(ИмяПользователя()<>"Абраменко") 		И
	//        (ИмяПользователя()<>"Назаренко") 		И  
	//		(ИмяПользователя()<>"Семенова") 		И
	//		(ИмяПользователя()<>"Наира") 			И
	//        (ИмяПользователя()<>"Антипова")			И   
	//		(ИмяПользователя()<>"Симоненко")			И    
	//		(ИмяПользователя()<>"Прусакова")		И
	//		(ИмяПользователя()<>"Бояринова") 		И
	//		(ИмяПользователя()<>"Администратор") 	ТОГДА 
	//	Предупреждение("Этот отчет закрыт от просмотра неуполномоченными лицами",60);
	//	СтатусВозврата(0);
	//	Возврат;
	//КонецЕсли;
	Обновить=глОбновить;
	
	Если Обновить <> 0 Тогда
		Таб = глТаблица;
	КонецЕсли;           

	Если Обновить=1 тогда
		ВыбНачПериода	= глРасшифровка.Получить("ВыбНачПериода");
		ВыбКонПериода	= глРасшифровка.Получить("ВыбКонПериода");
		ВыбКасса		= глРасшифровка.Получить("ВыбКасса");
//		флаг			= глРасшифровка.Получить("флаг");
		ВыбФирма		= глРасшифровка.Получить("ВыбФирма");
		
		Сформировать();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Обновить=0;
	УправлениеДиалогом();
КонецПроцедуры

Процедура ПриВыбореЗакладки(Номер,Значение)	
	УправлениеДиалогом();
КонецПроцедуры	// ПриВыбореЗакладки

Процедура ДобавьСтатью()
	спр	= СоздатьОбъект("Справочник.СтатьиДоходаРасходаДенег");
	а	= спр.выбрать("Укажите используемую статью ДР", "ДляВыбора");
	если а=1 Тогда
		ВыбСтатьяДР.ДобавитьЗначение(спр.ТекущийЭлемент(),спр.ТекущийЭлемент().ПолноеНаименование());
	КонецЕсли;
КонецПроцедуры

Процедура ДобавьСтатьюНесколько()
	ОткрытьПодбор("Справочник.СтатьиДоходаРасходаДенег","ДляВыбораРозн",Контекст,1);
КонецПроцедуры

Процедура СделайкаРасшифровочку(значение)
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");

	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Фирма = Регистр.Банк.Фирма, Регистр.Касса.Фирма;
	|БанковскийСчет = Регистр.Банк.БанковскийСчет;
	|СуммаРуб = Регистр.Банк.СуммаРуб, Регистр.Касса.СуммаРуб;
	|СуммаВал = Регистр.Банк.СуммаВал, Регистр.Касса.СуммаВал;
	|СтатьяДР = Регистр.Банк.СтатьяДР, Регистр.Касса.СтатьяДР;
	|Касса = Регистр.Касса.Касса;
	|Валюта = Регистр.Касса.Валюта, Регистр.Банк.БанковскийСчет.ВалютаСчета;
	|ТекущийДокумент = Регистр.Касса.ТекущийДокумент, Регистр.Банк.ТекущийДокумент;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаВалПриход = Приход(СуммаВал);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Функция СуммаВалРасход = Расход(СуммаВал);
	|Группировка СтатьяДР;
	|Группировка Валюта;
	|Группировка ТекущийДокумент;
	|Условие(СтатьяДР в значение);
	|Условие(Фирма в ВыбФирма);
	|Условие(ПустоеЗначение(СтатьяДР)=0);
	|Условие(БанковскийСчет в ВыбБанковскийСчет);
	|Условие(Касса в ВыбКасса);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

//	|Условие(СтатьяДР в ВыбСтатьяДР1);
	// Подготовка к заполнению выходных форм данными запроса
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе		   	
 		Таб.Очистить();
	КонецЕсли;
	Таб.ИсходнаяТаблица("Таблица2");
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ,0,0);
	ТЗ.НоваяКолонка("ПриходДоллары","число","14","2");
	ТЗ.НоваяКолонка("ПриходЕвро","число","14","2");
	ТЗ.НоваяКолонка("РасходДоллары","число","14","2");
	ТЗ.НоваяКолонка("РасходЕвро","число","14","2");
	ТЗ.НоваяКолонка("ОстатокДоллары","число","14","2");
	ТЗ.НоваяКолонка("ОстатокЕвро","число","14","2");
	ТЗ.НоваяКолонка("ОстатокРуб","число","14","2");
	ТЗ.ВыбратьСтроки();
	
	//Делаем отбор по желаемым правилам
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		//Заполним данные по валютам
		Если ТЗ.Валюта.Код="978" Тогда	//Евро
			ТЗ.СуммаРубПриход	= 0;ТЗ.СуммаРубРасход	= 0;
			ТЗ.ПриходЕвро	= ТЗ.СуммаВалПриход; ТЗ.РасходЕвро	= ТЗ.ВалРасход;
			если глЕстьРеквизитШапки("ДокОснование", тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро;
				иначе
					ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро - ТЗ.ПриходЕвро;
				КонецЕсли;
			Иначе
				ТЗ.ОстатокЕвро	= ТЗ.РасходЕвро - ТЗ.ПриходЕвро;
			КонецЕсли;
			
		ИначеЕсли ТЗ.Валюта.Код="840" Тогда	//Доллары
			ТЗ.СуммаРубПриход	= 0;ТЗ.СуммаРубРасход	= 0;
			ТЗ.ПриходДоллары= ТЗ.СуммаВалПриход; ТЗ.РасходДоллары= ТЗ.СуммаВалРасход;
			если глЕстьРеквизитШапки("ДокОснование", тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары;
				иначе
					ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары - ТЗ.ПриходДоллары;
				КонецЕсли;
			иначе
				ТЗ.ОстатокДоллары	= ТЗ.РасходДоллары - ТЗ.ПриходДоллары;
			КонецЕсли;
		ИначеЕсли ТЗ.Валюта.Код="643" Тогда	//Рубли
			ТЗ.СуммаВалПриход=0; ТЗ.СуммаВалРасход=0;
			если глЕстьРеквизитШапки("ДокОснование", тз.текущийДокумент.вид())=1 Тогда
				если ТЗ.ТекущийДокумент.ДокОснование.Вид()="РабочийДень" Тогда	//У нас двойные обороты, в данном разрезе движений
					ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход;
				иначе
					ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход - ТЗ.СуммаРубПриход;
				КонецЕсли;
			иначе
				ТЗ.ОстатокРуб	= ТЗ.СуммаРубРасход - ТЗ.СуммаРубПриход;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	ТЗ.ВыбратьСтроки();	
	
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		гру	= тз.текущийдокумент;	//Для расшифровки записи и выводе уточняющей таблицы
		Таб.ВывестиСекцию("Группа1");
	КонецЦикла;

	Таб.ВывестиСекцию("Итого");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Расшифровка", "");
	
	
КонецПроцедуры


Процедура ОбработкаЯчейкиТаблицы(Значение, ФлагСтандОбраб, Таблица, Адрес)
    Если ТипЗначения(Значение)<>12 тогда
		СделайкаРасшифровочку(значение);		
	иначе
		глОбработкаРасшифровки(Значение,"","");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	//Если Элемент.ЭтоГруппа()=0 Тогда
	Если ВыбСтатьяДР.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
		ВыбСтатьяДР.ДобавитьЗначение(Элемент.ТекущийЭлемент(), Элемент.ТекущийЭлемент().ПолноеНаименование());
	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()  

Процедура ЗаписатьНастройку()
	
	
КонецПроцедуры


Расшифровка = СоздатьОбъект("СписокЗначений");
Расшифровка.Установить("Отчет", "СводныйОтчетПоБухгалтерии");

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);

