Перем Таб, КоличествоГруппировок, списокГрупп;
Процедура Сформировать() Далее  

Процедура Вверх()
	х=вариантЗаполнения.ТекущаяСтрока();
	Если х>1 Тогда
		вариантЗаполнения.СдвинутьЗначение(-1);
	КонецЕсли;
КонецПроцедуры
Процедура Вниз()
	х=вариантЗаполнения.ТекущаяСтрока();
	Если х<3 Тогда
		вариантЗаполнения.СдвинутьЗначение(1);
	КонецЕсли;
КонецПроцедуры
  
Процедура ПриОткрытии()
	Если (ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений") Тогда
		глРасшифровка = Форма.Параметр;
		ВызовИзДокумента = 1;
		
		ВыбНачПериода = глРасшифровка.Получить("ВыбНачПериода");
		ВыбКонПериода = глРасшифровка.Получить("ВыбКонПериода");
		ВыбКонтрагент.ДобавитьЗначение(глРасшифровка.Получить("Контрагент")); 
		//ПозСклад = СписокМагазинов.НайтиЗначение(глРасшифровка.Получить("Склад"));
		//СписокМагазинов.Пометка(ПозСклад,1);
		
		ВариантЗаполнения.Пометка(4,1);   
		ВыбВидВзаимодействияРозница = Перечисление.ВидВзаимодействия.Бонусы;
		
		Сформировать(); 
		
		
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
КонецПроцедуры	

//******************************************************************************
// ВывестиГруппировку(Запрос,Ном)
//
// Параметры:
//  Запрос - объект "Запрос"
//	Ном - номер выводимой группировки
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
//
// Описание:
//  Выводит в печатную форму одну группировку запроса. Если
//	Есть нижележащие группировки, они выводятся также с использованием рекурсивного
//	вызова этой же процедуры.
//
Процедура ВывестиГруппировку(Запрос,Ном)
	  
	Если Ном <= КоличествоГруппировок Тогда
		
		НазваниеГруппировки = списокГрупп.ПолучитьЗначение(Ном);
		//Если НазваниеГруппировки = "Документ" Тогда
		//	ТекОстС = Запрос.НачОстС;
		//	ТекОстК = Запрос.НачОстК;
		//КонецЕсли;         
		
		Пока Запрос.Группировка(Ном) = 1 Цикл
		    
			Если НазваниеГруппировки = "ТекущийДокумент" Тогда
				ЗначениеГруппировки = Запрос.ТекущийДокумент;
			ИначеЕсли НазваниеГруппировки = "КредДокумент" Тогда
				ЗначениеГруппировки = Запрос.КредДокумент;
			ИначеЕсли НазваниеГруппировки = "Магазин" Тогда
				ЗначениеГруппировки = Запрос.Магазин;
			ИначеЕсли НазваниеГруппировки = "Контрагент" Тогда
				ЗначениеГруппировки = Запрос.Контрагент;
			ИначеЕсли НазваниеГруппировки = "ВидВзаимодействия" Тогда
				ЗначениеГруппировки = Запрос.ВидВзаимодействия;
			ИначеЕсли НазваниеГруппировки = "АналитикаПродажи" Тогда
				ЗначениеГруппировки = Запрос.АналитикаПродажи;
			ИначеЕсли НазваниеГруппировки = "АналитикаСчетБезнал" Тогда
				ЗначениеГруппировки = Запрос.АналитикаСчетБезнал;	
			//Иначе                           
			//	ЗначениеГруппировки= Запрос.ЗначениеУпорядочивания(Ном);
			КонецЕсли; 
			
			//Если (Ном >= НомерГруппировкиПоТМЦ) и (Запрос.ЭтоГруппа(НазваниеГруппировки)=0) Тогда
			//	НазваниеСекции = НазваниеСекции + "К";
			//КонецЕсли;                               
			//ПечТекстСтроки = Запрос.ПолучитьАтрибут(НазваниеГруппировки);
			//Если (ТипЗначенияСтр(ПечТекстСтроки) = "Документ") или 
			//	 (ТипЗначенияСтр(ПечТекстСтроки) = "Справочник") Тогда
			//	ТекРасшифровка = ПечТекстСтроки;
			//Иначе
			//	ТекРасшифровка = "";
			//КонецЕсли;
			
			//Если (НазваниеГруппировки = "Договор") и (Ном < НомерГруппировкиПоКомиссионеру ) Тогда
			//	ПечТекстСтроки = ""+СокрП(ТекРасшифровка.Владелец.Наименование)+"; "+ПечТекстСтроки;
			//ИначеЕсли НазваниеГруппировки = "Партия" Тогда
			//	ПечТекстСтроки = СформироватьИнформациюОПартии(ПечТекстСтроки);
			//ИначеЕсли НазваниеГруппировки = "Документ" Тогда
			//	ПечТекстСтроки = ""+глПредставлениеДокумента(ПечТекстСтроки);
			//КонецЕсли;
			//ПечТекстСтроки = ?(ПустоеЗначение(ПечТекстСтроки)=1,глПредставлениеПустогоЗначения(НазваниеГруппировки),ПечТекстСтроки);
			Таб.ВывестиСекцию("Строка"+Ном);                                           
			//Если НазваниеГруппировки = "Документ" Тогда
			//	ПечатьСтрокиДокумента(Запрос,Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка,ТекОстС,ТекОстК);
			//Иначе
			//	ПечатьСтроки(Запрос,Ном,НазваниеСекции,ПечТекстСтроки,ТекРасшифровка);
			//КонецЕсли;
		
			// если есть более детальная группировка - выведем ее
			Если КоличествоГруппировок > Ном Тогда
				ВывестиГруппировку(Запрос,Ном+1);
			КонецЕсли;          
		
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // ВывестиГруппировку()

Процедура Сформировать()
	Перем Запрос, ТекстЗапроса,ТЗ_проценты, ТЗ_запрос;
	ВзаимодействиеЗалог = Перечисление.ВидВзаимодействия.Залоги;
	ВзаимодействиеБонус	= Перечисление.ВидВзаимодействия.Бонусы;
	ВзаимодействиеПроцент	= Перечисление.ВидВзаимодействия.Проценты;
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|Контрагент 			= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 		= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин 				= Регистр.Покупатели_розница.Магазин;
	|АналитикаПродажи 		= Регистр.Покупатели_розница.АналитикаПродажи;
	|АналитикаСчетБезнал 	= Регистр.Покупатели_розница.АналитикаСчетБезнал;
	|КредДокумент 			= Регистр.Покупатели_розница.КредДокумент;";
	//Если ВыбВидВзаимодействияРозница = Перечисление.ВидВзаимодействия.Оплата Тогда
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|КредДокумент 			= Регистр.Покупатели_розница.АналитикаСчетБезнал;";
	//ИначеЕсли ВыбВидВзаимодействияРозница = Перечисление.ВидВзаимодействия.Залоги Тогда 
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|КредДокумент 			= Регистр.Покупатели_розница.КредДокумент;"; 
	//ИначеЕсли ВыбВидВзаимодействияРозница = Перечисление.ВидВзаимодействия.Бонусы Тогда 
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|КредДокумент 			= Регистр.Покупатели_розница.КредДокумент;";	
	//Иначе	    
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|КредДокумент 			= Регистр.Покупатели_розница.АналитикаПродажи;";
	//КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|СуммаРуб 				= Регистр.Покупатели_розница.СуммаРуб;";
	//|Док 					= Регистр.Покупатели_розница.ТекущийДокумент;";
	
	//Если вариантЗаполнения.Пометка(5)=1 Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|ТекущийДокумент = Регистр.Покупатели_розница.ТекущийДокумент;";
	//КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|Функция СуммаРубНачОст 			= НачОст(СуммаРуб);";
	//|Функция СуммаРубПриход 	= (Приход(СуммаРуб)) или (Расход(СуммаРуб) когда ((Док.Вид() = ""ВозвратОтПокупателя"") или (Док.Вид() = ""ВозвратОтПокупателя_Розница""))); 
	Если ВыбВидВзаимодействияРозница = ВзаимодействиеБонус Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|Функция СуммаРубПриход 			= Приход(СуммаРуб) когда (((ТекущийДокумент.Вид() <> ""ВозвратОтПокупателя"") и (ТекущийДокумент.Вид() <> ""ВозвратОтПокупателя_Розница"")));";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Функция СуммаРубПриход 			= Приход(СуммаРуб);";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|Функция СуммаРубВозврат 			= Расход(СуммаРуб) когда (((ТекущийДокумент.Вид() = ""ВозвратОтПокупателя"") или (ТекущийДокумент.Вид() = ""ВозвратОтПокупателя_Розница"")));
	|Функция СуммаРубВозвратБонус		= Приход(СуммаРуб) когда (((ТекущийДокумент.Вид() = ""ВозвратОтПокупателя"") или (ТекущийДокумент.Вид() = ""ВозвратОтПокупателя_Розница"")) и (ВидВзаимодействия = ВзаимодействиеБонус));";
	//|Функция СуммаРубРасход 			= Расход(СуммаРуб) когда (((ТекущийДокумент.Вид() <> ""РасходнаяНакладнаяРозница"") и (ВидВзаимодействия = ВзаимодействиеБонус)) и (ТекущийДокумент.Вид() <> ""ВозвратОтПокупателя"") и ((ТекущийДокумент.Вид() = ""ВозвратОтПокупателя_Розница"") и (ВидВзаимодействия = ВзаимодействиеБонус)));
	Если ВыбВидВзаимодействияРозница = ВзаимодействиеБонус Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Функция СуммаРубРасход 			= Расход(СуммаРуб) когда ((ТекущийДокумент.Вид() <> ""РасходнаяНакладнаяРозница"") и (ВидВзаимодействия <> ВзаимодействиеБонус));";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Функция СуммаРубРасход 			= Расход(СуммаРуб) когда ((ТекущийДокумент.Вид() <> ""ВозвратОтПокупателя"") и (ТекущийДокумент.Вид() <> ""ВозвратОтПокупателя_Розница""));";
		//|Функция СуммаРубРасход 			= Расход(СуммаРуб);";
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	//|Функция СуммаРубРасход 			= Расход(СуммаРуб);
	|Функция СуммаРубРасходПогашено 	= Расход(СуммаРуб) когда (((ТекущийДокумент.Вид() = ""ПереводПроцентовВБонусы"") и (ВидВзаимодействия = ВзаимодействиеПроцент)) или((ТекущийДокумент.Вид() = ""РасходнаяНакладнаяРозница"") и (ВидВзаимодействия = ВзаимодействиеБонус)) или ((ТекущийДокумент.Вид() <> ""ВозвратЗалога_Розница"") и (ВидВзаимодействия = ВзаимодействиеЗалог)));
	|Функция СуммаРубКонОст 			= КонОст(СуммаРуб);";
	;
	
	КоличествоГруппировок = 0;
	
	списокГрупп=СоздатьОбъект("СписокЗначений");
	//Начинаем формировать группировки, в зависимости от выбора пользователя
	х = 0;
	Для х = 1 По 7 Цикл
		//Если вариантЗаполнения.Пометка(х)=1 Тогда   
		Если (вариантЗаполнения.Пометка(х)=0) Тогда //и (х=5) Тогда   
			Продолжить;
		КонецЕсли;	
		ТекстЗапроса=ТекстЗапроса+"Группировка "+вариантЗаполнения.ПолучитьЗначение(х)+" без Групп;";
		КоличествоГруппировок = КоличествоГруппировок + 1;
		//КонецЕсли;
		Если вариантЗаполнения.Пометка(х)=1 Тогда
			списокГрупп.ДобавитьЗначение(вариантЗаполнения.ПолучитьЗначение(х));
		КонецЕсли;
	КонецЦикла;	
	  
	Если КоличествоГруппировок > 5 Тогда
		Предупреждение("Нельзя сделать больше 5 группировок!",60);
		Возврат;
	КонецЕсли;
	
	ВыбМагазин=СоздатьОбъект("СписокЗначений");
	х = 0;
	Для х = 1 По списокМагазинов.РазмерСписка() Цикл
		Если списокМагазинов.Пометка(х)=1 Тогда
			ВыбМагазин.ДобавитьЗначение(списокМагазинов.ПолучитьЗначение(х));
		КонецЕсли;
	КонецЦикла;	
	
	ТекстЗапроса=ТекстЗапроса+
	"Условие(Контрагент в ВыбКонтрагент);
	|Условие(ВидВзаимодействия в ВыбВидВзаимодействияРозница);
	|Условие(Магазин в ВыбМагазин);
	|"//}}ЗАПРОС
	;
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	//Запрос.Выгрузить(ТЗ_запрос,1,0);
	
	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сформировать1");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	глОживить(1);
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 6, "ПроцентыРозница", "ПроцентыРозница");
	Состояние("Заполнение выходной таблицы...");
	//Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	ТЗ_1=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_2=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_3=СоздатьОбъект("ТаблицаЗначений"); 
	ТЗ_4=СоздатьОбъект("ТаблицаЗначений");
	ТЗ_5=СоздатьОбъект("ТаблицаЗначений");
	свернутьПо=""; 
	ПорядковыйНомерГруппировки = 1; 
	
	// ВЫВОД ГРУППИРОВОК ЗАПРОСА
	ВывестиГруппировку(Запрос,1);
	
	Таб.ВывестиСекцию("Итого");

	
	// Вывод заполненной формы
	//Таб.ОбластьПечати(3);
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);   
	//Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
	//	Таб.Защита(1);
	//КонецЕсли;
	Таб.Показать("Сформировать", "");
	
КонецПроцедуры

Процедура ВнестиКонтрагента()
	ОткрытьПодбор("Справочник.Контрагенты","ФормаДляВыбораРозница",Контекст,1);
КонецПроцедуры 

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.ЭтоГруппа()=0 Тогда
		Если ВыбКонтрагент.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
			ВыбКонтрагент.ДобавитьЗначение(Элемент.ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()    

Процедура ОбработкаЯчейкиТаблицы(Значение, Флаг)
	Если (Значение.Вид() = "АналитикаСчетБезналПроценты") Тогда
	    Док = СоздатьОбъект("Документ.СчетБнРозница");
		Если Док.НайтиПоНомеру(Значение.НомерДок, Значение.ДатаДок) = 1 Тогда
			ОткрытьФорму(Док.ТекущийДокумент());	
		КонецЕсли;	
	    Флаг = 0;
	ИначеЕсли (Значение.Вид() = "АналитикаПродажиПроценты") Тогда
		Док = СоздатьОбъект("Документ."+СокрЛП(Значение.ВидДокумента));	
		Если Док.НайтиПоНомеру(Значение.НомерДок, Значение.ДатаДок) = 1 Тогда
			ОткрытьФорму(Док.ТекущийДокумент());	
		КонецЕсли;  
		Флаг = 0;  
	Иначе
		Флаг = 1;
	КонецЕсли;	
КонецПроцедуры	
//******************************************************************************
//			Операторы основной программы			

вариантЗаполнения.УдалитьВсе();
вариантЗаполнения.ДобавитьЗначение("Контрагент");
вариантЗаполнения.ДобавитьЗначение("Магазин");
вариантЗаполнения.ДобавитьЗначение("ВидВзаимодействия","Вид взаимодействия");
вариантЗаполнения.ДобавитьЗначение("КредДокумент"); 
вариантЗаполнения.ДобавитьЗначение("АналитикаПродажи", "Продажа");
вариантЗаполнения.ДобавитьЗначение("АналитикаСчетБезнал", "Счет безнал");
вариантЗаполнения.ДобавитьЗначение("ТекущийДокумент", "Документ движения");

списокМагазинов.УдалитьВсе();
сп=СоздатьОбъект("Справочник.Склады");
сп.ВыбратьЭлементы();
Пока сп.ПолучитьЭлемент()=1 Цикл
    //Если сп.Магазин=1 Тогда
        списокМагазинов.ДобавитьЗначение(сп.ТекущийЭлемент());
    //КонецЕсли;
КонецЦикла;

ВыбКонтрагент.УдалитьВсе();
