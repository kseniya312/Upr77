////////////////////////////////////////////////////////////////////////////////
//  ОПИСАНИЕ МОДУЛЬНЫХ ПЕРЕМЕННЫХ
Перем ТекСтрокаВТаблице; // текущая строка в таблице значений  МФ

// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 

Перем ИмяОбъекта;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//                       
//******************************************************************************
// ВыбратьПоФильтру()
//
// Параметры:
//  Нет
//
// Описание:
//  Открывает обработку отбора элементов по произвольному фильтру
//
Процедура ВыбратьПоФильтру()
	
	Перем  ВидЗначенияПодбора;
	
	ВидЗначенияПодбора=СокрЛП(ТаблицаМФ.Вид);
	
	Если ПустоеЗначение(ВидЗначенияПодбора)=1 Тогда
		Возврат;
	КонецЕсли;
	
	СписокПараметров=СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("",                "ИмяВызвавшейФормы");
	СписокПараметров.ДобавитьЗначение(ТаблицаМФ.Тип,     "Тип");
	СписокПараметров.ДобавитьЗначение(ВидЗначенияПодбора,"Вид");
	СписокПараметров.ДобавитьЗначение(СписокЭлементовМФ, "Объекты");
	ТаблицаМФ.ФлВкл=2;
	ОткрытьФорму("Обработка.ПодборОбъектов#",СписокПараметров);
	
КонецПроцедуры	// ВыбратьПоФильтру

//******************************************************************************
// ПерерисовкаНазванийЗакладок
//
// Параметры:
// 	Нет
//
// Описание:
//  Добавляет "(!)" в заголовок закладки с множественным фильтром, когда этот фильтр задан
//
Функция ПерерисовкаНазванийЗакладок()      
	
	Форма.Закладки.УстановитьЗначение(2,?(глМножественныйФильтрЗадан(ТаблицаМФ)=1,"(!) ","")+"Множественный фильтр");
	
КонецФункции // ПерерисовкаНазванийЗакладок	
                         
//******************************************************************************
// УправлениеДиалогом()
//
// Параметры: 
//	Нет
//
// Возвращаемое значение: 
//	Нет
//
// Описание: 
//	Управление доступностью элементов диалога.
//
Процедура УправлениеДиалогом()
	
	Если Форма.Закладки.ТекущаяСтрока() = 1 Тогда           
		Форма.ИспользоватьСлой("Шапка,Подвал,Основной1,Основной2,Разделитель"+СокрЛП(ВидРазделителя));
	Иначе     
		Форма.ИспользоватьСлой("Шапка,МФ,Подвал");
	КонецЕсли;     
	
	Если СпособАнализа = 1 Тогда
		Форма.ПроцентОбъектов.    Доступность(1);
		Форма.ВозрастанияУбывания.Доступность(1);
		
		Форма.ПроцентСумм.        Доступность(0);
	Иначе     
		Форма.ПроцентОбъектов.    Доступность(0);
		Форма.ВозрастанияУбывания.Доступность(0);
		
		Форма.ПроцентСумм.        Доступность(1);
	КонецЕсли;
	
КонецПроцедуры //УправлениеДиалогом()   

//******************************************************************************
// ПриИзмененииПоказателя()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Вызывается из формулы элемента диалога "ВыбПоказатель".
//
Процедура ПриИзмененииПоказателя()
	                                                             
	Представление = "";
	ВыбПоказатель.ПолучитьЗначение(ВыбПоказатель.ТекущаяСтрока(),Представление);
	Форма.ПодпПоказатель1.Заголовок("показателя """+Представление+"""");
	Форма.ПодпПоказатель2.Заголовок("показателя """+Представление+"""");
	
	Если ВыбПоказатель.ТекущаяСтрока() = 3 Тогда // процент прибыли
		СпособАнализа = 1;
		Форма.СпособАнализа. Доступность(0);
		Форма.СпособАнализа2.Доступность(0);
		Форма.СписВидОтчета. Доступность(0);
		СписВидОтчета.ТекущаяСтрока(1); // гистограмма только
	Иначе
		Форма.СпособАнализа. Доступность(1);
		Форма.СпособАнализа2.Доступность(1);
		Форма.СписВидОтчета. Доступность(1);
	КонецЕсли;                       
	
	УправлениеДиалогом();
	
КонецПроцедуры // ПриИзмененииПоказателя()

//******************************************************************************
// РасшифровкаОбновить(Обновить)
//
// Параметры:
//  Обновить = 	1 - нажата кнопка "Обновить"
//				2 - нажата кнопка "Настройка"	
//
// Возвращаемое значение: Расшифровка (список значений)
//
// Вызывается из формул элементов диалога:
//  из таблицы, кнопки "Обновить" и "Настройка"
//
// Описание:  функция для стандартного механизма кнопок ""Обновить" и "Настройка""
//  помещает значение параметра в список Расшифровка  и возвращает этот список 
//
Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции //РасшифровкаОбновить()                                            

//******************************************************************************
// СоздатьТекстЗапросаПоТМЦ()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Текст запроса по ТМЦ
//
// Описание:
//  Создает текст запроса, необходимого для АВС анализа ТМЦ.
//
Функция СоздатьТекстЗапросаПоТМЦ()
	
	Если ДатаКонца<ПолучитьДатуТА() Тогда                             
		СтрокаПо = "по ДатаКонца";
	Иначе     
		СтрокаПо = "";
	КонецЕсли;

	ТекстЗапроса = "//{{ЗАПРОС(Сформировать)
	|Период с ДатаНачала "+СтрокаПо+";
	|Фирма 			= Регистр.Продажи.Фирма;
	|УпрАналитика	= Регистр.Продажи.Фирма.УпрАналитика;
	|ЮрЛицо 		= Регистр.Продажи.Фирма.ЮрЛицо;
	|Покупатель 	= Регистр.Продажи.Покупатель;
	|СвойствоПок 	= Регистр.Продажи.Покупатель.ОсновноеСвойство.ЗначениеСвойства;
	|Номенклатура	= Регистр.Продажи.Номенклатура;                
	|СвойствоТМЦ 	= Регистр.Продажи.Номенклатура.ОсновноеСвойство.ЗначениеСвойства;";
	
	
	// Проверка на необходимость включения в запрос переменной "Автор"
	ЕстьАвтор = 0;
	ЕстьПроект = 0;                          
	НомСтроки = 0;
	НомКолонки = 0;
	
	// Сначала проверим, есть ли множественный фильтр по автору.
	Если ТаблицаМФ.НайтиЗначение("Автор", НомСтроки, НомКолонки) = 1 Тогда
		Если ТаблицаМФ.ПолучитьЗначение(НомСтроки, "ФлВкл") = 2  Тогда
		    ЕстьАвтор = 1;
		КонецЕсли;
	КонецЕсли;                                                  
	
	// Проверка на необходимость включения в запрос переменной "Проект"    
	НомСтроки = 0;
	НомКололонки = 0;
	Если ТаблицаМФ.НайтиЗначение("Проект", НомСтроки, НомКолонки) = 1 Тогда
		Если ТаблицаМФ.ПолучитьЗначение(НомСтроки, "ФлВкл") = 2  Тогда
		    ЕстьПроект = 1;
		КонецЕсли;
	КонецЕсли;            
	
	Если ЕстьАвтор=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"
		|Автор      = Регистр.Продажи.ТекущийДокумент.Автор;";
	КонецЕсли;     
	
	Если ЕстьПроект=1 Тогда
		ТекстЗапроса = ТекстЗапроса +
		"
		|Проект  = Регистр.Продажи.ТекущийДокумент.Проект;";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"
	|Себест  = Регистр.Продажи.Себестоимость;
	|Функция СуммаСебест = Сумма(Себест);
	|ПродСт  = Регистр.Продажи.ПродСтоимость;
	|Функция СуммаПродСт = Сумма(ПродСт);
	|СебестВ = Регистр.Продажи.СебестоимостьВ;
	|Функция СуммаСебестВ = Сумма(СебестВ);
	|ПродСтВ = Регистр.Продажи.ПродСтоимостьВ;
	|Функция СуммаПродСтВ = Сумма(ПродСтВ);";
	                                             
	Если ВидОбъекта = 1 Тогда //Номенклатура
		ТекстЗапроса = ТекстЗапроса + "Группировка Номенклатура без групп;";
		ИмяОбъекта = "Номенклатура";
		
	ИначеЕсли ВидОбъекта = 2 Тогда // свойство Номенклатуры                 
		ТекстЗапроса = ТекстЗапроса + "Группировка СвойствоТМЦ;";
		ИмяОбъекта = "СвойствоТМЦ";
	
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
	
КонецФункции // СоздатьТекстЗапросаПоТМЦ()
                        
//******************************************************************************
// ПостроитьГистограмму(Диаграмма, ТИЗапрос)
//
// Параметры: 
//  Диаграмма - объект "диаграмма"       
//  ТИЗапрос - таблица итогов, подготовленная для построения диаграммы
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Построение диаграммы на основе рассчитанных данных.
//
Процедура ПостроитьГистограмму(Диаграмма, ТИЗапрос)
	
	Диаграмма.КоличествоТочек(ТИЗапрос.КоличествоСтрок());
	Диаграмма.КоличествоСерий(1);

	ПоказательАнализа = ВыбПоказатель.ПолучитьЗначение(ВыбПоказатель.ТекущаяСтрока());

	КолСтрок = ТИЗапрос.КоличествоСтрок();
    Для Сч = 1 По КолСтрок Цикл
		
		НомерСтроки = КолСтрок - Сч + 1;
		
		ЗначениеТочки = ТИЗапрос.ПолучитьЗначение(НомерСтроки,ПоказательАнализа);    
		
		ТИЗапрос.ПолучитьСтрокуПоНомеру(НомерСтроки);
		Диаграмма.УстановитьИмяТочки(Сч,ТИЗапрос.Объект);
		Диаграмма.УстановитьЗначение(Сч,1,ЗначениеТочки,""+ТИЗапрос.Объект+": "+глФРМ(ЗначениеТочки));	// точка, серия, знач, расш	

	КонецЦикла;
	
КонецПроцедуры // ПостроитьГистограмму()
                                      
//******************************************************************************
// ПостроитьКруговую(Диаграмма, ТИЗапрос)
//
// Параметры: 
//  Диаграмма - объект "диаграмма"       
//  ТИЗапрос - таблица итогов, подготовленная для построения диаграммы
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Построение диаграммы на основе рассчитанных данных.
//
Процедура ПостроитьКруговую(Диаграмма, ТИЗапрос)
	
	Диаграмма.КоличествоСерий(ТИЗапрос.КоличествоСтрок());
	Диаграмма.КоличествоТочек(1);

	ПоказательАнализа = ВыбПоказатель.ПолучитьЗначение(ВыбПоказатель.ТекущаяСтрока());

	КолСтрок = ТИЗапрос.КоличествоСтрок();
    Для Сч = 1 По КолСтрок Цикл
		
		ЗначениеТочки = ТИЗапрос.ПолучитьЗначение(Сч,ПоказательАнализа);    
		                 
		Если ЗначениеТочки < 0  Тогда
			ЗначениеТочки = 0; // круговая не может быть построена на отрицательных значениях!!!
		КонецЕсли;
			
		ТИЗапрос.ПолучитьСтрокуПоНомеру(Сч);
		Диаграмма.УстановитьИмяСерии(Сч,ТИЗапрос.Объект);
		Диаграмма.УстановитьЗначение(1,Сч,ЗначениеТочки,""+ТИЗапрос.Объект+": "+глФРМ(ЗначениеТочки));	// точка, серия, знач, расш	

	КонецЦикла;
	
КонецПроцедуры // ПостроитьКруговую()

//******************************************************************************
// Сформировать(ЗакрытьДиалог=0)
//
// Параметры:
//   ЗакрытьДиалог - флаг того, что после формирования отчета надо закрыть диалог
//
// Возвращаемое значение: НЕТ
// 
// Вызывается из формул элементов диалога:
//   кнопки "Сформировать" и "ОК"
//
// Описание:   запускает отчет
//
Процедура Сформировать(ЗакрытьДиалог=0)
	
	Перем Запрос, ТекстЗапроса;
	
	Если глПроверкаДаты(ДатаНачала,ДатаКонца)=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
	   	Таб = СоздатьОбъект("Таблица");
	Иначе
	 	Таб.Очистить();
	КонецЕсли;      
	                                        
	Таб.ИсходнаяТаблица( "АВСАнализТМЦ" );
	
	// Здесь формируется отчет, который использует регистры, критичные к
	// последовательности проведения документов
	// поэтому сравним установленные даты периода формируемого отчета с ГП
	Если глПроверкаАктуальностиОтчета(ДатаНачала,ДатаКонца,Последовательность.ОсновнаяПоследовательность)=0 Тогда
		Возврат;
	КонецЕсли;	  
	
	
	Расшифровка = СоздатьОбъект("СписокЗначений");
    Расшифровка.Установить("Отчет", "АВСАнализТМЦ");
	
	// все настройки помещаем в список
	Расшифровка.Установить("ДатаНачала", 	 ДатаНачала);
    Расшифровка.Установить("ДатаКонца", 	 ДатаКонца);
	Расшифровка.Установить("ВыбРазделитель1",ВыбРазделитель1);
	Расшифровка.Установить("ВыбРазделитель2",ВыбРазделитель2);
	Расшифровка.Установить("ВыбРазделитель3",ВыбРазделитель3);
	Расшифровка.Установить("ВидРазделителя", ВидРазделителя);

	Расшифровка.Установить("ВыбТМЦ",		 ВыбТМЦ);
	Расшифровка.Установить("ВыбПокупатель",	 ВыбПокупатель);
	Расшифровка.Установить("ВыбПоказатель",	 ВыбПоказатель.ТекущаяСтрока());
	Расшифровка.Установить("СписВидОтчета",	 СписВидОтчета.ТекущаяСтрока());
	Расшифровка.Установить("ВидОбъекта",	 ВидОбъекта);
	Расшифровка.Установить("СпособАнализа",	 СпособАнализа);
	Расшифровка.Установить("ПроцентОбъектов",ПроцентОбъектов);
	Расшифровка.Установить("ВозрастанияУбывания",ВозрастанияУбывания.ТекущаяСтрока());
	Расшифровка.Установить("ПроцентСумм",    ПроцентСумм);
	
	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были
                
	БылЗаданМФ = глМножественныйФильтрЗадан(ТаблицаМФ);
	// запомним МФ только если он задан
    Если  БылЗаданМФ = 1 Тогда
		Расшифровка.Установить("ТаблицаМФ", ТаблицаМФ); 
	КонецЕсли;
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	      
	// формируем текст запроса разными способами, в зависимости от объекта анализа
	ТекстЗапроса = СоздатьТекстЗапросаПоТМЦ();
	
	Загол="";       
	Если СпособАнализа = 1 Тогда                                                 
		Представление = "";             
		Представление2 = "";
		ВозрастанияУбывания.ПолучитьЗначение(ВозрастанияУбывания.ТекущаяСтрока(),Представление);
		ВыбПоказатель.      ПолучитьЗначение(ВыбПоказатель.      ТекущаяСтрока(),Представление2);
		ЗаголУсловия = "Показано "+ПроцентОбъектов+"% объектов в порядке "+Представление
		             + " показателя """+Представление2+"""";	
	Иначе
		Представление = "";             
		ВыбПоказатель.      ПолучитьЗначение(ВыбПоказатель.      ТекущаяСтрока(),Представление2);
		ЗаголУсловия = "Показаны объекты, дающие "+ПроцентСумм+"% "
		             + " показателя """+Представление2+"""";	
	КонецЕсли;
	
	НетОш = 1; // нет ошибок при наложении фильтров
	Если ВидРазделителя = 1 Тогда
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Фирма",ВыбРазделитель1,"ВыбРазделитель1",ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ЮрЛицо",,,ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "УпрАналитика",,,ТекстЗапроса,Загол);
	ИначеЕсли ВидРазделителя = 2 Тогда                                                   
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ЮрЛицо",ВыбРазделитель2,"ВыбРазделитель2",ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Фирма",,,ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "УпрАналитика",,,ТекстЗапроса,Загол);
	ИначеЕсли ВидРазделителя = 3 Тогда                                                   
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "УпрАналитика",ВыбРазделитель3,"ВыбРазделитель3",ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Фирма",,,ТекстЗапроса,Загол);
		НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "ЮрЛицо",,,ТекстЗапроса,Загол);
	КонецЕсли;
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Номенклатура",ВыбТМЦ,       "ВыбТМЦ",       ТекстЗапроса,Загол,"СвойстваНоменклатуры");
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Покупатель",  ВыбПокупатель,"ВыбПокупатель",ТекстЗапроса,Загол,"СвойстваКонтрагентов");
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Автор",   ,        ,ТекстЗапроса,Загол,"Автор");
	НетОш = НетОш * глФильтрПоПеременнойЗапроса(ТаблицаМФ, "Проект",  ,        ,ТекстЗапроса,Загол,"Проект");
	
	Если НетОш = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПечЗаголовок = "АВС - анализ ТМЦ ("+глДоллары+")";
	                                   
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
                  
	ТИЗапрос = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТИЗапрос,,0);                     
	ТИЗапрос.НоваяКолонка("Прибыль",     "Число",12,2);
	ТИЗапрос.НоваяКолонка("Прибыльность","Число",12,3);
	ТИЗапрос.НоваяКолонка("Объект");
	
	КолСтрок = ТИЗапрос.КоличествоСтрок();
    Для Сч = 1 По КолСтрок Цикл
		                        
		Объект = ТИЗапрос.ПолучитьЗначение(Сч, ИмяОбъекта);
		
		ТИЗапрос.ПолучитьСтрокуПоНомеру(Сч);
		ТИЗапрос.Объект       = Объект;
		// возвраты учетем со знаком (-)
		ТИЗапрос.СуммаПродСт  = ТИЗапрос.СуммаПродСт - ТИЗапрос.СуммаПродСтВ;
		ТИЗапрос.СуммаСебест  = ТИЗапрос.СуммаСебест - ТИЗапрос.СуммаСебестВ;
		
		ТИЗапрос.Прибыль      = ТИЗапрос.СуммаПродСт - ТИЗапрос.СуммаСебест;
		ЗнакПрофит 	          = ?(ТИЗапрос.СуммаПродСт < 0,-1, 1);
		ТИЗапрос.Прибыльность = ?(ТИЗапрос.СуммаСебест = 0, 0, ЗнакПрофит*ТИЗапрос.Прибыль/ТИЗапрос.СуммаСебест*100);
		
	КонецЦикла;
	         
	ПоказательАнализа = ВыбПоказатель.ПолучитьЗначение(ВыбПоказатель.ТекущаяСтрока());
	                                      
	Если СпособАнализа = 1 Тогда // по количеству упорядоченного ряда объектов
		ТИЗапрос.Сортировать(ПоказательАнализа + ВозрастанияУбывания.ПолучитьЗначение(ВозрастанияУбывания.ТекущаяСтрока()));    
		КолОбъектов = ТИЗапрос.КоличествоСтрок();
		ОставимОбъектов = Мин(Окр(КолОбъектов * ПроцентОбъектов / 100,0,1),КолОбъектов);
		
		Для Сч = ОставимОбъектов + 1 По КолОбъектов Цикл
			ТИЗапрос.УстановитьЗначение(Сч,"Объект","< ПРОЧИЕ >");
		КонецЦикла;
		
	Иначе // по проценту от суммы показателя
		ТИЗапрос.Сортировать(ПоказательАнализа + "-"); // по убыванию
		ОставимСумму = Мин(ТИЗапрос.Итог(ПоказательАнализа) * ПроцентСумм / 100,ТИЗапрос.Итог(ПоказательАнализа));
		НакопленнаяСумма = 0;
		
		КолСтрок = ТИЗапрос.КоличествоСтрок();
		ПервоеПревышение = 1; // первый объект, "захвативший" границу, оставляем.
    	Для Сч = 1 По КолСтрок Цикл
            НакопленнаяСумма = НакопленнаяСумма + ТИЗапрос.ПолучитьЗначение(Сч,ПоказательАнализа);
			Если НакопленнаяСумма > ОставимСумму Тогда
			    Если ПервоеПревышение = 1 Тогда
					ПервоеПревышение = 0;
				Иначе
					ТИЗапрос.УстановитьЗначение(Сч,"Объект","< ПРОЧИЕ >");
			    КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	            
	ПечЗаголовокСтолбца = ?(ВидОбъекта = 1, "ТМЦ", "Свойство ТМЦ"); 
	                                
	глЧислоСтрок = 1;
	
	Таб.ВывестиСекцию("Кнопки");
	Таб.ВывестиСекцию("Шапка");
	Таб.ВывестиСекцию("ЗаголовокТаблицы");
	
	НачПовт = Таб.ВысотаСекции("Кнопки") + Таб.ВысотаСекции("Шапка");
    КонПовт = НачПовт + Таб.ВысотаСекции("ЗаголовокТаблицы");
	
	Таб.ПовторятьПриПечатиСТроки(НачПовт + 1, КОнПовт);
	глОживить(1);                 
	
	ТИЗапрос.Свернуть("Объект","СуммаСебест,СуммаПродСт,Прибыль,Прибыльность");
	
	Если СпособАнализа = 1 Тогда // по количеству упорядоченного ряда объектов
		ТИЗапрос.Сортировать(ПоказательАнализа + ВозрастанияУбывания.ПолучитьЗначение(ВозрастанияУбывания.ТекущаяСтрока()));    
	Иначе // по проценту от суммы показателя
		ТИЗапрос.Сортировать(ПоказательАнализа + "-"); // по убыванию
	КонецЕсли;
	
	ТИЗапрос.ВыбратьСтроки();
	Пока ТИЗапрос.ПолучитьСтроку() = 1 Цикл
		ПечТекстСтроки  = ТИЗапрос.Объект;
		ТекРасшифровка  = ПечТекстСтроки;   
		
		Если ПустоеЗначение(ПечТекстСтроки) = 1 Тогда
		    ПечТекстСтроки = глПредставлениеПустогоЗначения(ИмяОбъекта);
		КонецЕсли;
		
		ПечСебест       =  глФРМ(ТИЗапрос.СуммаСебест);
		ПечПродСт       =  глФРМ(ТИЗапрос.СуммаПродСт);
		ПечПрибыль      =  глФРМ(ТИЗапрос.Прибыль);
		
		ЗнакПрофит 	    = ?(ТИЗапрос.СуммаПродСт < 0,-1, 1);
	    ПечПрибыльность = ?(ТИЗапрос.СуммаСебест = 0, 0, ЗнакПрофит * ТИЗапрос.Прибыль / ТИЗапрос.СуммаСебест * 100);
		ТИЗапрос.Прибыльность = ПечПрибыльность;
    	ПечПрибыльность = Формат(ПечПрибыльность,"Ч12.3");

		Таб.ВывестиСекцию("Строка1");  
		глОживить(1);
	КонецЦикла;
	
	ПечСебест       =  глФРМ(ТИЗапрос.Итог("СуммаСебест"));
	ПечПродСт       =  глФРМ(ТИЗапрос.Итог("СуммаПродСт"));
	ПечПрибыль      =  глФРМ(ТИЗапрос.Итог("Прибыль"));            
	                  
	ЗнакПрофит 	    = ?(ТИЗапрос.Итог("СуммаПродСт") < 0,-1, 1);
	ПечПрибыльность = ?(ТИЗапрос.Итог("СуммаСебест") = 0, 0, ЗнакПрофит * ТИЗапрос.Итог("Прибыль") / ТИЗапрос.Итог("СуммаСебест") * 100);
	ПечПрибыльность = Формат(ПечПрибыльность,"Ч12.3");
	
	Таб.ВывестиСекцию("Всего");  
	глОживить(1);
    
	// вывод диаграммы
	Представление = "";
	ВыбПоказатель.ПолучитьЗначение(ВыбПоказатель.ТекущаяСтрока(),Представление);
	ПечЗаголовок = Представление ;
	
	Таб.ВывестиСекцию(СписВидОтчета.ПолучитьЗначение(СписВидОтчета.ТекущаяСтрока()));  
	
	Таб.Опции(0, 0, 2, 0, "АВСАнализТМЦ", "АВСАнализТМЦ");
	Таб.ОбластьПечати(3);
	
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);      
	Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
		Таб.Защита(1);
	КонецЕсли;

	Таб.Показать("АВС - анализ ТМЦ", "");
	
	Если (Обновить = 2)ИЛИ(ЗакрытьДиалог=1) Тогда
		СтрокаДействийФормы = "#Закрыть";
	КонецЕсли;
	
КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
//  ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ

//******************************************************************************
// Предопределенная процедура
Процедура ПриОткрытии(ФлагВосстановленияНастройки)	
	
	//                  тип          вид           переменная  название
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Номенклатура", "Номенклатура",  "По номенклатуре");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Контрагенты", "Покупатель",  "По покупателям");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ЗначенияСвойств", "Номенклатура",  "По свойствам номенклатуры");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","ЗначенияСвойств", "Покупатель",  "По свойствам покупателей");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Пользователи", "Автор",  "По авторам документов");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Проекты", "Проект",  "По проектам");               
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","Фирмы", "Фирма",  "По фирмам");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","СвоиЮрЛица", "ЮрЛицо",  "По юр. лицам");
	глДобавитьВТаблицуМФ(ТаблицаМФ,"Справочник","УпрАналитика", "УпрАналитика",  "По упр. аналитике");

	Если ФлагВосстановленияНастройки = 0 Тогда
		
		ВидОбъекта      = 1;
		СпособАнализа   = 1;
		ВидРазделителя  = 1;
		ПроцентОбъектов = 100;
		
		ДатаНачала      = глЗначениеПоУмолчанию("ОсновнаяДатаНачалаОтчетов");
		Если ПустоеЗначение(ДатаНачала) = 1 Тогда
			ДатаНачала      = НачМесяца(ДатаКонца);    
		КонецЕсли;
	КонецЕсли;
	
	Если глФлагРасшифровки = 1 Тогда 
		Обновить = глОбновить;
		
		// восстанавливаем настройки из списка
		ДатаНачала 		= глРасшифровка.Получить("ДатаНачала");
		ДатаКонца 		= глРасшифровка.Получить("ДатаКонца");
		ВидРазделителя	= глРасшифровка.Получить("ВидРазделителя");
		ВыбРазделитель1	= глРасшифровка.Получить("ВыбРазделитель1");
		ВыбРазделитель2	= глРасшифровка.Получить("ВыбРазделитель2");
		ВыбРазделитель3	= глРасшифровка.Получить("ВыбРазделитель3");

		ВыбПокупатель 	= глРасшифровка.Получить("ВыбПокупатель");
		ВыбТМЦ 			= глРасшифровка.Получить("ВыбТМЦ");
		
		ВыбПоказатель.      ТекущаяСтрока(глРасшифровка.Получить("ВыбПоказатель"));
		СписВидОтчета.      ТекущаяСтрока(глРасшифровка.Получить("СписВидОтчета"));        
		ВозрастанияУбывания.ТекущаяСтрока(глРасшифровка.Получить("ВозрастанияУбывания"));
		ВидОбъекта 		= глРасшифровка.Получить("ВидОбъекта");
		СпособАнализа   = глРасшифровка.Получить("СпособАнализа");
		ПроцентОбъектов = глРасшифровка.Получить("ПроцентОбъектов");
		ПроцентСумм     = глРасшифровка.Получить("ПроцентСумм");
		
		Если ТипЗначенияСтр(глРасшифровка.Получить("ТаблицаМФ"))="ТаблицаЗначений" Тогда
			ТаблицаМФ.Загрузить(глРасшифровка.Получить("ТаблицаМФ"));
		КонецЕсли;
		
		Если Обновить <> 0 Тогда
			Таб = глТаблица;
		КонецЕсли;           
		
		Если Обновить <> 2 Тогда
			Сформировать();
			СтатусВозврата(0);
			Возврат;       
		КонецЕсли;           
	Иначе
		Обновить = 0;
	КонецЕсли;                      
	
	ПерерисовкаНазванийЗакладок();

	ТаблицаМФ.ВидимостьКолонки("Тип",0);
	ТаблицаМФ.ВидимостьКолонки("Вид",0);
	ТаблицаМФ.ВидимостьКолонки("СписокЭлементов",0);          
	ТаблицаМФ.ВидимостьКолонки("ТипМФ",0);
	ТаблицаМФ.ВидимостьКолонки("ИмяПеременной",0);
	
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");

	УправлениеДиалогом();
	ПриИзмененииПоказателя();
	
КонецПроцедуры		// ПриОткрытии()       

//******************************************************************************
// Предопределенная процедура.
Процедура ВводНового()
	
	// эта предопределенная процедура выполняется при восстановлении настройки
	ПерерисовкаНазванийЗакладок();
	УправлениеДиалогом();   
	ПриИзмененииПоказателя();
	ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
	
КонецПроцедуры // ВводНового()
                                                                                
//******************************************************************************
// Предопределенная процедура
Процедура ПриВыбореЗакладки(Номер,Значение)	
	// закладки
    Если Номер=1 Тогда
    	глПриСменеСтрокиТаблицыМФ(1,ТекСтрокаВТаблице,Контекст); // записываем изменения если они были
	КонецЕсли;      
	УправлениеДиалогом();
	ПерерисовкаНазванийЗакладок();
	
КонецПроцедуры	// ПриВыбореЗакладки
                                       
//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПодбора(Значение)  
	
	Если (СписокЭлементовМФ.НайтиЗначение(Значение)=0) Тогда
		Представление=""+Значение;
		Если ТипЗначенияСтр(Значение)="Справочник" Тогда
			Если СокрЛП(Метаданные.Справочник(Значение.Вид()).Владелец) <> "Метаданные" Тогда
				Представление=Представление+" ("+Значение.Владелец+")";
			КонецЕсли;
		КонецЕсли;	
		СписокЭлементовМФ.ДобавитьЗначение(Значение,Представление);
		ТаблицаМФ.ФлВкл=2;
	КонецЕсли;
	
КонецПроцедуры  // ОбработкаПодбора

ДатаКонца  = ПолучитьДатуТА();

СписВидОтчета.ДобавитьЗначение("ДиаграммаГ","Гистограмма");
СписВидОтчета.ДобавитьЗначение("ДиаграммаК","Круговая");
СписВидОтчета.ТекущаяСтрока(1);

ВозрастанияУбывания.ДобавитьЗначение("-","убывания");
ВозрастанияУбывания.ДобавитьЗначение("+","возрастания");
ВозрастанияУбывания.ТекущаяСтрока(1);

ВыбПоказатель.ДобавитьЗначение("СуммаПродСт", "Выручка по отгрузке");
ВыбПоказатель.ДобавитьЗначение("Прибыль",     "Прибыль по отгрузке");
ВыбПоказатель.ДобавитьЗначение("Прибыльность","Прибыльность (%) по отгрузке");
ВыбПоказатель.ТекущаяСтрока(1);

// инициализация переменных множественного фильтра
ТипМФ.УдалитьВсе();
ТипМФ.ДобавитьЗначение("одно из");
ТипМФ.ДобавитьЗначение("все кроме");

ТаблицаМФ.УдалитьСтроки();
Пока ТаблицаМФ.КоличествоКолонок()>0 Цикл
    ТаблицаМФ.УдалитьКолонку(1);
КонецЦикла;  

ТаблицаМФ.НоваяКолонка("Тип");
ТаблицаМФ.НоваяКолонка("Вид");
ТаблицаМФ.НоваяКолонка("ИмяПеременной");
ТаблицаМФ.НоваяКолонка("СписокЭлементов"); // список элементов, по которым производим фильтрацию
ТаблицаМФ.НоваяКолонка("ТипМФ"); // текущая строка списка ТипМФ
ТаблицаМФ.НоваяКолонка("ФлВкл","Число",1,,"Вкл",5,,); // фильтр включен ("1" или "0")
ТаблицаМФ.НоваяКолонка("Представление",,,,"Вид фильтра:");
ТаблицаМФ.ВыводитьПиктограммы("ФлВкл");
                                                                                
ТекСтрокаВТаблице="";

// Инициализируем закладки
Форма.ИспользоватьЗакладки(1);
Форма.Закладки.ДобавитьЗначение(1,"Основная");
Форма.Закладки.ДобавитьЗначение(2,"Множественный фильтр");
Форма.Закладки.ТекущаяСтрока(1);