// используются для стандартного механизма кнопок "Обновить" и "Настройка"
Перем Таб;		
Перем Обновить;
Перем Расшифровка; 
Перем ВыбирайГруппу;                        
Перем ТаблицыВывода,
	  ВремТабл,
	  ТаблЗап,ВремТабл_парам,
	  строки,спГруппировки;
	  
Процедура Сформировать() далее


Функция РасшифровкаОбновить(Обновить)
	Расшифровка.Установить("Обновить", Обновить);
	Возврат Расшифровка;
КонецФункции //РасшифровкаОбновить()                                            

процедура ПриОткрытии()
	Обновить=глОбновить;
	
	Если Обновить <> 0 Тогда
		Таб = глТаблица;
	КонецЕсли;           
	
	Если Обновить=1 тогда
		ВыбНачПериода 		= глРасшифровка.Получить("ВыбНачПериода");
		ВыбКонПериода 		= глРасшифровка.Получить("ВыбКонПериода");
		ВыбКонтрагент 		= глРасшифровка.Получить("ВыбКонтрагент");
		//Проверим исключённых	
		а	= СоздатьОбъект("СписокЗначений");
		а	= глРасшифровка.Получить("СписокИсключенных");
		если а.РазмерСписка()>0 Тогда
			СписокИсключенных.УдалитьВсе();
			сп	= "";
			для к = 1 по а.РазмерСписка() Цикл
				СписокИсключенных.ДобавитьЗначение(а.ПолучитьЗначение(к,сп),сп);
			КонецЦикла;
		КонецЕсли;
		Сформировать();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Обновить=0;
	
КонецПроцедуры

Процедура ОбходТаблиц(сч,стр)
	 кол=0;
	 ОбъектОтчета="";
	 ВремТабл.Очистить();
	 ТаблицыВывода.ПолучитьСтрокуПоНомеру(сч);
	 ВремТабл.Загрузить(ТаблицыВывода.Таблицы);
	 ВремТабл.ВыбратьСтроки();
	 Если сч>1 Тогда
	 	ТаблицыВывода.ПолучитьСтрокуПоНомеру(сч-1);
	 	ВремТабл_парам.Загрузить(ТаблицыВывода.Таблицы);  
	 	ВремТабл_парам.ВыбратьСтроки();
	 КонецЕсли;
	 Для поз=1 по ВремТабл.КоличествоСтрок() Цикл
	 	ВремТабл.ПолучитьСтрокуПоНомеру(поз);
	 	Если сч>1 Тогда
	 		Для С=1 по сч-1 Цикл
	 			парам=ВремТабл_парам.ПолучитьЗначение(стр,спГруппировки.ПолучитьЗначение(С));
	 			Если парам=ВремТабл.ПолучитьЗначение(поз,спГруппировки.ПолучитьЗначение(С)) Тогда
	 				Вывод=1;
	 			Иначе
	 				Вывод=0;
	 				Прервать;
	 			КонецЕсли;
	 		КонецЦикла;
	 	Иначе
	 		Вывод=1;
	 	КонецЕсли;
	 	Если Вывод=1 Тогда
	 		Если "Документ"=спГруппировки.ПолучитьЗначение(сч) Тогда
	 			ОбъектОтчета=ВремТабл.Документ;
	 		КонецЕсли;
	 		Таб.ВывестиСекцию(спГруппировки.ПолучитьЗначение(сч));
	 		строки=строки+1;
	 		Состояние("Вывод в Отчет строки: "+строки);
	 		Вывод=0;
	 		Если сч<спГруппировки.РазмерСписка() Тогда
	 			сч=сч+1;
	 			ОбходТаблиц(сч,поз);
	 			сч=сч-1;
	 			ВремТабл.Очистить();
	 			ТаблицыВывода.ПолучитьСтрокуПоНомеру(сч);
	 			ВремТабл.Загрузить(ТаблицыВывода.Таблицы);
	 			ВремТабл.ВыбратьСтроки();
	 			Если сч>1 Тогда
	 				ВремТабл_парам.Очистить();
	 				ТаблицыВывода.ПолучитьСтрокуПоНомеру(сч-1);
	 				ВремТабл_парам.Загрузить(ТаблицыВывода.Таблицы);  
	 				ВремТабл_парам.ВыбратьСтроки();
	 			КонецЕсли;
	 		КонецЕсли;
	 	КонецЕсли;
	 КонецЦикла;
КонецПроцедуры

/////////////////////////////////////////////////
Процедура ФормированиеТаблиц()
	парам="";
	ТаблицыВывода.ВыбратьСтроки();
	Для С=1 по спГруппировки.РазмерСписка() Цикл
		ВремТабл.Очистить();
		ВремТабл.Загрузить(ТаблЗап);
		парам=парам+спГруппировки.ПолучитьЗначение(С);
		Если спГруппировки.ПолучитьЗначение(С) = "Документ" Тогда
			КолСтрок = ВремТабл.КоличествоСтрок();
			Пока КолСтрок > 0 Цикл
				ВремТабл.ПолучитьСтрокуПоНомеру(КолСтрок);
				Если (ВремТабл.Документ.ДатаДок > ВыбКонПериода) или (ВремТабл.Документ.ДатаДок < ВыбНачПериода) Тогда
					ВремТабл.УдалитьСтроку(КолСтрок);	
				КонецЕсли;
				КолСтрок = КолСтрок - 1;
			КонецЦикла;	
		ВремТабл.ВыбратьСтроки();
		КонецЕсли;
	    ВремТабл.Свернуть(парам,"ДолгНачОст,ДолгКонОст,ДолгПриход,ДолгРасход,СкидкаНачОст,СкидкаКонОст,СкидкаПриход,СкидкаРасход");
		ВремТабл.ВыбратьСтроки();
		ТаблицыВывода.НоваяСтрока(С);
		ТаблицыВывода.Таблицы=СоздатьОбъект("ТаблицаЗначений");
		ТаблицыВывода.Таблицы.Загрузить(ВремТабл);
		парам=парам+",";
	КонецЦикла;
КонецПроцедуры
//*******************************************
// Процедура генерации запроса Сформировать.
//
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Х, У;
	строки = 0;
	
	если флаж=1 Тогда	//Типа в рубликах нам надо
		валют=глРубли;
	Иначе
		валют=глДоллары;
	КонецЕсли;
	
	Если глПроверкаДаты(ВыбНачПериода,ВыбКонПериода)=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТипЗначенияСтр(Таб) <> "Таблица") ИЛИ (Обновить = 0) Тогда
		Таб = СоздатьОбъект("Таблица");
	Иначе
		Таб.Очистить();
	КонецЕсли;      
	
	Состояние("Подбираем клиентов в выборку");
	
	
	темп=СоздатьОбъект("СписокЗначений");
	
	если СписокИсключенных.РазмерСписка()=0 Тогда
		ВыбКонтрагент1	= ВыбКонтрагент;
	Иначе
		//Заменяем группы на элементы
		сп=СписокИсключенных.РазмерСписка();
		для у=1 по сп Цикл
			а=СписокИсключенных.ПолучитьЗначение(у);
			если а.ЭтоГруппа()=1 тогда
				спр=СоздатьОбъект("Справочник.Контрагенты");
				спр.ИспользоватьРодителя(а);
				спр.ВыбратьЭлементы();
				пока спр.ПолучитьЭлемент()=1 Цикл
					врем = спр.ТекущийЭлемент();
					если (врем.ЭтоГруппа()=0) и (СписокИсключенных.НайтиЗначение(врем)=0) Тогда
						темп.ДобавитьЗначение(спр.ТекущийЭлемент());
					КонецЕсли;
				КонецЦикла;
			Иначе
				темп.ДобавитьЗначение(а);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	
	//*********************
	ВыбКонтрагент1	= СоздатьОбъект("СписокЗначений");
	спр=СоздатьОбъект("Справочник.Контрагенты");
	если ВыбКонтрагент.ЭтоГруппа()=1 Тогда
		спр.ИспользоватьРодителя(ВыбКонтрагент);
		спр.ВыбратьЭлементы();
		пока спр.ПолучитьЭлемент()=1 Цикл
			врем = спр.ТекущийЭлемент();
			если (врем.ЭтоГруппа()=0) и (темп.НайтиЗначение(врем)=0) Тогда
				ВыбКонтрагент1.ДобавитьЗначение(спр.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли пустоеЗначение(ВыбКонтрагент)=0 Тогда
		ВыбКонтрагент1	= ВыбКонтрагент;
	ИначеЕсли (пустоеЗначение(ВыбКонтрагент)=1) и (СписокИсключенных.размерСписка()=0) Тогда
		ВыбКонтрагент1	= ВыбКонтрагент;
	иначеесли пустоеЗначение(ВыбКонтрагент)=1 Тогда
		спр.выбратьЭлементы(0);
		пока спр.ПолучитьЭлемент()=1 Цикл
			врем = спр.ТекущийЭлемент();
			если (врем.ЭтоГруппа()=0) и (темп.НайтиЗначение(врем)=0) Тогда
				ВыбКонтрагент1.ДобавитьЗначение(спр.ТекущийЭлемент());
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Состояние("Начинаем разгребать запрос");

	RS = СоздатьОбъект("ODBCRecordSet");
	RS.УстБД1С();
	ТекстЗапроса = "
	|SELECT $ВидДокумента36.Реализация + Журнал.IDDOC [Документ $Документ]
	|	 ,  $Реализация.Контрагент [Контрагент $Справочник.Контрагенты]
	|    ,  Журнал.$ОбщийРеквизит.Проект [Проект $Справочник.Проекты]
	|    ,  $Реализация.Склад [Склад $Справочник.Склады]
	|    ,  Sum($СтрокаРеализация.Сумма) Сумма
	|FROM _1SJOURN AS Журнал
	|	INNER JOIN $Документ.Реализация AS Реализация ON Журнал.IDDOC = Реализация.IDDOC 
	|	INNER JOIN $ДокументСтроки.Реализация AS СтрокаРеализация ON Реализация.IDDOC = СтрокаРеализация.IDDOC 
	|WHERE 	Журнал.Closed & 1 = 1
	|	AND Журнал.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ 
	|	AND Журнал.IDDocDef = $ВидДокумента.Реализация
	|";
	
	Если  ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND ($Реализация.Контрагент= :ВыбКонтрагент )
		|";
	КонецЕсли;
    
	Если  СписокПроектов.РазмерСписка() <>  0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	AND (Журнал.$ОбщийРеквизит.Проект IN (SELECT val FROM #ГрПроект))
		|";
	КонецЕсли;
	
	Если  СписокСкладов.РазмерСписка() <>  0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND ($Реализация.Склад IN (SELECT val FROM #ГрСклад))
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|GROUP BY 	$ВидДокумента36.Реализация + Журнал.IDDOC
	|	, $Реализация.Контрагент
	|	, Журнал.$ОбщийРеквизит.Проект 
	|	, $Реализация.Склад
	|UNION ALL
	|SELECT $ВидДокумента36.СтрокаВыпискиПриход + Журнал.IDDOC [Документ $Документ]
	|	 ,  $СтрокаВыпискиПриход.Контрагент [Контрагент $Справочник.Контрагенты]
	|    ,  Журнал.$ОбщийРеквизит.Проект [Проект $Справочник.Проекты]
	|    , '' as Склад
	|    ,  $СтрокаВыпискиПриход.Сумма as Сумма
	|FROM _1SJOURN AS Журнал
	|	INNER JOIN $Документ.СтрокаВыпискиПриход AS СтрокаВыпискиПриход ON Журнал.IDDOC = СтрокаВыпискиПриход.IDDOC 
	|WHERE 	Журнал.Closed & 1 = 1
	|	AND Журнал.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ 
	|	AND Журнал.IDDocDef = $ВидДокумента.СтрокаВыпискиПриход
	|";

	Если  ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND ($СтрокаВыпискиПриход.Контрагент= :ВыбКонтрагент )
		|";
	КонецЕсли;
     
	Если  СписокПроектов.РазмерСписка() <>  0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND (Журнал.$ОбщийРеквизит.Проект IN (SELECT val FROM #ГрПроект))
		|";
	КонецЕсли;
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|GROUP BY 	$ВидДокумента36.СтрокаВыпискиПриход + Журнал.IDDOC
	|	, $СтрокаВыпискиПриход.Контрагент
	|	, Журнал.$ОбщийРеквизит.Проект 
	|	, $СтрокаВыпискиПриход.Сумма
	|UNION ALL
	|SELECT $ВидДокумента36.ПКО + Журнал.IDDOC [Документ $Документ]
	|	 ,  $ПКО.Контрагент [Контрагент $Справочник.Контрагенты]
	|    ,  Журнал.$ОбщийРеквизит.Проект [Проект $Справочник.Проекты]
    |    , '' as Склад
	|    ,  $ПКО.Сумма as Сумма
	|FROM _1SJOURN AS Журнал
	|	INNER JOIN $Документ.ПКО AS ПКО ON Журнал.IDDOC = ПКО.IDDOC 
	|WHERE 	Журнал.Closed & 1 = 1
	|	AND Журнал.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ 
	|	AND Журнал.IDDocDef = $ВидДокумента.ПКО 
	|";
	
	Если  ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND ($ПКО.Контрагент= :ВыбКонтрагент )
		|";
	КонецЕсли;
	
	Если  СписокПроектов.РазмерСписка() <>  0 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|   AND (Журнал.$ОбщийРеквизит.Проект IN (SELECT val FROM #ГрПроект))
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|GROUP BY 	$ВидДокумента36.ПКО + Журнал.IDDOC
	|	, $ПКО.Контрагент
	|	, Журнал.$ОбщийРеквизит.Проект 
	|	, $ПКО.Сумма
	|";
	
	
	Если  ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
		RS.УстановитьТекстовыйПараметр("ВыбКонтрагент", ВыбКонтрагент);
	КонецЕсли;
    
	Если  СписокПроектов.РазмерСписка() <>  0 Тогда
		RS.УложитьСписокОбъектов(СписокПроектов, "#ГрПроект", "Проекты");
	КонецЕсли;
	
	Если  СписокСкладов.РазмерСписка() <>  0 Тогда
		RS.УложитьСписокОбъектов(СписокСкладов, "#ГрСклад", "Склады");
	КонецЕсли;
	
	RS.УстановитьТекстовыйПараметр("НачДата",'01.01.01');
	RS.УстановитьТекстовыйПараметр("КонДата",ТекущаяДата());
	RS.Отладка(0);
	ТаблЗап    = RS.ВыполнитьИнструкцию(ТекстЗапроса);
	
	ТаблЗап.НоваяКолонка("ДолгНачОст","Число");
	ТаблЗап.НоваяКолонка("ДолгПриход","Число");
	ТаблЗап.НоваяКолонка("ДолгРасход","Число");
	ТаблЗап.НоваяКолонка("ДолгКонОст","Число");
	
	ТаблЗап.НоваяКолонка("Валюта");
	ТаблЗап.НоваяКолонка("ВидОплаты");
	ТаблЗап.НоваяКолонка("ДатаДок");
	
	ТаблЗап.НоваяКолонка("СкидкаНачОст","Число");
	ТаблЗап.НоваяКолонка("СкидкаПриход","Число");
	ТаблЗап.НоваяКолонка("СкидкаРасход","Число");
	ТаблЗап.НоваяКолонка("СкидкаКонОст","Число");
	
	ТаблЗап.ВыбратьСтроки();
	Стр = ТаблЗап.КоличествоСтрок();
	Пока Стр > 0 Цикл
		ТаблЗап.ПолучитьСтрокуПоНомеру(Стр);
		
		уд = 0;
		Если  СписокСкладов.РазмерСписка() <>  0 Тогда  
			Если ТаблЗап.Документ.Проведен() = 0 Тогда
				ТаблЗап.УдалитьСтроку(Стр);
				уд = 1;
			ИначеЕсли (ТаблЗап.Документ.Вид() <> "Реализация") и (ТаблЗап.Документ.Вид() <> "РКО") Тогда
				Если ТаблЗап.Документ.ДокОснование.Выбран() = 1 Тогда	
					Попытка
						Если СписокСкладов.Принадлежит(ТаблЗап.Документ.ДокОснование.Склад) = 0 Тогда
							ТаблЗап.УдалитьСтроку(Стр);
							уд = 1;
						КонецЕсли;
					Исключение
						ТаблЗап.УдалитьСтроку(Стр);
						уд = 1;
					КонецПопытки;
				Иначе
					ТаблЗап.УдалитьСтроку(Стр);
					уд = 1;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли; 
		
		Если уд = 0 Тогда
			
			ТаблЗап.Валюта    = ТаблЗап.Документ.Валюта;
			ТаблЗап.ВидОплаты = ТаблЗап.Документ.Проект.ВидОплаты;
			ТаблЗап.ДатаДок   = ТаблЗап.Документ.ДатаДок;
			
			ТекСумма = 0;
			
			Если ТаблЗап.Валюта <> валют Тогда
				ТекСумма = Число(глПересчет(ТаблЗап.Сумма,ТаблЗап.Валюта,ВыбКонПериода,валют,ВыбКонПериода));
			Иначе	
				ТекСумма = Число(ТаблЗап.Сумма);
			КонецЕсли;
			
			СуммаСкидки = 0;
			СкидкаРКО   = 0;
			
			Если ТаблЗап.Документ.Вид() = "Реализация"  Тогда
				СуммаСкидки = ТаблЗап.Документ.Итог("СуммаСкидки");
			КонецЕсли;
				
			Если ТаблЗап.Документ.ДатаДок < ВыбНачПериода Тогда
				Если ТаблЗап.Документ.Вид() <> "Реализация" Тогда
					ТаблЗап.ДолгНачОст = Число(ТекСумма);
				Иначе
					ТаблЗап.ДолгНачОст = Число((ТекСумма + СуммаСкидки) * (-1));
					ТаблЗап.СкидкаНачОст = Число(СуммаСкидки * (-1));
				КонецЕсли;	
			ИначеЕсли ТаблЗап.Документ.ДатаДок > ВыбКонПериода Тогда
				Если ТаблЗап.Документ.Вид() <> "Реализация" Тогда
					ТаблЗап.ДолгКонОст = Число(ТекСумма);
				Иначе
					ТаблЗап.ДолгКонОст   = Число((ТекСумма + СуммаСкидки) * (-1)); 
					ТаблЗап.СкидкаКонОст = Число(СуммаСкидки * (-1));
				КонецЕсли;	
			Иначе
				Если ТаблЗап.Документ.Вид() <> "Реализация" Тогда
					ТаблЗап.ДолгРасход = Число(ТекСумма);
				Иначе
					ТаблЗап.ДолгПриход  = Число(ТекСумма + СуммаСкидки);
					ТаблЗап.СкидкаПриход = Число(СуммаСкидки);
				КонецЕсли;
			КонецЕсли; 
			
			Если ТаблЗап.Документ.Вид() = "Реализация"  Тогда
				Если СуммаСкидки <> 0 Тогда
					Докум = СоздатьОбъект("Документ");
					Докум.ВыбратьПодчиненныеДокументы(,,ТаблЗап.Документ);
					Пока Докум.ПолучитьДокумент() = 1 Цикл 
						Если Докум.Проведен() = 0 Тогда
							Продолжить;
						КонецЕсли;	
						Если Докум.Вид() = "РКО" Тогда
							ТаблЗап.НоваяСтрока();
							ТаблЗап.Документ   = Докум.ТекущийДокумент();
							ТаблЗап.Валюта     = ТаблЗап.Документ.Валюта;
							ТаблЗап.ВидОплаты  = ТаблЗап.Документ.Проект.ВидОплаты;
							ТаблЗап.ДатаДок    = ТаблЗап.Документ.ДатаДок;
							ТаблЗап.Контрагент = Докум.Контрагент;
							СкидкаРКО = Докум.Сумма;
							Если ТаблЗап.Документ.ДатаДок < ВыбНачПериода Тогда
								ТаблЗап.СкидкаНачОст = Число(СкидкаРКО);
							ИначеЕсли ТаблЗап.Документ.ДатаДок > ВыбКонПериода Тогда
								ТаблЗап.СкидкаКонОст = Число(СкидкаРКО);
							Иначе
								ТаблЗап.СкидкаРасход = Число(СкидкаРКО);
							КонецЕсли; 
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Стр = Стр - 1;
	КонецЦикла;	

	ДолгНачОстИ = 0;
	ДолгПриходИ = 0;
	ДолгРасходИ = 0;
	ДолгКонОстИ = 0;
	
		
	СкидкаНачОстИ	= 0;
	СкидкаПриходИ	= 0;
	СкидкаРасходИ	= 0;
	СкидкаКонОстИ	= 0;
	
	ТаблЗап.ВыбратьСтроки();
	ДолгНачОстИ = ТаблЗап.Итог("ДолгНачОст");
	ДолгПриходИ = ТаблЗап.Итог("ДолгПриход");
	ДолгРасходИ = ТаблЗап.Итог("ДолгРасход");
	ДолгКонОстИ = (ДолгНачОстИ + ДолгПриходИ - ДолгРасходИ) + ТаблЗап.Итог("ДолгКонОст");
	
	СкидкаНачОстИ	= ТаблЗап.Итог("СкидкаНачОст");;
	СкидкаПриходИ	= ТаблЗап.Итог("СкидкаПриход");;
	СкидкаРасходИ	= ТаблЗап.Итог("СкидкаРасход");;
	СкидкаКонОстИ	= (СкидкаНачОстИ + СкидкаПриходИ - СкидкаРасходИ) + ТаблЗап.Итог("СкидкаКонОст");;
	
	спГруппировки = СоздатьОбъект("СписокЗначений");
	
	если (флаж2=4) Тогда
		спГруппировки.Установить("Контрагент","Контрагент");
	КонецЕсли;
	
	Если (флаж2=3) Тогда
		спГруппировки.Установить("Контрагент","Контрагент");
		спГруппировки.Установить("Валюта","Валюта");
	КонецЕсли;
	
	Если (флаж2=2) Тогда
		спГруппировки.Установить("Контрагент","Контрагент");
		спГруппировки.Установить("Валюта","Валюта");
		спГруппировки.Установить("ВидОплаты","ВидОплаты"); 
	КонецЕсли;
	
	Если (флаж2=1) или (флаж2=0) Тогда
		спГруппировки.Установить("Контрагент","Контрагент");
		спГруппировки.Установить("Валюта","Валюта");
		спГруппировки.Установить("ВидОплаты","ВидОплаты"); 
		спГруппировки.Установить("Документ","Документ");
	КонецЕсли;
	
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сформировать");
	Таб.Опции(0,0,0,0,"ОпцииПечатиСчета");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Кнопки");
	Таб.ВывестиСекцию("Заголовок");
	ТаблЗап.ВыбратьСтроки();
	ТаблЗап.Сортировать("ДатаДок+");
	ТаблЗап.ВыбратьСтроки();
	ФормированиеТаблиц();
	ОбходТаблиц(1,1);
	
	Таб.ВывестиСекцию("Итоги");

	Таб.ТолькоПросмотр(1);
	Таб.Показать(0); 


КонецПроцедуры

Процедура ВнестиВСписок()
	ОткрытьПодбор("Справочник.Контрагенты","ДляВыбора","ВыбирайГруппу",1);
КонецПроцедуры

Процедура ВнестиВСписокПроект()
	ОткрытьПодбор("Справочник.Проекты","ДляВыбора","ВыбирайГруппу",1);
КонецПроцедуры 

Процедура ВнестиВСписокСклад()
	ОткрытьПодбор("Справочник.Склады","ДляВыбора","ВыбирайГруппу",1);
КонецПроцедуры 

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	//Если Элемент.ЭтоГруппа()=0 Тогда
	Если Элемент.Вид() = "Контрагенты" Тогда
		Если СписокИсключенных.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
			СписокИсключенных.ДобавитьЗначение(Элемент.ТекущийЭлемент());
		КонецЕсли;
	ИначеЕсли Элемент.Вид() = "Склады" Тогда
		Если СписокСкладов.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
			СписокСкладов.ДобавитьЗначение(Элемент.ТекущийЭлемент());
		КонецЕсли;
	ИначеЕсли Элемент.Вид() = "Проекты" Тогда
		Если СписокПроектов.НайтиЗначение(Элемент.ТекущийЭлемент())=0 Тогда
			СписокПроектов.ДобавитьЗначение(Элемент.ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()  

ВыбирайГруппу=1;

СписокВидовДоговоров.ДобавитьЗначение("");
СписокВидовДоговоров.ДобавитьЗначение("Бизнес-Сервис");
СписокВидовДоговоров.ДобавитьЗначение("Эксперт");
СписокВидовДоговоров.ДобавитьЗначение("Сан Саныч");
СписокВидовДоговоров.ДобавитьЗначение("Профи");
СписокВидовДоговоров.ДобавитьЗначение("RCO");
СписокВидовДоговоров.ДобавитьЗначение("Основной");

Расшифровка = СоздатьОбъект("СписокЗначений");
Расшифровка.Установить("Отчет", "Взаиморасчёты");

ВремТабл_парам=СоздатьОбъект("ТаблицаЗначений");
ТаблицыВывода=СоздатьОбъект("ТаблицаЗначений");
ВремТабл=СоздатьОбъект("ТаблицаЗначений"); 
ТаблицыВывода.НоваяКолонка("Таблицы","ТаблицаЗначений");



