Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	если глПроверкаПравДоступа(Контекст)=0 Тогда
		Предупреждение("У вас нет прав на доступ к данному документу!",30);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		форма.НомерДок.Доступность(0);
		форма.ДатаДок.Доступность(0);
		форма.Документ_.Доступность(0);
		форма.Склад.Доступность(0);
		форма.Сумма.Доступность(0);
//		форма.Контрагент.Доступность(0);
	КонецЕсли;
КонецПроцедуры

Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст,Скопирован);
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		Автор		= ПолучитьПустоеЗначение(Автор);
		Контрагент	= ПолучитьПустоеЗначение(Контрагент);
	КонецЕсли;

	Склад_выдачи=глПользователь.ОсновнойСклад;
	Если Скопирован=1 Тогда	//Нефиг старые данные видеть
		УдалитьСтроки();
	КонецЕсли;

КонецПроцедуры

Процедура НайдиБонусы()
	Перем Запрос, ТекстЗапроса;
	Запрос 	= СоздатьОбъект("Запрос");
	ТЗ_Долги= СоздатьОбъект("ТаблицаЗначений");

	Состояние("Расчёт таблицы текущих долгов...");
	
	ВЗ		= Перечисление.ВидВзаимодействия.ДолгЗаТовары;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеБонусы)
	|Без итогов;
	|Клиент 			= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин			= Регистр.Покупатели_розница.Магазин;
	|КредДокумент		= Регистр.Покупатели_розница.КредДокумент; 
	|АналитикаПроценты  = Регистр.Покупатели_розница.АналитикаПродажи;
	|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Группировка Клиент без групп;
	|Группировка Магазин без Групп;
	|Группировка КредДокумент без Групп;
	|Группировка АналитикаПроценты без Групп;
	|Условие(Клиент = Контрагент);
	|Условие(ВидВзаимодействия = ВЗ);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Обрабатываем информацию о текущих долгах...");
	Запрос.Выгрузить(ТЗ_Долги);
	Если ТЗ_Долги.Итог("СуммаРубКонОст")=0 Тогда
		Сообщить("Непогашеных долгов, у данного клиента, не найдено!");
	Иначе
        УдалитьСтроки();
		ТЗ_Долги.ВыбратьСтроки();
		Пока ТЗ_Долги.ПолучитьСтроку()=1 Цикл
        	НоваяСтрока();
			Документ_			= ТЗ_Долги.КредДокумент;
			Склад				= ТЗ_Долги.Магазин;
			АналитикаПроценты	= ТЗ_Долги.АналитикаПроценты;
			Сумма				= (-1)*ТЗ_Долги.СуммаРубКонОст;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

Процедура ПриИзмененииКонтрагента()
	Если Контрагент.РозничныйКлиент<>1 Тогда
		Сообщить("Клиент ("+Контрагент+") не является розничным покупателем - его нельзя добавлять в этот документ!","!");
		Контрагент = ПолучитьПустоеЗначение(Контрагент);
		Возврат;
	КонецЕсли;
	НайдиБонусы();
КонецПроцедуры 

//Обрабатываем данные с ридера
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные);
	Scaner.EventNumber=Число(Данные);
	Карта=Scaner.ScanData;	//Данные со штрихкода
	Scaner.DeleteEvent();
	Scaner.DataEventEnabled = 1;
	
	Если ПустоеЗначение(Карта)=0 тогда
		//Если первые 2 символа "00" тогда - это контрагент 
		Если (лев(карта,2)="00") тогда	
			Контр=СоздатьОбъект("Справочник.Контрагенты");
			если Контр.ВыбратьЭлементыПоРеквизиту("ШтрихКарта", сокрЛП(карта), 0)=1 тогда
				контр.ПолучитьЭлемент();
				Контрагент	= Контр.ТекущийЭлемент();
			КонецЕсли;
		иначеЕсли (лев(карта,2)="99") тогда	
			Прод=СоздатьОбъект("Справочник.Пользователи");
			если Прод.ВыбратьЭлементыПоРеквизиту("КартаАвторизации", сокрЛП(карта), 0)=1 тогда
				прод.ПолучитьЭлемент();
				Автор= прод.ТекущийЭлемент();
			КонецЕсли;
		Иначе
			сообщить("Карта не опознана!");
			возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи()
	Если ПустоеЗначение(Автор)=1 тогда
		сообщить("Проведите карточкой продавца по считывателю!");
		статусВозврата(0);
		возврат;
	иначеесли ПустоеЗначение(Контрагент)=1 тогда
		сообщить("Проведите карточкой клиента по считывателю!");
		статусВозврата(0);
		возврат;
   	иначеЕсли ПустоеЗначение(Склад_выдачи)=1 тогда
		сообщить("У указанного продавца, не задан склад, на котором он работает!");
		Сообщить("		возможно он не прошел авторизацию");
		статусВозврата(0);
		возврат;
	КонецЕсли;
	проба		= СоздатьОбъект("Справочник.ОтборРознДокум");
	ЭР			= сокрЛП(Перечисление.ВидДокументаРозница.ВозвратДолговРозница)+сокрЛП(склад_выдачи);
	Если проба.НайтиПоНаименованию(сокрЛП(ЭР),0,1)=1 Тогда
	    ЭтоРозница=проба.ТекущийЭлемент();
	Иначе
		проба.новый();
		проба.наименование=ЭР;
		проба.записать();
		ЭтоРозница=проба.ТекущийЭлемент();
	КонецЕсли;
	АвтоВремяПослеТА();
	ПроводитьПослеТА(1,1);
	Провести(3); 
	ПриЗаписиДокумента(Контекст);
	Форма.Закрыть(0);
КонецПроцедуры

