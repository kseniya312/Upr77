Перем СписокДействий; // для механизма кнопки "Действия"
Перем НачальнаяДатаДокумента; // для механизма контроля уникальности номеров

Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;

// Для контроля необходимости пересчетов
Перем СтараяДата, СтараяФирма, СтараяВалюта, СтарыйКурс;
Перем СтарыйКонтрагент, СтарыйДоговор;
Перем ТекущийДолг;
Перем Парам;

Перем текстСписокСтатей;	//Вывод на экран полного пути текущей группы

Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст,Скопирован);
	КодОперации			= глКО.ПеремещениеДенегВБанк;
	Если ПустоеЗначение(касса)=1 Тогда
		Касса			= глПользователь.ОсновнаяКасса;
	КонецЕсли;	
	Если ПустоеЗначение(БанковскийСчет)=1 Тогда
		БанковскийСчет	= глПользователь.ОсновнойСчет;
	КонецЕсли;
КонецПроцедуры

//Показывает полный путь для элемента справочника
Процедура ОбновиТекст()
	текстСписокСтатей	= СтатьяДР.ПолноеНаименование();
	Комментарий			= текстСписокСтатей;
	Основание			= текстСписокСтатей;
КонецПроцедуры
       
Процедура ПриЗаписи()
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры	
	
//******************************************************************************
// Печать(СразуНаПринтер, КолЭкз)
//
// Параметры:
//  СразуНаПринтер - (1) если печать на принтер, (0) - с предварительным просмотром
//  КолЭкз - количество экземпляров печати
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//	Выводит печатную форму документа.
//
Процедура Печать(СразуНаПринтер = 0,КолЭкз = 1)
	                     
	Наименование			= Фирма.ЮрЛицо.ПолнНаименование;
	Кассир					= Фирма.ЮрЛицо.Кассир.Получить(ДатаДок);
	СуммаПроп				= глСуммаПрописью(Сумма, Валюта);
	
	Если Проведен()=1 Тогда
		Рез = "";
		глОпределитьКоррСчетаДокумента(ТекущийДокумент(),Рез,"50",2);
		КрСчДб = Рез.Получить("СчетаДебета");
		КрСчКр = Рез.Получить("СчетаКредита");
	КонецЕсли;
	
	Таб	= СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Таблица");
	Таб.Вывести();
	
	Если СразуНаПринтер = 0 Тогда
		Таб.Опции(0,0,0,0,"ОпцииПечатиРасходногоОрдера","ОпцииПечатиРасходногоОрдера");
		
		Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
			Таб.Защита(1);
		Иначе
			Таб.Защита(0);
		КонецЕсли;
		Таб.ТолькоПросмотр(1);

		Таб.Показать(глНазваниеДокументаВжурнале(Контекст),"");  
	Иначе     
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(КолЭкз);
		Таб.Напечатать(0);
	КонецЕсли; 

КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Вызывается из формул элементов диалога:
//  При нажатии на кнопку "Печать". 
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	// проверим полномочия печати непроведенных документов
	Если Проведен() = 0 Тогда
		Если глПолучитьПолномочие("РазрешитьПечатьНепроведенныхДокументов") = 0 Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!", 60);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	Если НомерТекущейФормы = 1  Тогда
		Печать(СразуНаПринтер, КолЭкз);
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(глВзятьКонтекст(Контекст), "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Вызывается из формул элементов диалога:
//  При нажатии на кнопку выбора печатной формы. 
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;
КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()


Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		Если ПустоеЗначение(Парам.Получить("Команда"))=1 Тогда
			Сообщить("В форму документа "+Вид()+" передан неверный параметр!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
		Если Парам.Получить("Команда") = "ПечатьНаПринтер" Тогда
			КолЭкз = Макс(Число(Парам.Получить("КолЭкз")),1);
			ПоКнопкеПечать(1,КолЭкз);
			СтатусВозврата(0);Возврат;
		ИначеЕсли Парам.Получить("Команда") = "ПечатьНаЭкран" Тогда
			ПоКнопкеПечать(0);                
			СтатусВозврата(0);Возврат;
		Иначе
			Сообщить("В форму документа "+Вид()+" передана неверная команда "+Парам.Получить("Команда")+"!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
	КонецЕсли;         
	
	// инициализация модульных переменных, контролирующих выполнение
	// пересчетов и обновление надписей в форме
	СтараяДата		= ДатаДок;
	СтараяФирма		= Фирма;
	СтараяВалюта	= Валюта;
	СтарыйКурс		= Курс;

	Форма.СтатьяДР		.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Комментарий	.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.ФизЛицо		.ВыполнятьФормулуТолькоПриИзменении(1);
	Форма.Прочее		.ВыполнятьФормулуТолькоПриИзменении(1);
	
	
	НачальнаяДатаДокумента = ДатаДок;

	глПроверкаРазрешенияРедактирования(Контекст);
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ДатаДок > ПолучитьДатуТА()) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли; 
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ИмяПользователя() <> "Администратор" ) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;            
	
	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
	    // СДЕЛАТЬ НЕДОСТУПНЫМИ КНОПКИ МОДИФИКАЦИИ ДОКУМЕНТА
		Форма.кнОК.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
		Форма.кнПровести.Доступность(0);
	КонецЕсли;
	
	СписокДействий.ДобавитьЗначение("Ввести на основании");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	
	// кнопка по умолчанию
	Если (Форма.ТолькоПросмотр() = 1) ИЛИ ((ДатаДок < Макс(РабочаяДата(), ПолучитьДатуТА()) ) И (Выбран() = 1)) Тогда
	    Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	глАктивизироватьРеквизит(Контекст);
		
	//Если документ еще не проведен, тогда 
	//проведение делаем только в потоке
	Если ( Проведен() = 0 ) Тогда
		ПроводитьПослеТА(1,1);
	КонецЕсли;                                           
		
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);  
	                  
КонецПроцедуры

// Предопределенная процедура
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагСтандОбр)
	
	Если ЭлементДиалога="БанковскийСчет" Тогда
		ЮрФизЛицо = Фирма.ЮрЛицо;
		ОткрытьФорму("Справочник.БанковскиеСчета.ФормаСписка", ЮрФизЛицо);
		ФлагСтандОбр = 0;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеВыбораЗначения()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//******************************************************************************
//	                   
// формируем таблицу печатных форм
НомерТекущейФормы	= 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Печатная форма";
ТаблицаПечФорм.Кнопка       = "Печать";
ОбновиТекст();

Парам = Форма.Параметр;
