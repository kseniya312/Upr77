Перем ОбщРег, ОстаткиТМЦ, РезервыТМЦ, СписокПараметров; // для показа остатков
Перем ОстатокВсего, ОстатокТекущий; //Для вывода формы
Перем __ОстатокНаСкладе, __ОстатокПоФирме , __Резерв , __ТовСкидка; // для показа остатков
Перем СписокДействий; // для механизма кнопки "Действия"
Перем НС, Рег1, Рег2, Склад_темп, ТЗ, ТЗ2;	//Работа с остатками
Перем ТаблицаТекущая, ТаблицаОснования;

Функция ПокажиОстатки() далее

Процедура ПриИзмененииСклад(Номер)
	//ТабЧасть.УстановитьПараметрыКолонки("КолСклад1",,,,Склад1.Наименование)
	//КолСклад1.Заголовок = Склад1.Наименование;
	Если Номер = 1 Тогда
		Сообщить(Формат(Номер,"")+" магазин: "+Склад1.Наименование);
	ИначеЕсли Номер = 2 Тогда
		Сообщить(Формат(Номер,"")+" магазин: "+Склад2.Наименование);
	ИначеЕсли Номер = 3 Тогда
		Сообщить(Формат(Номер,"")+" магазин: "+Склад3.Наименование);
	ИначеЕсли Номер = 4 Тогда
		Сообщить(Формат(Номер,"")+" магазин: "+Склад4.Наименование);
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьЛишниеСтроки(ЭтаТаблица)
	 
	НомерСтр = ПолучитьПустоеЗначение();
	Пока ЭтаТаблица.НайтиЗначение(0,НомерСтр,"КолИтог") = 1 Цикл
		ЭтаТаблица.УдалитьСтроку(НомерСтр);
		НомерСтр = ПолучитьПустоеЗначение();
	КонецЦикла;
	
КонецПроцедуры

Процедура СортироватьПоГруппе(ЭтаТаблица) 
	
	ЭтаТаблица.НоваяКолонка("Группа","Справочник.Номенклатура");
	ЭтаТаблица.ВыбратьСтроки();
	Пока ЭтаТаблица.ПолучитьСтроку() = 1 Цикл
		ЭтотЭлемент = ЭтаТаблица.Номенклатура;
		Пока ЭтотЭлемент.Уровень() > 1 Цикл
			ЭтотЭлемент = ЭтотЭлемент.Родитель;
		КонецЦикла;
		Если ЭтотЭлемент.ЭтоГруппа() = 1 Тогда
			ЭтаТаблица.Группа = ЭтотЭлемент;
		КонецЕсли;
	КонецЦикла;
	ЭтаТаблица.Сортировать("Группа+, Номенклатура+");
	ЭтаТаблица.УдалитьКолонку("Группа");
	
КонецПроцедуры

Процедура ПоКнопкеСортировать()
	
	ВыгрузитьТабличнуюЧасть(ТаблицаТекущая);
	//ОчиститьЛишниеСтроки(ТаблицаТекущая);	
	СортироватьПоГруппе(ТаблицаТекущая);
	ЗагрузитьТабличнуюЧасть(ТаблицаТекущая);
	
КонецПроцедуры
 
Процедура ОчиститьКолонкуСклада(Номер) 
	
	ВыгрузитьТабличнуюЧасть(ТаблицаТекущая);
	ТаблицаТекущая.ВыбратьСтроки();
	Пока ТаблицаТекущая.ПолучитьСтроку() = 1 Цикл
		//ТаблицаТекущая.Заполнить(0,,,"КолСклад"+Формат(Номер,"")); 
		Если Номер = 1 Тогда
			ТаблицаТекущая.КолСклад1 = 0;
		ИначеЕсли Номер = 2 Тогда
			ТаблицаТекущая.КолСклад2 = 0;
		ИначеЕсли Номер = 3 Тогда
			ТаблицаТекущая.КолСклад3 = 0;
		ИначеЕсли Номер = 4 Тогда
			ТаблицаТекущая.КолСклад4 = 0;
		КонецЕсли;
		ТаблицаТекущая.КолИтог = ТаблицаТекущая.КолСклад1+ТаблицаТекущая.КолСклад2+
			ТаблицаТекущая.КолСклад3+ТаблицаТекущая.КолСклад4;
	КонецЦикла;
	
	ОчиститьЛишниеСтроки(ТаблицаТекущая);
		
	ЗагрузитьТабличнуюЧасть(ТаблицаТекущая);	
	
КонецПроцедуры

Процедура УдалитьОснование(Номер)
	
	Если Номер = 1 Тогда
		ДокОснование1 = ПолучитьПустоеЗначение();
		Склад1 = ПолучитьПустоеЗначение();
	ИначеЕсли Номер = 2 Тогда
		ДокОснование2 = ПолучитьПустоеЗначение();
		Склад2 = ПолучитьПустоеЗначение();
	ИначеЕсли Номер = 3 Тогда
		ДокОснование3 = ПолучитьПустоеЗначение();
		Склад3 = ПолучитьПустоеЗначение();
	ИначеЕсли Номер = 4 Тогда
		ДокОснование4 = ПолучитьПустоеЗначение();
		Склад4 = ПолучитьПустоеЗначение();
	КонецЕсли;

	ОчиститьКолонкуСклада(Номер);
	
КонецПроцедуры

Процедура ПриОткрытии()
	// 	Форма.Номенклатура	.ВыполнятьФормулуТолькоПриИзменении(1);
	//	Форма.Единица		.ВыполнятьФормулуТолькоПриИзменении(1);
	//	Форма.Количество	.ВыполнятьФормулуТолькоПриИзменении(1);
	
	//Если Отработан=1 тогда
	//	ФлагДока=1;
	//иначе
	//	ФлагДока=0;
	//КонецЕсли;  
	
	//ДопСклад=Константа.СкладДляТранзита;	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");
	
	ТЗ_Остаток.НоваяКолонка("Склад","Справочник.Склады",,,,8);
	ТЗ_Остаток.НоваяКолонка("Остаток","число",15,2,,4);
	//ТЗ_Остаток.НоваяКолонка("Резерв","число",15,2,,4);
	НС=НомерСтроки;
	
	Если НазваниеНабораПрав("Продавец_розница")=1 Тогда
		Форма.НомерДок.Доступность(0);
		Форма.ДатаДок.Доступность(0);
		Форма.Фирма.Доступность(0);
		Форма.ЮрЛицо.Доступность(0);
		Форма.Контрагент.Доступность(0);
	КонецЕсли;  
	
	//ВыгрузитьТабличнуюЧасть(ТаблицаТекущая);
	//Если ПустоеЗначение(Склад1) = 1 Тогда
	//	ТаблицаТекущая.ВидимостьКолонки("КолСклад1",0);
	//КонецЕсли;	
	//ЗагрузитьТабличнуюЧасть(ТаблицаТекущая);
	 
	//Валерий МЭТР
	глПроверкаРазрешенияРедактирования(Контекст);
		
КонецПроцедуры

Процедура ПересчитатьИтогВСтроке(ТабЧасть,НомерСтроки)
	   
	ТабЧасть.ПолучитьСтрокуПоНомеру(НомерСтроки);
	ТабЧасть.КолИтог = ТабЧасть.КолСклад1+ТабЧасть.КолСклад2+
		ТабЧасть.КолСклад3+ТабЧасть.КолСклад4;
	ТабЧасть.Сумма = ТабЧасть.КолИтог * ТабЧасть.Цена;
	
КонецПроцедуры

Процедура ЗаполнениеПоДокументуОснованию(Номер)
	Перем СкладОснования;
	Перем НомерСтроки;
	
	//ТаблицаТекущая = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблицаТекущая);
	
	ТаблицаОснования = СоздатьОбъект("ТаблицаЗначений");
	
	Если Номер = 1 Тогда
		ДокОснование1.ВыгрузитьТабличнуюЧасть(ТаблицаОснования); 
	//	ТаблицаДокумента.Свернуть("Номенклатура,Единица,Коэффициент,Цена", "Количество,Сумма");
		СкладОснования = ДокОснование1.Склад;
		ИдКолонкиСклад = "КолСклад1";
		Склад1 = СкладОснования;
	ИначеЕсли Номер = 2 Тогда  
		ДокОснование2.ВыгрузитьТабличнуюЧасть(ТаблицаОснования); 
		СкладОснования = ДокОснование2.Склад;
		ИдКолонкиСклад = "КолСклад2";
		Склад2 = СкладОснования;
	ИначеЕсли Номер = 3 Тогда  
		ДокОснование3.ВыгрузитьТабличнуюЧасть(ТаблицаОснования); 
		СкладОснования = ДокОснование3.Склад;
		ИдКолонкиСклад = "КолСклад3";
		Склад3 = СкладОснования;
	ИначеЕсли Номер = 4 Тогда  
		ДокОснование4.ВыгрузитьТабличнуюЧасть(ТаблицаОснования); 
		СкладОснования = ДокОснование4.Склад;
		ИдКолонкиСклад = "КолСклад4";
		Склад4 = СкладОснования;		
	КонецЕсли; 
	
	ПриИзмененииСклад(Номер);
		
	ТаблицаОснования.ВыбратьСтроки();
	Пока ТаблицаОснования.ПолучитьСтроку() = 1 Цикл
		
		НомерСтроки = ПолучитьПустоеЗначение();
		
		Если ТаблицаТекущая.НайтиЗначение(ТаблицаОснования.Номенклатура,НомерСтроки,"Номенклатура") = 1 Тогда
			ТаблицаТекущая.УстановитьЗначение(НомерСтроки,ИдКолонкиСклад,ТаблицаОснования.Количество);
			ПересчитатьИтогВСтроке(ТаблицаТекущая,НомерСтроки);
		Иначе		
			ТаблицаТекущая.НоваяСтрока();    
			ТаблицаТекущая.Номенклатура	= ТаблицаОснования.Номенклатура;
			ТаблицаТекущая.Артикул			= ТаблицаОснования.Номенклатура.Артикул;		
			ТаблицаТекущая.Производитель	= ТаблицаОснования.Номенклатура.Производитель;		
			ТаблицаТекущая.Единица 		= ТаблицаОснования.Единица;
			ТаблицаТекущая.Коэффициент 	= ТаблицаОснования.Коэффициент;
	
			Если Номер = 1 Тогда
				ТаблицаТекущая.КолСклад1 = ТаблицаОснования.Количество;
			ИначеЕсли Номер = 2 Тогда
				ТаблицаТекущая.КолСклад2 = ТаблицаОснования.Количество;
			ИначеЕсли Номер = 3 Тогда
				ТаблицаТекущая.КолСклад3 = ТаблицаОснования.Количество;
			ИначеЕсли Номер = 4 Тогда
				ТаблицаТекущая.КолСклад4 = ТаблицаОснования.Количество;
			КонецЕсли;
			
			//ТаблицаТекущая.КолИтог = ТаблицаТекущая.КолСклад1+ТаблицаТекущая.КолСклад2+
			//	ТаблицаТекущая.КолСклад3+ТаблицаТекущая.КолСклад4;
			
			ТаблицаТекущая.Цена = ТаблицаОснования.Цена;
			//ТаблицаТекущая.Сумма = ТаблицаТекущая.КолИтог * ТаблицаТекущая.Цена;
			
			ПересчитатьИтогВСтроке(ТаблицаТекущая,ТаблицаТекущая.КоличествоСтрок());
			
			//СрокПоставки	= РабочаяДата()+1;
			//СрокФакт		= РабочаяДата()+1;
			ТаблицаТекущая.ВидТМЦ = Перечисление.ВидыТМЦ.Товар; 
		КонецЕсли;   		
		
	КонецЦикла; // по строкам основания
	
	Если Вопрос("Отсортировать список?", "Да+Нет", 60) = "Да" Тогда
		//ТаблицаТекущая.Сортировать("Номенклатура");
		СортироватьПоГруппе(ТаблицаТекущая);
	КонецЕсли;	
	
	ЗагрузитьТабличнуюЧасть(ТаблицаТекущая);
	
	//	Если КоличествоСтрок()=0 Тогда
	//		Возврат "По документу - основанию не числится остатка заказов!";
	//	КонецЕсли;
	
	
КонецПроцедуры // ЗаполнениеПоДокументуОснованию()

Процедура ВводНаОсновании(ДокументОснование)
	ДокОснование	= ДокументОснование;
	Автор			= ДокОснование.Автор;
	Фирма			= ДокОснование.Фирма;
	Проект			= ДокОснование.Проект;
	ЮрЛицо			= ДокОснование.ЮрЛицо;
	Контрагент		= ДокОснование.Контрагент;   
	
	//++Ерошенко 10.05.2007
	// по просьбе Бойковой
	Комментарий =     "Ввод перемещений по факту: "+ДокОснование1;
	//--Ерошенко
	ЗаполнениеПоДокументуОснованию(1);
КонецПроцедуры

Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст,Скопирован);
КонецПроцедуры

Процедура ПоКнопкеОснование(Номер)
	Перем Основание;
	
	// если документ основание уже есть, откроем его
	Если (Номер=1) И (ПустоеЗначение(ДокОснование1)=0) Тогда
		ОткрытьФорму(ДокОснование1);
		Возврат;
	ИначеЕсли (Номер=2) И (ПустоеЗначение(ДокОснование2)=0) Тогда
		ОткрытьФорму(ДокОснование2);
		Возврат; 
	ИначеЕсли (Номер=3) И (ПустоеЗначение(ДокОснование3)=0) Тогда
		ОткрытьФорму(ДокОснование3);
		Возврат;
	ИначеЕсли (Номер=4) И (ПустоеЗначение(ДокОснование4)=0) Тогда
		ОткрытьФорму(ДокОснование4);
		Возврат;
	КонецЕсли;
	
	// если документа - основания нет, позволяем выбрать его
	Основание = глВыбратьОснование(Контекст);
	Если ПустоеЗначение(Основание) = 0 Тогда
		// Выбрали основание
		ТекстВопроса = "Заполнить по документу основанию?";
		//Если КоличествоСтрок() <> 0 Тогда
		//	ТекстВопроса = ТекстВопроса + РазделительСтрок +" (перед заполнением табличная часть будет очищена)";
		//КонецЕсли;
		
		Если Вопрос(ТекстВопроса, "Да+Нет", 60) <> "Да" Тогда
			Возврат;
		КонецЕсли;  
		
		Если Номер = 1 Тогда
			ДокОснование1 = Основание; 
		ИначеЕсли Номер = 2 Тогда
			ДокОснование2 = Основание;
		ИначеЕсли Номер = 3 Тогда
			ДокОснование3 = Основание;
		ИначеЕсли Номер = 4 Тогда
			ДокОснование4 = Основание; 
		КонецЕсли;
		
		ЗаполнениеПоДокументуОснованию(Номер);
		//Контрагент		= ДокОснование.Контрагент;
	КонецЕсли;
	
КонецПроцедуры //ПоКнопкеОснование()

//Процедура ПриФлагДока()
//	Если ФлагДока=1 тогда
//		Отработан=1;
//	иначе
//		Отработан=0;
//	КонецЕсли;
//КонецПроцедуры 

//******************************************************************************                                        
// ИнформацияОНоменклатуре()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Строка информации о Номенклатуре в документе
//
// Описание:
// 	Формирует строку, включающую название, артикул Номенклатуры, реквизиты партии
//
Функция ИнформацияОНоменклатуре()
	
	Перем ОстатокНаСкладе, ОстатокПоФирме , Резерв ; // для показа остатков
	Перем ОстатокНаСкладеТранзит, ОстатокПоФирмеТранзит;
	
	ИнфоТекст="";
	
	Если Номенклатура.Выбран()=0 Тогда
		Возврат(ИнфоТекст);
	КонецЕсли;
	
	ИнфоТекст=ИнфоТекст+СокрЛП(Номенклатура.Наименование);
	
	Если ПустоеЗначение(Номенклатура.Артикул)=0 Тогда
		ИнфоТекст=?(ИнфоТекст="","",ИнфоТекст+",");
		ИнфоТекст=ИнфоТекст+" арт. "+СокрЛП(Номенклатура.Артикул);
	КонецЕсли;
	
	ПокажиОстатки();
	
	Форма.Обновить();
	
	Возврат(ИнфоТекст);
	
КонецФункции //ИнформацияОНоменклатуре()  

//{{ПРОЦЕДУРА_ПЕЧАТИ(Печать)


//Процедура Печать()  	
//	Если Отработан=1 тогда
//		Отр="ДА";
//	иначе
//		Отр="НЕТ";
//	КонецЕсли;
//	
//	Таб = СоздатьОбъект("Таблица");
//	Таб.ИсходнаяТаблица("Печать");
//	Таб.ВывестиСекцию("Шапка");
//	Таб.Опции(0,0,0,0);
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		Таб.ВывестиСекцию("Строка");
//	КонецЦикла;
//	Таб.ВывестиСекцию("Подвал");
//	Таб.Показать("Печать Сводный Заказ Поставщикам","");
//КонецПроцедуры     

Процедура Печать(ПарФирма, ПарТолькоИтог) 
	
	Сум = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Цен = Номенклатура.ПоследняяЦенаПрихода.Получить(ТекущаяДата());
		Если Цен = 0 Тогда
			Сообщить("По товару '"+Номенклатура+"' не указана цена прихода..");
		Иначе
			Сум = Сум + (Цен * КолИтог);
		КонецЕсли;
	КонецЦикла;
	
	Ответ = Вопрос("Сумма заказа составляет "+Сум+". Продолжить печать?","Да+Нет");
	
	Если Ответ = "Да" Тогда
		
		Таб = СоздатьОбъект("Таблица");
		
		Если ПарТолькоИтог = 1 Тогда
			Таб.ИсходнаяТаблица("ПечатьИтог");
		Иначе
			Таб.ИсходнаяТаблица("ПечатьМагазины");
		КонецЕсли;
		
		ПечАвтор =      глПользователь; 
		ПечКонтрагент = Контрагент;
		ПечДата =       ТекущаяДата();   
		ПечMAIL =       СокрЛП(глПользователь.ЭлектронныйАдрес);
		
		ПечАдресДоставки =     "Полюстровский, 87";  
		ПечТелефонКладовщика = "Тел.кладовщика 8-911-705-73-00";
		//Если ДокОснование.Вид() = "ЗаявкаКлиентаРозница" Тогда
		//	Если ДокОснование.Склад.Выбран() = 1 Тогда
		//		ПечАдресДоставки =     СокрЛП(ДокОснование.Склад);    
		//		ПечТелефонКладовщика = "";
		//	КонецЕсли;
		//КонецЕсли;
		
		Если ПарТолькоИтог = 0 Тогда
			ПечСклад1 = Склад1;
			ПечСклад2 = Склад2;
			ПечСклад3 = Склад3;
			ПечСклад4 = Склад4;
		КонецЕсли; 						
		
		Таб.ВывестиСекцию("Шапка"); 
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл  
			
			ПечНаименование 	= Номенклатура;
			ПечКод 				= Номенклатура.Код;
			ПечАртикул 			= Номенклатура.Артикул;
			ПечПроизводитель 	= Номенклатура.Производитель;
			ПечКолИтог 			= КолИтог;
			ПечЕдиница 			= Номенклатура.БазоваяЕдиница;
			
			Если ПарТолькоИтог = 0 Тогда
				ПечКол1 = КолСклад1;
				ПечКол2 = КолСклад2;
				ПечКол3 = КолСклад3;
				ПечКол4 = КолСклад4;
			КонецЕсли;
						
			Таб.ВывестиСекцию("Стр");
			
		КонецЦикла;
				
		Ф = "ООО Сан Саныч";
		Если ПарФирма = 0 Тогда
			Таб.ВывестиСекцию("ПодвалСанСаныч"); 
		ИначеЕсли ПарФирма = 1 Тогда
			Таб.ВывестиСекцию("ПодвалЭксперт");  
			Ф = "ООО Эксперт";
		КонецЕсли;
		
		Таб.ПараметрыСтраницы(1,,0,0,0,0,,,1,,,);
		Таб.Опции(0,0,0,0);
		Таб.Показать("Сводный заказ поставщикам ("+Ф+")","");
		
	КонецЕсли;
	
КонецПроцедуры

//**********************************************************

Процедура ПоКнПеч()            
	 
	Спис  = СоздатьОбъект("СписокЗначений");
	//Спис.ДобавитьЗначение("Форма базовая");
	Спис.ДобавитьЗначение("Сан Саныч");
	Спис.ДобавитьЗначение("Эксперт");
	Выб = "";
	
	ПарФирма = 0;
	ПарТолькоИтог = 0;
	
	Если Спис.ВыбратьЗначение(Выб,"",,,1) = 1 Тогда 
		Если Выб = "Сан Саныч" Тогда
			ПарФирма = 0;
		ИначеЕсли Выб = "Эксперт" Тогда
			ПарФирма = 1;
		КонецЕсли;
	КонецЕсли;
	
	Ответ = Вопрос("Выводить на печать детализацию по магазинам?","Да+Нет");
	Если Ответ = "Да" Тогда
		ПарТолькоИтог = 0;
	Иначе
		ПарТолькоИтог = 1;
	КонецЕсли; 
	
	Печать(ПарФирма, ПарТолькоИтог);

КонецПроцедуры

//}}ПРОЦЕДУРА_ПЕЧАТИ

//Обработка складов
Функция ПокажиОстатки()
	Перем стр;
	
	Если НС=НомерСтроки Тогда
		возврат 0;
	КонецЕсли;
	Если (НазваниеНабораПрав()="Сервис") или (НазваниеНабораПрав()="Продавец_розница") Тогда
		возврат 0;
	КонецЕсли;
	
	стр="";
	ТЗ_Остаток.УдалитьСтроки();
	Склад_Темп.ВыбратьЭлементы();
	Пока Склад_темп.ПолучитьЭлемент()=1 Цикл
		//Если Склад_темп.Магазин=0 Тогда
		Если (Найти(Склад_темп.Наименование,"Хранение")=0) или (Склад_темп.Наименование = "Хранение Полюстровский") Тогда	
			Рег1.УстановитьФильтр(,Номенклатура,Склад_темп);
			Рег1.ВыгрузитьИтоги(ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
			
			//рег2.УстановитьФильтр(Номенклатура,Склад_темп);
			//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
			//рег2.ВыгрузитьИтоги(ТЗ2,1,1);
			
			ТЗ2.Свернуть("Номенклатура","Количество");
			х					= ПолучитьПустоеЗначение(х);
			у					= 1;
			
			а=0;
			
			//Если ТЗ2.НайтиЗначение(Номенклатура,х,у)=1 Тогда	//Сначала общий резерв
			//	а=1;
			//	ТЗ_Остаток.НоваяСтрока();
			//	ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
				//ТЗ_Остаток.Резерв	= ТЗ2.ПолучитьЗначение(х,"Количество");
			//	х					= ПолучитьПустоеЗначение(х);
			//КонецЕсли;
			//Теперь из остатков ТМЦ
			х			= ПолучитьПустоеЗначение(х);
			у			= 2;
			Если ТЗ.НайтиЗначение(Номенклатура,х,у)=1 Тогда
				Если а=0 Тогда
					ТЗ_Остаток.НоваяСтрока();
					ТЗ_Остаток.Склад=Склад_Темп.ТекущийЭлемент();
				КонецЕсли;
				ТЗ_Остаток.Остаток	= ТЗ.ПолучитьЗначение(х,"Количество");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	НС=НомерСтроки;
	стрк="";
	возврат стрк;
КонецФункции

Процедура ПокажиДетализациюРезерва()
	Если ТЗ_Остаток.КоличествоСтрок()=0 Тогда
		возврат;
	ИначеЕсли НазваниеНабораПрав("Продавец_розница")=1 Тогда
		Возврат;
	КонецЕсли;
	х	= ТЗ_Остаток.ТекущаяСтрока();
	скл	= ТЗ_Остаток.ПолучитьЗначение(х,"Склад");
	ном	= Номенклатура;
	ТекД= ДокОснование1;
	КонтРезерв	= СоздатьОбъект("СписокЗначений");	//Передача параметров в обработку "РезервыТМЦ" 
	КонтРезерв.ДобавитьЗначение(скл,"Склад");
	КонтРезерв.ДобавитьЗначение(ном,"Номенклатура");
	КонтРезерв.ДобавитьЗначение(ТекД,"ТекД");
	
	ОткрытьФормуМодально("Обработка.ПокажиРезервыТМЦ", контРезерв);
КонецПроцедуры

Процедура ПриЗаписи()
	  
	//Валерий МЭТР
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	//Если ДокОснование.Вид()="ЗаявкаКлиентаРозница" Тогда	//Зададим признак отбора в рознице
	//	проба		= СоздатьОбъект("Справочник.ОтборРознДокум");
	//	ЭР			= сокрЛП(Перечисление.ВидДокументаРозница.ЗаявкаНаСкладСрочнаяРозница)+сокрЛП(склад);
	//	Если проба.НайтиПоНаименованию(сокрЛП(ЭР),0,0)=1 Тогда
	//		ЭтоРозница=проба.ТекущийЭлемент();
	//	Иначе
	//		проба.новый();
	//		проба.наименование=ЭР;
	//		проба.записать();
	//		ЭтоРозница=проба.ТекущийЭлемент();
	//	КонецЕсли;
	//КонецЕсли; 
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры

Процедура ОбработкаПодбора(ВыбЗнач, КонтФормыПодбора)
	// есть ставки налогов, есть скидка
	глОбработкаПодбора(Контекст, ВыбЗнач, 0, 0, 0);
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Артикул			= Номенклатура.Артикул;
		Производитель	= Номенклатура.Производитель;
		//СрокПоставки	= РабочаяДата()+1;
		//СрокФакт		= РабочаяДата()+1;
		
	КонецЦикла;
КонецПроцедуры // ОбработкаПодбора()

Процедура ПоКнопкеПодбор()
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.ДобавитьЗначение(Фирма,           "Фирма");
	Параметры.ДобавитьЗначение(ПолучитьПустоеЗначение(),           "Склад");
	//	Параметры.ДобавитьЗначение(Договор,         "Договор");
	Параметры.ДобавитьЗначение(0,               "ЕстьВидТМЦ");
	Параметры.ДобавитьЗначение("Нет", "ЦенаВподборе");
	Параметры.ДобавитьЗначение(глПользователь.ОсновнойТипЦенПродажи,          "ТипЦен");      
	Параметры.ДобавитьЗначение(глРубли,		    "Валюта");
	Параметры.ДобавитьЗначение(глКурсДляВалюты(глРубли,ДатаДок), "Курс");
	
	Если Выбран() = 0 Тогда
		Параметры.ДобавитьЗначение("Дата",  "ТипГраницы");
		Параметры.ДобавитьЗначение(ДатаДок, "ЗначениеГраницы");
	Иначе
		Параметры.ДобавитьЗначение("Позиция",         "ТипГраницы");
		Параметры.ДобавитьЗначение(ПолучитьПозицию(), "ЗначениеГраницы");
	КонецЕсли;
	
	Параметры.ДобавитьЗначение("Подбор номенклатуры в документ " + ПредставлениеВида() + " № " + НомерДок, "Заголовок");
	глПодборРозница(Контекст, Параметры);
	
КонецПроцедуры // ПоКнопкеПодбор()


//Тело модуля
ОбщРег           = СоздатьОбъект("Регистры");
ОстаткиТМЦ       = ОбщРег.ОстаткиТМЦ;
РезервыТМЦ       = ОбщРег.РезервыТМЦ;
СписокПараметров = СоздатьОбъект("СписокЗначений"); 
СписокПараметров.Установить("ОбщРег"              , ОбщРег);
СписокПараметров.Установить("ОстаткиТМЦ"          , ОстаткиТМЦ);
СписокПараметров.Установить("РезервыТМЦ"          , РезервыТМЦ);
СписокПараметров.Установить("ФильтрПоСкладу"      , ПолучитьПустоеЗначение("Справочник.Склады"));
СписокПараметров.Установить("ФильтрПоФирме"       , ПолучитьПустоеЗначение("Справочник.Фирмы"));
СписокПараметров.Установить("ПозицияРегистра"     , 0);

ТЗ			= СоздатьОбъект("ТаблицаЗначений");
ТЗ2			= СоздатьОбъект("ТаблицаЗначений");
Рег1		= СоздатьОбъект("Регистр.ОстаткиТМЦ");
//Рег2		= СоздатьОбъект("Регистр.РезервыТМЦ2");
Склад_темп	= СоздатьОбъект("Справочник.Склады");  

ТаблицаТекущая = СоздатьОбъект("ТаблицаЗначений");

