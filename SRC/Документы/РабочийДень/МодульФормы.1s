Перем ИтогоПродано, ИтогоВозвращено, ИтогоВыданоПроцентов, ИтогоВыданоКредитов, ИтогоПогашеноКредитов, ИтогоПолученоЗалогов, ИтогоПогашеноЗалогов;
Перем ИтогоПроданоЧ, ИтогоВозвращеноЧ, ИтогоВыданоПроцентовЧ, ИтогоВыданоКредитовЧ, ИтогоПогашеноКредитовЧ, ИтогоПолученоЗалоговЧ, ИтогоПогашеноЗалоговЧ, ВыданоЗалоговСпр;
Перем ВыданоЗалоговККСпр,ВыданоЗалоговККЭСпр;
Перем ПроданоСпр, ВозвращеноСпр, ВыданоПроцентовСпр, ВыданоКредитовСпр, ПогашеноКредитовСпр, ПолученоЗалоговСпр, ПолученоЗалоговККСпр,ПолученоЗалоговККЭСпр, ПогашеноЗалоговСпр;
Перем ПогашеноБонусовСпр;
Перем ПроданоККСпр, ВозвращеноККСпр, ВозвращеноККЭСпр, ПроданоБонусСпр, ВозвращеноБонусовСпр;
Перем ОстатокЗалоговВСейфе, ОстатокЗалоговВСейфеСпр;
Перем ZОтчетСпр, ОстатокНаНачалоДня, ОстатокНаНачалоДняЧ, ОстатокНаНачалоДняСпр, ОстатокНаКонецДня, ОстатокНаКонецДняЧ, ОстатокНаКонецДняСпр;
Перем ИтогоНаличныеСпр, СписокПродавцов;

//++Ерошенко 21.05.2007
Функция ТаблицаЗалогов()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Док");
	ТЗ.НоваяКолонка("Контр");
	ТЗ.НоваяКолонка("Залог");
	Док = СоздатьОбъект("Документ.ЗаявкаКлиентаРозница");
	Док.ВыбратьДокументы(ДатаДок,ДатаДок);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Проведен() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если Док.Оплачено = 0 Тогда
			Продолжить;
		КонецЕсли;
		ТЗ.НоваяСтрока();
		ТЗ.Док =   Док.ТекущийДокумент();
		ТЗ.Контр = Док.Контрагент;
		ТЗ.Залог = Док.Оплачено;
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции
//--Ерошенко   

//++Ерошенко 22.05.2007
Функция ТаблицаОтгрузокПоЗалогам()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Док");
	ТЗ.НоваяКолонка("Контр");
	ТЗ.НоваяКолонка("Залог");
	Док = СоздатьОбъект("Документ.РасходнаяНакладнаяРозница");
	Док.ВыбратьДокументы(ДатаДок,ДатаДок);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Проведен() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		Если Док.ДокОснование.Вид() = "ЗаявкаКлиентаРозница" Тогда
			Если Док.ДокОснование.Оплачено = 0 Тогда
				Продолжить;
			КонецЕсли;
			ТЗ.НоваяСтрока();
			ТЗ.Док =   Док.ДокОснование;
			ТЗ.Контр = Док.ДокОснование.Контрагент;
			ТЗ.Залог = Док.ДокОснование.Оплачено;  
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции
//--Ерошенко
        
//++Ерошенко 22.05.2007
Функция ТаблВозвратаДолгов()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Док");
	ТЗ.НоваяКолонка("Контр");
	ТЗ.НоваяКолонка("Залог");
	Док = СоздатьОбъект("Документ.ВозвратДолгов_Розница");
	Док.ВыбратьДокументы(ДатаДок,ДатаДок);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Проведен() = 0 Тогда
			Продолжить;
		КонецЕсли;  
		Если Док.Склад <> Склад Тогда
			Продолжить;
		КонецЕсли;
		
		ТЗ.НоваяСтрока();
		ТЗ.Док =   Док.ТекущийДокумент();
		ТЗ.Контр = Док.Контрагент;
		ТЗ.Залог = Док.Итог("Сумма"); 
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции
//--Ерошенко      

//++Ерошенко 22.05.2007
Функция ТаблПроката()
	ТЗ = СоздатьОбъект("ТаблицаЗначений");  
	
	ДатаПо = ТекущийДокумент();
	ДатаС =  ТекущийДокумент();
	СпрНом = СоздатьОбъект("Справочник.Номенклатура");
	Если СпрНом.НайтиПоНаименованию("Инструмент прокатный") = 1 Тогда
		ГрНом = СпрНом.ТекущийЭлемент();
		Запрос = СоздатьОбъект("Запрос");    
		ТекстЗапроса = "
		|Период с ДатаС по ДатаПо;
		|Без Итогов;   
		|Номенклатура =   Регистр.ОстаткиТМЦ.Номенклатура;
		|Склад_ =         Регистр.ОстаткиТМЦ.Склад;
		|Количество =     Регистр.ОстаткиТМЦ.Количество;
		|Функция КонОст = КонОст(Количество);
		|Группировка Номенклатура Без Групп;  
		|Условие(Склад_ = Склад);
		|Условие(Номенклатура В ГрНом);
		|Без Итогов;";
		Запрос.Выполнить(ТекстЗапроса);
		Запрос.Выгрузить(ТЗ);
	КонецЕсли;  
	
	Возврат ТЗ;
КонецФункции
//--Ерошенко   

//++Ерошенко 25.05.2007
Функция ТаблицаКредитов()
	
	// для исключения противоречий, идущий далее блок кода скопирован из 
	// созданного ранее блока справочного расчёта Выплаты и Погашения кредитов... 
	//
	Запрос =       СоздатьОбъект("Запрос");
	Переч	=      Перечисление.ВидВзаимодействия;
	ТекстЗапроса = "
	|Период с (ДатаДок) по (ДатаДок);
	|ВидВзаимодействия 	=   Регистр.Покупатели_розница.ВидВзаимодействия;
	|Склад_Выдачи		= 	Регистр.Покупатели_розница.ТекущийДокумент.ВозвратДолгов_Розница.Склад_выдачи, 
	|						Регистр.Покупатели_розница.ТекущийДокумент.РасходнаяНакладнаяРозница.Склад,
	|						Регистр.Покупатели_розница.ТекущийДокумент.ВозвратОтПокупателя_Розница.Склад;
	|СуммаРуб			=   Регистр.Покупатели_розница.СуммаРуб;    
	|Группировка Документ;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Условие(Склад_Выдачи в Склад);
	|Условие(ВидВзаимодействия в Переч.ДолгЗаТовары); 
	|Без Итогов;
	|";
	Запрос.Выполнить(ТекстЗапроса);
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ);
	
	Возврат ТЗ;
	
КонецФункции
//--Ерошенко


Процедура ВводНового(Скопирован)
	
	Если (Скопирован=1) и (НазваниеНабораПрав()="Продавец_розница") тогда
		сообщить("Вы не можете вводить данный документ копированием!");
		форма.закрыть(0);
		возврат;
	КонецЕсли;
	глЗаполнитьШапку(Контекст, Скопирован);
	
	Склад	= глПользователь.ОсновнойСклад;
	Касса	= глПользователь.ОсновнаяКасса;
	Филиал	= Касса.Филиал;

	док=создатьОбъект("Документ.РабочийДень");
    если док.ВыбратьДокументы(ТекущаяДата(),ТекущаяДата())=1 тогда
		пока док.получитьДокумент()=1 цикл
			если (док.Склад=Склад) и (строка(Док)<>строка(ТекущийДокумент())) тогда
				сообщить("Такой документ для данного магазина за сегодня, уже введён!");
				сообщить("Воспользуйтесь соответствующим журналом...");
				форма.Закрыть(0);
				возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Контрагент	= Константа.КонтрагентДляРД;
	Договор		= Константа.ДоговорКонтрагентаДляРД;
	
КонецПроцедуры


Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
    
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		форма.флДвижения.Доступность(0);
		форма.кнБанк	.Доступность(0);
		форма.Контрагент.Доступность(0);
		форма.Договор	.Доступность(0);
		форма.ДатаДок	.Доступность(0);
		форма.НомерДок	.Доступность(0);
		форма.Склад		.Доступность(0);
		форма.кнДеньгиЗаТерминал.Доступность(0);
	Иначе
		форма.флДвижения.Доступность(1);
		форма.кнБанк	.Доступность(1);
		форма.Контрагент.Доступность(1);
		форма.Договор	.Доступность(1);
		форма.ДатаДок	.Доступность(1);
		форма.НомерДок	.Доступность(1);
		форма.Склад		.Доступность(1);
		форма.кнДеньгиЗаТерминал.Доступность(1);
	КонецЕсли;  
	
	//++Ерошенко 23.05.2007
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные данные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительные данные"); 
	Форма.ИспользоватьСлой("Основной");
	
	ПредТЧ = "";
	Если ТЧРабочегоДня.Выбран() = 0 Тогда // если нет связанного документа 
		ТЗ =  ТаблПроката();              // прокатов, заполним таблицу "с нуля"
		
		Док = СоздатьОбъект("Документ.РабочийДень");   // теперь проверим, не было ли введено  
		Док.ВыбратьДокументы(ДатаДок - 1,ДатаДок - 1); // данных по прокату за предыдущий день... 
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если Док.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			Если Док.Проведен() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ПредТЧ = Док.ТЧРабочегоДня;                // если было, запомним вчерашний
		КонецЦикла;                                    // связанный документ прокатов
	Иначе
		ТЗ = СоздатьОбъект("ТаблицаЗначений");      
		ТЗ.НоваяКолонка("Номенклатура");
		ТЗ.НоваяКолонка("КонОст");
		ТЗ.НоваяКолонка("ВМагазине");
		ТЗ.НоваяКолонка("ВПрокате");
		ТЧРабочегоДня.ВыбратьСтроки();
		Пока ТЧРабочегоДня.ПолучитьСтроку() = 1 Цикл
			ТЗ.НоваяСтрока();
			ТЗ.Номенклатура = ТЧРабочегоДня.Модель;
			ТЗ.КонОст =       ТЧРабочегоДня.Всего;
			ТЗ.ВМагазине =    ТЧРабочегоДня.ВМагазине;
			ТЗ.ВПрокате =     ТЧРабочегоДня.ВПрокате; 
		КонецЦикла;
	КонецЕсли;
	ТЗ.ВыбратьСтроки(); 
	Прокат.НоваяКолонка("Модель",,,,,15);
	Прокат.НоваяКолонка("Всего",,,,,5,,2);
	Прокат.НоваяКолонка("ВПрокате",,,,"В прокате",4,,2);
	Прокат.НоваяКолонка("ВМагазине",,,,"В магазине",4,,2);
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Прокат.НоваяСтрока();
		Прокат.Модель =    ТЗ.Номенклатура;
		Прокат.Всего =     ТЗ.КонОст;
		Если ТЧРабочегоДня.Выбран() = 0 Тогда
			Прокат.ВМагазине = ТЗ.КонОст; 
		Иначе
			Прокат.ВМагазине = ТЗ.ВМагазине;
			Прокат.ВПрокате =  ТЗ.ВПрокате;
		КонецЕсли;
	КонецЦикла;  
	
	Если ПредТЧ <> "" Тогда // т.е. если был вчерашний документ прокатов, а сегодняшнего ещё нет..  
		ПредТЧ.ВыбратьСтроки();
		Пока ПредТЧ.ПолучитьСтроку() = 1 Цикл
			Прокат.ВыбратьСтроки();
			Пока Прокат.ПолучитьСтроку() = 1 Цикл
				Если Прокат.Модель = ПредТЧ.Модель Тогда
					Прокат.ВПрокате = ПредТЧ.ВПрокате; // поскольку остаток в магазине мог и измениться,
				КонецЕсли;                             // подставлять будем количество в прокате.. 
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
	//--Ерошенко 
	
	//Валерий МЭТР
	глПроверкаРазрешенияРедактирования(Контекст);
	
КонецПроцедуры

Процедура ПриЗаписи()
	
	//Валерий МЭТР:
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	СтрПродавец	= ЗначениеВСтрокуВнутр(ТЗ_авторизация);
	проба		= СоздатьОбъект("Справочник.ОтборРознДокум");
	ЭР			= сокрЛП(Перечисление.ВидДокументаРозница.АвторизацияРозница)+сокрЛП(склад);
	Если проба.НайтиПоНаименованию(сокрЛП(ЭР),0,1)=1 Тогда
	    ЭтоРозница=проба.ТекущийЭлемент();
	Иначе
		проба.новый();
		проба.наименование=ЭР;
		проба.записать();
		ЭтоРозница=проба.ТекущийЭлемент();
	КонецЕсли;
	
	//++Ерошенко 23.05.2007
	НовДок = СоздатьОбъект("Документ.ТЧРабочегоДня");
	Если ТЧРабочегоДня.Выбран() = 0 Тогда
		НовДок.Новый();
		НовДок.ДокОснование = ТекущийДокумент();
		НовДок.Записать(); 
		ТЧРабочегоДня = НовДок.ТекущийДокумент();
	Иначе
		Если НовДок.НайтиДокумент(ТЧРабочегоДня) = 1 Тогда
			НовДок.УдалитьСтроки(); 
			НовДок.Записать();
		КонецЕсли;
	КонецЕсли;
	Прокат.ВыбратьСтроки();
	Пока Прокат.ПолучитьСтроку() = 1 Цикл
		НовДок.НоваяСтрока();
		НовДок.Модель =    Прокат.Модель;
		НовДок.Всего =     Прокат.Всего;
		НовДок.ВПрокате =  Прокат.ВПрокате;
		НовДок.ВМагазине = Прокат.ВМагазине;
	КонецЦикла;
	НовДок.Записать();
	//--Ерошенко
    ПриЗаписиДокумента(Контекст);
КонецПроцедуры

//Обрабатываем данные с ридера
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные);
	Scaner.EventNumber	= Число(Данные);
	Карта				= Scaner.ScanData;	//Данные со штрихкода
	Scaner.DeleteEvent();
	Scaner.DataEventEnabled = 1;
	
	Если ПустоеЗначение(Карта)=0 тогда
		если лев(карта,2)="99"	тогда	//Это продавец
			Прод=СоздатьОбъект("Справочник.Пользователи");
			если Прод.ВыбратьЭлементыПоРеквизиту("КартаАвторизации", сокрЛП(карта),0)=1 тогда
				Прод.ПолучитьЭлемент();
				ТЗ_авторизация.ВыбратьСтроки();
				пока ТЗ_авторизация.ПолучитьСтроку()=1 цикл
					если ТЗ_авторизация.Продавец=Прод.ТекущийЭлемент() тогда
						сообщить("Вы уже введены в журнал регистрации!");
						возврат;
					конецЕсли;
				КонецЦикла;
				ТЗ_авторизация.НоваяСтрока();
				ТЗ_авторизация.Продавец	= Прод.ТекущийЭлемент();
				ТЗ_авторизация.Время	= ТекущееВремя();
			иначе
				сообщить("Не смогли найти соответствие для вашей карты, ЗВОНИТЕ В ОФИС!");
				возврат;
			КонецЕсли;
		иначе
			сообщить("Внимание! Кодировка карты не принадлежит продавцу нашей фирмы!");
			возврат;
		конецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция НайдиЗалоги(Док)
	Перем Запрос, ТекстЗапроса, СуммаЗалога; 
	
	//Если Док.ДокОснование.Вид()="ЗаявкаКлиентаРозница" Тогда
	//	мЗаявкаКлиента	= Док.ДокОснование.ТекущийДокумент();
	//Иначе
	//	мЗаявкаКлиента 	= глПолучитьЗаявку(Док);
	//КонецЕсли;
	
	Запрос 	= СоздатьОбъект("Запрос");
	ТЗ_Долги= СоздатьОбъект("ТаблицаЗначений");
	Состояние("Расчёт таблицы текущих бонусов...");
	СуммаЗалога = 0;
	ВЗ		= Перечисление.ВидВзаимодействия.Залоги;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеБонусы)
	|Без итогов;   
	|Период с ДатаДок по ДатаДок;
	|Клиент 				= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 		= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин				= Регистр.Покупатели_розница.Магазин;
	|КредДокумент			= Регистр.Покупатели_розница.КредДокумент; 
	|ТекущийДокумент			= Регистр.Покупатели_розница.ТекущийДокумент;
	|СуммаРуб 				= Регистр.Покупатели_розница.СуммаРуб;
	|Функция СуммаСписано 	= Расход(СуммаРуб);
	//|Группировка Клиент без групп;
	//|Группировка Магазин без Групп;
	|Группировка КредДокумент без Групп;
	//|Условие(Клиент = Контрагент);
	|Условие(ВидВзаимодействия = ВЗ);
	|"//}}ЗАПРОС
	;
	
	//Если Док.Выбран() = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Условие(ТекущийДокумент = Док);";
	//КонецЕсли;	
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Состояние("Обрабатываем информацию о текущих бонусах...");
	Запрос.Выгрузить(ТЗ_Долги);
	
	
	ТЗ_Долги.ВыбратьСтроки();
	Пока ТЗ_Долги.ПолучитьСтроку()=1 Цикл
		//Если ТЗ_Долги.КредДокумент.Вид()<>"РасходнаяНакладнаяРозницаБезнал" тогда
			//НоваяСтрока();
			//Документ_			= ТЗ_Долги.КредДокумент;
			//Если ТЗ_Долги.КредДокумент.Проведен() = 0 Тогда
			//	Склад = ТЗ_Долги.АналитикаПродажи.Магазин;
			//Иначе
			//	Склад = ТЗ_Долги.Магазин;
			//КонецЕсли;
			СуммаЗалога				= СуммаЗалога + ТЗ_Долги.СуммаСписано;
			//АналитикаСчетБезнал = ТЗ_Долги.АналитикаСчетБезнал;
			//АналитикаПродажи 	= ТЗ_Долги.АналитикаПродажи;
		//КонецЕсли;
	КонецЦикла;
	//КонецЕсли;
	 
	Возврат СуммаЗалога;
КонецФункции

Процедура Продано()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Продано)
	|Период с (ДатаДок) по (ДатаДок);
	|Обрабатывать НеПомеченныеНаУдаление;
	|СкладВыдачи = Документ.РасходнаяНакладнаяРозница.Склад;
	|Сумма = Документ.РасходнаяНакладнаяРозница.Сумма, Документ.РасходнаяНакладнаяРозница.СуммаНДС;
	//|Сумма = Документ.РасходнаяНакладнаяРозница.Сумма, Документ.РасходнаяНакладнаяРозница.СуммаНДС;
	|Функция СуммаСумма = Сумма(Сумма);
	|Группировка Документ;
	|Условие(СкладВыдачи в Склад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//Наберём данные 
	ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	Запрос.выгрузить(ТЗ,0,0);
	ТЗ.ВыбратьСтроки(); ПроданоККСпр	= 0; ПроданоСпр	= 0; ПроданоБонусСпр =0;
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		если тз.документ.ОплатаПоКредитке=1 Тогда
			ПроданоККСпр 	= ПроданоККСпр + тз.СуммаСумма - НайдиЗалоги(тз.документ) - тз.документ.ОплаченоБонусом;
			//Иначе
		КонецЕсли;      
		ПроданоБонусСпр = ПроданоБонусСпр 	+ тз.документ.ОплаченоБонусом;
		ПроданоСпр		= ПроданоСпр 		+ тз.СуммаСумма;
	КонецЦикла;
	//А теперь запишем итоги
	ИтогоПроданоСпр	="Итого было продано на сумму: "+глФРМ(ПроданоСпр - ПроданоККСпр - ПроданоБонусСпр,глРубли);
	ИтогоПроданоЧ	= ПроданоСпр;
КонецПроцедуры


Процедура Возвращено()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Возвращено)
	|Период с (ДатаДок) по (ДатаДок);
	|Обрабатывать НеПомеченныеНаУдаление;
	|СкладВыдачи 	= Документ.ВозвратОтПокупателя_Розница.Склад;
	|Сумма 			= Документ.ВозвратОтПокупателя_Розница.Сумма, Документ.ВозвратОтПокупателя_Розница.СуммаНДС;
	|Функция СуммаСумма = Сумма(Сумма);
	|Группировка Документ;
	|Условие(СкладВыдачи в Склад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	//Наберём данные 
	ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	Запрос.выгрузить(ТЗ,0,0);
	тз.ВыбратьСтроки(); ВозвращеноККСпр = 0; ВозвращеноСпр = 0; ВозвращеноККЭСпр = 0; ВозвращеноБонусовСпр = 0;
	Пока тз.ПолучитьСтроку() = 1 Цикл  
		Если тз.документ.ВернутьНал <> 0 Тогда 
			ТекСумма = тз.документ.ВернутьНал;
		Иначе	
			ТекСумма = тз.СуммаСумма;
		КонецЕсли;	
		Если тз.документ.Проект.Код = "00028" Тогда
			ВозвращеноККЭСпр 	= ВозвращеноККЭСпр + ТекСумма;
		ИначеЕсли тз.документ.ОплатаПоКредитке = 1 Тогда
			ВозвращеноККСпр 	= ВозвращеноККСпр + ТекСумма;
		КонецЕсли;
		ВозвращеноБонусовСпр 	= ВозвращеноБонусовСпр + тз.документ.ВернутьБонусов;
		ВозвращеноСпр			= ВозвращеноСпр + тз.СуммаСумма;
	//+++Горлач
	//КонецЕсли;
	//---Горлач
	КонецЦикла;
	
	ИтогоВозвращено		= "Итого было возвращено на сумму: "+глФРМ(ВозвращеноСпр,глРубли);
	ИтогоВозвращеноЧ	= ВозвращеноСпр;
	
КонецПроцедуры

Процедура ВыданоПроцентов()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ВыданоПроцентов)
	|Период с (ДатаДок) по (ДатаДок);
	|Обрабатывать НеПомеченныеНаУдаление;
	|СкладВыдачи = Документ.ВыплатаПроцентов_Розница.Склад_выдачи;
	|Сумма = Документ.ВыплатаПроцентов_Розница.Сумма; 
	|Функция СуммаСумма = Сумма(Сумма);
	|Условие(СкладВыдачи в Склад);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	ИтогоВыданоПроцентов	= "Итого было выдано процентов на сумму: "+глФРМ(Запрос.СуммаСумма,глРубли);
	ИтогоВыданоПроцентовЧ	= Запрос.СуммаСумма;
	
КонецПроцедуры

Процедура ДанныеПоКредитам()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос	= СоздатьОбъект("Запрос");
	Склад_Выдачи = склад;
	Переч	= Перечисление.ВидВзаимодействия;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДанныеПоЗалогам)
	|Период с (ДатаДок) по (ДатаДок);
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
//	|Магазин 			= Регистр.Покупатели_розница.Магазин;
	|Склад_Выдачи		= 	Регистр.Покупатели_розница.ТекущийДокумент.ВозвратДолгов_Розница.Склад_выдачи, 
	|						Регистр.Покупатели_розница.ТекущийДокумент.РасходнаяНакладнаяРозница.Склад,
	|						Регистр.Покупатели_розница.ТекущийДокумент.ВозвратОтПокупателя_Розница.Склад;
	|СуммаРуб			= Регистр.Покупатели_розница.СуммаРуб;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	|Условие(Склад_Выдачи в Склад);
	|Условие(ВидВзаимодействия в переч.ДолгЗаТовары);
	|";//}}ЗАПРОС
		// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	ВыданоКредитовСпр		= Запрос.СуммаРубРасход;
	ПогашеноКредитовСпр		= Запрос.СуммаРубПриход;

	ИтогоВыданоКредитовЧ	= ВыданоКредитовСпр;
	ИтогоПогашеноКредитовЧ	= ПогашеноКредитовСпр;

	ИтогоВыданоКредитов		= "Итого было выдано кредитов на сумму: "+глФРМ(Запрос.СуммаРубРасход,глРубли);
	ИтогоПогашеноКредитов	= "Итого было погашено кредитов на сумму: "+глФРМ(Запрос.СуммаРубПриход,глРубли);
КонецПроцедуры
             
Процедура ДанныеПоБонусам()
	Перем Запрос, ТекстЗапроса;
	////Создание объекта типа Запрос
	//Запрос	= СоздатьОбъект("Запрос");
	//Переч	= Перечисление.ВидВзаимодействия;
	//ТекстЗапроса = 
	//"//{{ЗАПРОС(ДанныеПоЗалогам)
	//|Период с (ДатаДок) по (ДатаДок);
	//|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	//|Магазин 			= Регистр.Покупатели_розница.Магазин;
	//|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
	//|ТекущийДокумент	= Регистр.Покупатели_розница.ТекущийДокумент;
	//|Функция СуммаРубПриход = Приход(СуммаРуб);
	//|Функция СуммаРубРасход = Расход(СуммаРуб);
	////|Функция СуммаРубКонОст = КонОст(СуммаРуб); 
	//|Группировка ТекущийДокумент; 
	//|Без итогов;
	//|Условие(Магазин в Склад);
	//|Условие(ВидВзаимодействия в переч.Бонусы);
	//|";//}}ЗАПРОС
	//	// Если ошибка в запросе, то выход из процедуры
	//Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
	//	Возврат;
	//КонецЕсли;
    
	ПогашеноБонусовСпр		= 0;
    ПогашеноБонусов			= 0;
	//Пока Запрос.Группировка() = 1 Цикл    
	//	Если Запрос.ТекущийДокумент.Вид() = "РабочийДень" Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если Запрос.ТекущийДокумент.Склад = Склад Тогда
	//		ПогашеноБонусовСпр		= ПогашеноБонусовСпр 		+ Запрос.СуммаРубРасход;
	//	КонецЕсли;	
	//КонецЦикла;
КонецПроцедуры	

Процедура ДанныеПоЗалогам()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос	= СоздатьОбъект("Запрос");
	Переч	= Перечисление.ВидВзаимодействия;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ДанныеПоЗалогам)
	|Период с (ДатаДок) по (ДатаДок);
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин 			= Регистр.Покупатели_розница.Магазин;
	|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
	|ТекущийДокумент	= Регистр.Покупатели_розница.ТекущийДокумент;
	|Функция СуммаРубПриход = Приход(СуммаРуб);
	|Функция СуммаРубРасход = Расход(СуммаРуб);
	//|Функция СуммаРубКонОст = КонОст(СуммаРуб); 
	|Группировка ТекущийДокумент; 
	|Без итогов;
	//|Условие(Магазин в Склад);
	|Условие(ВидВзаимодействия в переч.Залоги);
	|";//}}ЗАПРОС
		// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    
	ПолученоЗалоговСпр		= 0;
	ПолученоЗалоговККСпр	= 0;
	ПолученоЗалоговККЭСпр	= 0;
	ПогашеноЗалоговСпр		= 0;
	ОстатокЗалоговВСейфеСпр	= 0;
	ВыданоЗалоговСпр 		= 0;  
	ВыданоЗалоговККСпр 		= 0;
	ВыданоЗалоговККЭСпр 	= 0;
	
	Пока Запрос.Группировка() = 1 Цикл    
		Если Запрос.ТекущийДокумент.Вид() = "РабочийДень" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Запрос.ТекущийДокумент.Вид() = "ПолучениеЗалога_Розница" Тогда 
			Если Запрос.ТекущийДокумент.Склад_получения = Склад Тогда 
				Если Запрос.ТекущийДокумент.ПоКарте = 1 Тогда    
					Если Запрос.ТекущийДокумент.Проект.Код = "00028" Тогда
						ПолученоЗалоговККЭСпр		= ПолученоЗалоговККЭСпр + Запрос.СуммаРубПриход;
					Иначе
						ПолученоЗалоговККСпр		= ПолученоЗалоговККСпр + Запрос.СуммаРубПриход;
					КонецЕсли;
				КонецЕсли;					
				ПолученоЗалоговСпр		= ПолученоЗалоговСпр + Запрос.СуммаРубПриход;
			КонецЕсли;
		КонецЕсли;
		
		Если Запрос.ТекущийДокумент.Вид() = "ВозвратЗалога_Розница" Тогда
			Если Запрос.ТекущийДокумент.Склад_выдачи = Склад Тогда
				Если Запрос.ТекущийДокумент.ПоКарте = 1 Тогда    
					Если Запрос.ТекущийДокумент.Проект.Код = "00028" Тогда
						ВыданоЗалоговККЭСпр		= ВыданоЗалоговККЭСпр 			+ Запрос.СуммаРубРасход;
					Иначе
						ВыданоЗалоговККСпр		= ВыданоЗалоговККСпр 			+ Запрос.СуммаРубРасход;
					КонецЕсли;
				КонецЕсли;
				ВыданоЗалоговСпр		= ВыданоЗалоговСпр 			+ Запрос.СуммаРубРасход; 
				
			КонецЕсли;
		ИначеЕсли Запрос.ТекущийДокумент.Вид() = "СлужебОстаткиПоРегистрам" Тогда
			
		Иначе
			Если Запрос.ТекущийДокумент.Склад = Склад Тогда
				ПогашеноЗалоговСпр		= ПогашеноЗалоговСпр 		+ Запрос.СуммаРубРасход; 
				Сообщить(""+Запрос.ТекущийДокумент+" "+Запрос.СуммаРубРасход);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	                      
	Если ДатаДок >= '01.04.2017' Тогда
		
		//ВЗ		= Перечисление.СтатусыЗалога.КВозврату;
		//ТекстЗапроса = 
		//"//{{ЗАПРОС(ТекущиеБонусы)
		//|Период с (ДатаДок) по (ДатаДок);
		//|АналитикаСчетБезнал 	= Регистр.ЗалогиОплатаВозврат.АналитикаСчетБезнал; 
		//|Клиент				 	= Регистр.ЗалогиОплатаВозврат.АналитикаСчетБезнал.Контрагент; 
		//|Статус					= Регистр.ЗалогиОплатаВозврат.Статус;
		//|СуммаРуб 				= Регистр.ЗалогиОплатаВозврат.Сумма;
		//|ТекущийДокумент 		= Регистр.ЗалогиОплатаВозврат.ТекущийДокумент;
		//|Функция СуммаРубРасход = Расход(СуммаРуб);
		//|Группировка ТекущийДокумент; 
		//|Без итогов;
		//|Условие(Статус = ВЗ);
		//|"//}}ЗАПРОС
		//;
		//
		//// Если ошибка в запросе, то выход из процедуры
		//Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		//	Возврат;
		//КонецЕсли;   
		//
		//Пока Запрос.Группировка() = 1 Цикл   
		//	Если Запрос.ТекущийДокумент.Вид() = "ВозвратЗалога_Розница" Тогда
		//		Если Запрос.ТекущийДокумент.Склад_выдачи = Склад Тогда
		//			Если Запрос.ТекущийДокумент.ПоКарте = 1 Тогда    
		//				Если Запрос.ТекущийДокумент.Проект.Наименование = "Эксперт Инт. магазин (эквайринг)" Тогда
		//					ВыданоЗалоговККЭСпр		= ВыданоЗалоговККЭСпр 			+ Запрос.СуммаРубРасход;
		//				Иначе
		//					ВыданоЗалоговККСпр		= ВыданоЗалоговККСпр 			+ Запрос.СуммаРубРасход;
		//				КонецЕсли;
		//			КонецЕсли;
		//			ВыданоЗалоговСпр		= ВыданоЗалоговСпр 			+ Запрос.СуммаРубРасход;
		//		КонецЕсли;	
		//	КонецЕсли;
		//КонецЦикла;	
		
		//ВЗ		= Перечисление.СтатусыЗалога.КОплате;
		//ТекстЗапроса = 
		//"//{{ЗАПРОС(ТекущиеБонусы)
		//|Период с (ДатаДок) по (ДатаДок);
		//|АналитикаСчетБезнал 	= Регистр.ЗалогиОплатаВозврат.АналитикаСчетБезнал; 
		//|Клиент				 	= Регистр.ЗалогиОплатаВозврат.АналитикаСчетБезнал.Контрагент; 
		//|Статус					= Регистр.ЗалогиОплатаВозврат.Статус;
		//|СуммаРуб 				= Регистр.ЗалогиОплатаВозврат.Сумма;
		//|ТекущийДокумент 		= Регистр.ЗалогиОплатаВозврат.ТекущийДокумент;
		//|Функция СуммаРубПриход = Приход(СуммаРуб);
		//|Группировка ТекущийДокумент; 
		//|Без итогов;
		//|Условие(Статус = ВЗ);
		//|"//}}ЗАПРОС
		//;
		//
		//// Если ошибка в запросе, то выход из процедуры
		//Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		//	Возврат;
		//КонецЕсли;   
		//
		//Пока Запрос.Группировка() = 1 Цикл   
		//	Если Запрос.ТекущийДокумент.Вид() = "ПолучениеЗалога_Розница" Тогда
		//		Если Запрос.ТекущийДокумент.Склад_получения = Склад Тогда
		//			Если Запрос.ТекущийДокумент.ПоКарте = 1 Тогда    
		//				Если Запрос.ТекущийДокумент.Проект.Наименование = "Эксперт Инт. магазин (эквайринг)" Тогда
		//					ПолученоЗалоговККЭСпр		= ПолученоЗалоговККЭСпр + Запрос.СуммаРубПриход;
		//				Иначе
		//					ПолученоЗалоговККСпр		= ПолученоЗалоговККСпр + Запрос.СуммаРубПриход;
		//				КонецЕсли;
		//			КонецЕсли;
		//			ПолученоЗалоговСпр		= ПолученоЗалоговСпр 			+ Запрос.СуммаРубПриход;
		//		КонецЕсли;	
		//	КонецЕсли;
		//КонецЦикла;	
		
	КонецЕсли;	
	
	
    ОстатокЗалоговВСейфеСпр = ОстатокЗалоговВСейфеСпр + (ПолученоЗалоговСпр - ПолученоЗалоговККСпр - ПолученоЗалоговККЭСпр)  - (ВыданоЗалоговСпр - ВыданоЗалоговККСпр - ВыданоЗалоговККЭСпр);
	 
	Если ДатаДок < '05.12.2014' Тогда
		Запрос	= СоздатьОбъект("Запрос");
		Переч	= Перечисление.ВидВзаимодействия;
		ТекстЗапроса = 
		"//{{ЗАПРОС(ДанныеПоЗалогам)
		|Период с (ДатаДок) по (ДатаДок);
		|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
		|Магазин 			= Регистр.Покупатели_розница.Магазин;
		|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
		|Функция СуммаРубКонОст = КонОст(СуммаРуб); 
		|Условие(Магазин в Склад);
		|Условие(ВидВзаимодействия в переч.Залоги);
		|";//}}ЗАПРОС
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		//Пока Запрос.Группировка() = 1 Цикл 
		ОстатокЗалоговВСейфеСпр	= Запрос.СуммаРубКонОст;
		//КонецЦикла;
	КонецЕсли;  
	
	ИтогоПолученоЗалоговЧ	= ПолученоЗалоговСпр;
	ИтогоПогашеноЗалоговЧ	= ПогашеноЗалоговСпр;
	
	//ИтогоПолученоЗалогов	= "Итого было получено залогов на сумму: "+глФРМ(Запрос.СуммаРубПриход,глРубли);
	//ИтогоПогашеноЗалогов	= "Итого было погашено залогов на сумму: "+глФРМ(Запрос.СуммаРубРасход,глРубли);
	//ОстатокЗалоговВСейфе	= "Остаток залогов в сейфе: "+глФРМ(Запрос.СуммаРубКонОст,глРубли);
КонецПроцедуры

Процедура ОстатокВКассеНаНачалоДня()
	Перем Запрос, ТекстЗапроса;
	//Создание объекта типа Запрос
	Запрос	= СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ОстатокВКассеНаНачалоДня)
	|Период с (ДатаДок) по (ДатаДок);
	|КассаР = Регистр.Касса.Касса;
	|СуммаРуб = Регистр.Касса.СуммаРуб;
	|Функция СуммаРубНачОст = НачОст(СуммаРуб);
	|Условие(КассаР в Касса);
	|";//}}ЗАПРОС
		// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОстатокНаНачалоДняЧ		= Запрос.СуммаРубНачОст;
	ОстатокНаНачалоДняСпр	= ОстатокНаНачалоДняЧ;
	ОстатокНаНачалоДня		= "Остаток денег в кассе на начало дня: "+глФРМ(ОстатокНаНачалоДняЧ, глРубли);
КонецПроцедуры


//Собирает данные по всем движениям в магазине
Процедура ОбновиДанные()
	Продано();
	Возвращено();

	ПроданоСпр				= ИтогоПроданоЧ;
	ВозвращеноСпр			= ИтогоВозвращеноЧ;
	ZОтчетСпр				= ИтогоПроданоЧ - (ИтогоВозвращеноЧ  - ВозвращеноБонусовСпр) - ПроданоБонусСпр;

	а=0;
	если НазваниеНабораПрав()="Продавец_розница" Тогда
		если ВвестиЧисло(а,"Введите сумму Z-отчёта",15,2,120)<>1 Тогда
			Возврат;
		ИначеЕсли а<>ZОтчетСпр Тогда
			Предупреждение("Вы ввели сумму Z-отчёта не совпадающую с данными компьютера... 
						|Вывод справочной информации приостановлен",50);
		
			ZОтчетСпр			= 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
		
		
	
	
	ВыданоПроцентов();
	ДанныеПоКредитам();
	ДанныеПоЗалогам(); 
	ДанныеПоБонусам();
	ОстатокВКассеНаНачалоДня();
	
	//Тут справочные данные
	ВыданоПроцентовСпр		= ИтогоВыданоПроцентовЧ;   
	Если ДатаДок < '05.12.2014' Тогда 
		ОстатокНаКонецДняСпр	= ОстатокНаНачалоДняЧ-ВыданоПроцентов-ВыданоКредитов+ПогашеноКредитов+Продано-Возвращено-Инкасация-Прочее
									-ПроданоКК - ПроданоБонус +ВозвращеноКК;
	Иначе	
		ОстатокНаКонецДняСпр	= ОстатокНаНачалоДняЧ-ВыданоПроцентов-ВыданоКредитов+ПогашеноКредитов+Продано-Возвращено-Инкасация-Прочее
									-ПроданоКК - ПроданоБонус +ВозвращеноКК + ВозвращеноБонусов+(ПолученоЗалогов-ПолученоЗалоговКК-ПолученоЗалоговККЭ)-ВыданоЗалогов+ВыданоЗалоговКК+ВыданоЗалоговККЭ-ПогашеноЗалогов-ПогашеноБонусов;
	КонецЕсли;							
	ИтогоНаличныеСпр		= ZОтчетСпр-ВыданоПроцентовСпр-ВыданоКредитовСпр+ПогашеноКредитовСпр
								+ПроданоСпр-ВозвращеноСпр-Инкасация-Прочее;
	ОстатокНаКонецДня		= "Остаток денег в кассе на конец дня: "+глФРМ(ОстатокНаКонецДняСпр);
	
	Форма.Обновить(0);
	
КонецПроцедуры  

Функция НайтиВыпискуБанка(вариант) Экспорт
	Перем ДокПодч;
	
	СФПомНаУд	= "";
	// проверяем чтобы был записан всегда!
	Если (Выбран() = 1) Тогда
		ДокПодч	= СоздатьОбъект("Документ");
		ДокПодч.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		
		Пока  ДокПодч.ПолучитьДокумент()=1 Цикл
			если вариант = 1 Тогда		//инкассация
				Если (ДокПодч.Вид() = "СтрокаВыпискиПриход") тогда
					если ДокПодч.Сумма = Инкасация Тогда
					ТекСФ	= ДокПодч.ТекущийДокумент();
					   	Если ТекСФ.ПометкаУдаления() = 1 Тогда
							Если (ПустоеЗначение(СФПомНаУд) = 1) Тогда
								СФПомНаУд	= ТекСФ;
							КонецЕсли;
						Иначе
							Возврат ТекСФ;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			иначеЕсли вариант = 2 Тогда
				Если (ДокПодч.Вид() = "СтрокаВыпискиРасход") тогда
					ТекСФ	= ДокПодч.ТекущийДокумент();
					Если ТекСФ.ПометкаУдаления() = 1 Тогда
						Если (ПустоеЗначение(СФПомНаУд) = 1) Тогда
							СФПомНаУд	= ТекСФ;
						КонецЕсли;
					Иначе
						Возврат ТекСФ;
					КонецЕсли;
				КонецЕсли;
			иначеесли вариант = 3 Тогда		//выручка по кредитным картам
				Если (ДокПодч.Вид() = "СтрокаВыпискиПриход") тогда
					если ДокПодч.Сумма = (ПроданоКК-ВозвращеноКК) Тогда
					ТекСФ	= ДокПодч.ТекущийДокумент();
					   	Если ТекСФ.ПометкаУдаления() = 1 Тогда
							Если (ПустоеЗначение(СФПомНаУд) = 1) Тогда
								СФПомНаУд	= ТекСФ;
							КонецЕсли;
						Иначе
							Возврат ТекСФ;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СФПомНаУд;
	
КонецФункции // НайтиВыпискуБанка

Процедура Перечисли()	//Переводим инкассацию в банк
	Перем ФормаСчФ;
	Если Выбран()=0 Тогда
		Предупреждение("Документ не записан! Сначала следует записать документ!", 60);
		Возврат;
	КонецЕсли;
	
	глКонтроль	= "Инкассация";
	ВыпискаБанка 	= НайтиВыпискуБанка(1);
	Если ПустоеЗначение(ВыпискаБанка) = 1 Тогда
		Если Модифицированность() = 1 Тогда
			Предупреждение("Документ был изменен! Сначала следует записать документ!", 60);
			Возврат;
		КонецЕсли;
		ОткрытьФорму("Документ.СтрокаВыпискиПриход",,ТекущийДокумент());
	Иначе
		ОткрытьФорму(ВыпискаБанка);
	КонецЕсли;
	глКонтроль = "";
КонецПроцедуры  

Процедура ПеречислилиИзБанка()	//Учитываем приход денег из банка (работа терминала)
	Перем ФормаСчФ;
	Если Выбран()=0 Тогда
		Предупреждение("Документ не записан! Сначала следует записать документ!", 60);
		Возврат;
	КонецЕсли;
	
	если ПроданоКК - ВозвращеноКК>0 Тогда	//Банк должен нам
		глКонтроль	= "ТерминальныеПродажи";
		ВыпискаБанка 	= НайтиВыпискуБанка(3);
		Если ПустоеЗначение(ВыпискаБанка) = 1 Тогда
			Если Модифицированность() = 1 Тогда
				Предупреждение("Документ был изменен! Сначала следует записать документ!", 60);
				Возврат;
			КонецЕсли;
			ОткрытьФорму("Документ.СтрокаВыпискиПриход",,ТекущийДокумент());
		Иначе
			ОткрытьФорму(ВыпискаБанка);
		КонецЕсли;
	ИначеЕсли ПроданоКК-ВозвращеноКК<0 Тогда	//Мы должны банку
		глКонтроль	= "ТерминальныеПродажи";
		ВыпискаБанка 	= НайтиВыпискуБанка(2);
		Если ПустоеЗначение(ВыпискаБанка) = 1 Тогда
			Если Модифицированность() = 1 Тогда
				Предупреждение("Документ был изменен! Сначала следует записать документ!", 60);
				Возврат;
			КонецЕсли;
			ОткрытьФорму("Документ.СтрокаВыпискиРасход",,ТекущийДокумент());
		Иначе
			ОткрытьФорму(ВыпискаБанка);
		КонецЕсли;
	Иначе
		Сообщить("Движений по терминальным продажам нет!");
	КонецЕсли;
	глКонтроль = "";
КонецПроцедуры  

Процедура Печать()
    
	ДатаДокумента=Формат(ДатаДок,"Д(0)ДДММММГГГГ");

	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ПечФорма");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);

	
	Таб.ВывестиСекцию("ОбщиеДанные");
	для строки=1 по 5 цикл //открываем цикл по строкам
		для столбы=1 по 1 цикл //заполняем строку столбцами 
			зн=строка(строки)+строка(столбы); //формируем то, что будем выводить
			Если столбы=1 Тогда //если первый столбец, то с новой строки
				таб.ВывестиСекцию("гор|верт");
			иначе //если столбец не первый, то продолжаем выводить строку
				таб.ПрисоединитьСекцию("гор|верт"); 
			КонецЕсли;
		конецЦикла;
	конецЦикла; 

	Таб.ТолькоПросмотр(1);
	Таб.Показать("Фин. данные...","");
КонецПроцедуры

//++Ерошенко 21.05.2007
Процедура ПечатьНовая()
	
	ОбновиДанные();
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("РабочийДень");
	ПечДата = Формат(ДатаДок,"Д (0)ДДММММГГГГ");
	Таб.ВывестиСекцию("Шапка0");
	Лит = Лев(Склад.Наименование,1); 
	Таб.ВывестиСекцию("Шапка"+Лит);
	Таб.ВывестиСекцию("Шапка1"); 
	Если ТЗ_авторизация.КоличествоСтрок() > 0 Тогда  
		Сч = 1;
	    ТЗ_авторизация.ВыбратьСтроки();
		Пока ТЗ_авторизация.ПолучитьСтроку() = 1 Цикл
			Если Сч = 1 Тогда  
				Польз = "Продавцы: "+ТЗ_авторизация.Продавец;
			Иначе 
				Польз = ТЗ_авторизация.Продавец;
			КонецЕсли; 
			Таб.ВывестиСекцию("Пользователь");
			Сч = Сч + 1;
		КонецЦикла;
	КонецЕсли; 
	
	Наличные = Zотчёт - Инкасация - ВыданоПроцентов - Прочее + ПогашеноКредитов - ВыданоКредитов;
	
	// таблица проката инструмента...     
	ПечМодель1 = "";
	ПечМодель2 = "";
	ПечМодель3 = "";
	ПечМодель4 = "";
	ПечМодель5 = ""; 
	
	Всего1 =     0;
	Всего2 =     0;
	Всего3 =     0;
	Всего4 =     0;
	Всего5 =     0;
	
	ВПрокате1 =  0;
	ВПрокате2 =  0;
	ВПрокате3 =  0;
	ВПрокате4 =  0;
	ВПрокате5 =  0;   
	
	ВМагазине1 = 0;
	ВМагазине2 = 0;
	ВМагазине3 = 0;
	ВМагазине4 = 0;
	ВМагазине5 = 0;   
	 
	//Если ТаблПроката.КоличествоСтрок() > 5 Тогда
	//	Сообщить("В отчёт попали не все прокатные товары");
	//	//ТаблПроката.ВыбратьСтроку();
	//КонецЕсли;
	//Если ТаблПроката.КоличествоСтрок() > 0 Тогда
	//	ТаблПроката.ВыбратьСтроки();
	//	Сч = 1;
	//	Пока ТаблПроката.ПолучитьСтроку() = 1 Цикл
	//		Если Сч = 1 Тогда
	//			ПечМодель1 = ТаблПроката.Номенклатура;
	//			Всего1 =     ТаблПроката.КонОст;
	//		ИначеЕсли Сч = 2 Тогда
	//			ПечМодель2 = ТаблПроката.Номенклатура;
	//			Всего2 =     ТаблПроката.КонОст;
	//		ИначеЕсли Сч = 3 Тогда
	//			ПечМодель3 = ТаблПроката.Номенклатура;
	//			Всего3 =     ТаблПроката.КонОст;
	//		ИначеЕсли Сч = 4 Тогда
	//			ПечМодель4 = ТаблПроката.Номенклатура;
	//			Всего4 =     ТаблПроката.КонОст;
	//		ИначеЕсли Сч = 5 Тогда
	//			ПечМодель5 = ТаблПроката.Номенклатура;
	//			Всего5 =     ТаблПроката.КонОст;
	//		КонецЕсли; 
	//		Сч = Сч + 1;
	//	КонецЦикла;
	//КонецЕсли;
	
	// таблица залогов...
	ПечНакл1 = "";
	ПечНакл2 = "";
	ПечНакл3 = "";
	ПечНакл4 = "";
	ПечНакл5 = "";
	ПечНакл6 = ""; 
	
	ПечКл1 =   "";
	ПечКл2 =   "";
	ПечКл3 =   "";
	ПечКл4 =   "";
	ПечКл5 =   "";
	ПечКл6 =   "";
	
	ПечСум1 =  0;
	ПечСум2 =  0;
	ПечСум3 =  0;
	ПечСум4 =  0;
	ПечСум5 =  0;
	ПечСум6 =  0;  
	
	ТЗ = ТаблицаЗалогов();
	Если ТЗ.КоличествоСтрок() > 0 Тогда
		ТЗ.ВыбратьСтроки();
		Сч = 1;
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			Если Сч = 1 Тогда
				ПечНакл1 = ТЗ.Док;
				ПечКл1 =   ТЗ.Контр;
				ПечСум1 =  ТЗ.Залог;
			ИначеЕсли Сч = 2 Тогда
				ПечНакл2 = ТЗ.Док;
				ПечКл2 =   ТЗ.Контр;
				ПечСум2 =  ТЗ.Залог;  
			ИначеЕсли Сч = 3 Тогда
				ПечНакл3 = ТЗ.Док;
				ПечКл3 =   ТЗ.Контр;
				ПечСум3 =  ТЗ.Залог;  
			ИначеЕсли Сч = 4 Тогда
				ПечНакл4 = ТЗ.Док;
				ПечКл4 =   ТЗ.Контр;
				ПечСум4 =  ТЗ.Залог;  
			ИначеЕсли Сч = 5 Тогда
				ПечНакл5 = ТЗ.Док;
				ПечКл5 =   ТЗ.Контр;
				ПечСум5 =  ТЗ.Залог;  
			ИначеЕсли Сч = 6 Тогда
				ПечНакл6 = ТЗ.Док;
				ПечКл6 =   ТЗ.Контр;
				ПечСум6 =  ТЗ.Залог;  
			КонецЕсли;	
			Сч = Сч + 1;
		КонецЦикла;
	КонецЕсли;
	Если ТЗ.КоличествоСтрок() > 6 Тогда
		Предупреждение("Не все залоги по документам вошли в печатную форму!");
	КонецЕсли;
	
	ИтогоЗалог =        ТЗ.Итог("Залог");
	//ОбщаяСуммаЗалогов = ТЗ.Итог("Залог");
	
	// таблица отгрузок по залогам...
	ПечНакл11 = "";
	ПечНакл22 = "";
	ПечНакл33 = "";
	ПечНакл44 = "";
	ПечНакл55 = "";
	ПечНакл66 = ""; 
	
	ПечКл11 =   "";
	ПечКл22 =   "";
	ПечКл33 =   "";
	ПечКл44 =   "";
	ПечКл55 =   "";
	ПечКл66 =   "";
	
	ПечСум11 =  0;
	ПечСум22 =  0;
	ПечСум33 =  0;
	ПечСум44 =  0;
	ПечСум55 =  0;
	ПечСум66 =  0; 
	
	ТЗотгр = ТаблицаОтгрузокПоЗалогам();
	Если ТЗотгр.КоличествоСтрок() > 0 Тогда
		ТЗотгр.ВыбратьСтроки();
		Сч = 1;
		Пока ТЗотгр.ПолучитьСтроку() = 1 Цикл
			Если Сч = 1 Тогда
				ПечНакл11 = ТЗотгр.Док;
				ПечКл11 =   ТЗотгр.Контр;
				ПечСум11 =  ТЗотгр.Залог;
			ИначеЕсли Сч = 2 Тогда
				ПечНакл22 = ТЗотгр.Док;
				ПечКл22 =   ТЗотгр.Контр;
				ПечСум22 =  ТЗотгр.Залог;  
			ИначеЕсли Сч = 3 Тогда
				ПечНакл33 = ТЗотгр.Док;
				ПечКл33 =   ТЗотгр.Контр;
				ПечСум33 =  ТЗотгр.Залог;  
			ИначеЕсли Сч = 4 Тогда
				ПечНакл44 = ТЗотгр.Док;
				ПечКл44 =   ТЗотгр.Контр;
				ПечСум44 =  ТЗотгр.Залог;  
			ИначеЕсли Сч = 5 Тогда
				ПечНакл55 = ТЗотгр.Док;
				ПечКл55 =   ТЗотгр.Контр;
				ПечСум55 =  ТЗотгр.Залог;  
			ИначеЕсли Сч = 6 Тогда
				ПечНакл66 = ТЗотгр.Док;
				ПечКл66 =   ТЗотгр.Контр;
				ПечСум66 =  ТЗотгр.Залог;  
			КонецЕсли;	
			Сч = Сч + 1;
		КонецЦикла;
	КонецЕсли;
	ИтогоОтгрПоЗалогам = ТЗотгр.Итог("Залог");  
	
	// таблица выданных и погашенных кредитов... 
	
	ПечНакл111 =  "";
	ПечНакл222 =  "";
	ПечНакл333 =  "";
	ПечНакл444 =  "";
	ПечНакл555 =  "";
	ПечНакл666 =  ""; 
	
	ПечКл111 =    "";
	ПечКл222 =    "";
	ПечКл333 =    "";
	ПечКл444 =    "";
	ПечКл555 =    "";
	ПечКл666 =    "";
	
	ПечСум111 =   0;
	ПечСум222 =   0;
	ПечСум333 =   0;
	ПечСум444 =   0;
	ПечСум555 =   0;
	ПечСум666 =   0; 
	 
	ПечНакл1111 = "";
	ПечНакл2222 = "";
	ПечНакл3333 = "";
	ПечНакл4444 = "";
	ПечНакл5555 = "";
	ПечНакл6666 = ""; 
	
	ПечКл1111 =   "";
	ПечКл2222 =   "";
	ПечКл3333 =   "";
	ПечКл4444 =   "";
	ПечКл5555 =   "";
	ПечКл6666 =   "";
	
	ПечСум1111 =  0;
	ПечСум2222 =  0;
	ПечСум3333 =  0;
	ПечСум4444 =  0;
	ПечСум5555 =  0;
	ПечСум6666 =  0; 
	
	Табл = ТаблицаКредитов();
	
	Если Табл.КоличествоСтрок() > 0 Тогда
		Табл.ВыбратьСтроки();
		Сч = 1;
		Пока Табл.ПолучитьСтроку() = 1 Цикл   
			Если Табл.СуммаРубРасход <> 0 Тогда
				Если Сч = 1 Тогда
					ПечНакл111 = Табл.Документ;
					ПечКл111 =   Табл.Документ.Контрагент;
					ПечСум111 =  Табл.СуммаРубРасход;
				ИначеЕсли Сч = 2 Тогда
					ПечНакл222 = Табл.Документ;
					ПечКл222 =   Табл.Документ.Контрагент;
					ПечСум222 =  Табл.СуммаРубРасход;  
				ИначеЕсли Сч = 3 Тогда
					ПечНакл333 = Табл.Документ;
					ПечКл333 =   Табл.Документ.Контрагент;
					ПечСум333 =  Табл.СуммаРубРасход;  
				ИначеЕсли Сч = 4 Тогда
					ПечНакл444 = Табл.Документ;
					ПечКл444 =   Табл.Документ.Контрагент;
					ПечСум444 =  Табл.СуммаРубРасход;  
				ИначеЕсли Сч = 5 Тогда
					ПечНакл555 = Табл.Документ;
					ПечКл555 =   Табл.Документ.Контрагент;
					ПечСум555 =  Табл.СуммаРубРасход;  
				ИначеЕсли Сч = 6 Тогда
					ПечНакл666 = Табл.Документ;
					ПечКл666 =   Табл.Документ.Контрагент;
					ПечСум666 =  Табл.СуммаРубРасход;  
				КонецЕсли;	
				Сч = Сч + 1; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ИтогоВыданоКредитов = Табл.Итог("СуммаРубРасход");   
	
	Если Табл.КоличествоСтрок() > 0 Тогда
		Табл.ВыбратьСтроки();
		Сч = 1;
		Пока Табл.ПолучитьСтроку() = 1 Цикл   
			Если Табл.СуммаРубПриход <> 0 Тогда
				Если Сч = 1 Тогда
					ПечНакл1111 = Табл.Документ;
					ПечКл1111 =   Табл.Документ.Контрагент;
					ПечСум1111 =  Табл.СуммаРубПриход;
				ИначеЕсли Сч = 2 Тогда
					ПечНакл2222 = Табл.Документ;
					ПечКл2222 =   Табл.Документ.Контрагент;
					ПечСум2222 =  Табл.СуммаРубПриход;  
				ИначеЕсли Сч = 3 Тогда
					ПечНакл3333 = Табл.Документ;
					ПечКл3333 =   Табл.Документ.Контрагент;
					ПечСум3333 =  Табл.СуммаРубПриход;  
				ИначеЕсли Сч = 4 Тогда
					ПечНакл4444 = Табл.Документ;
					ПечКл4444 =   Табл.Документ.Контрагент;
					ПечСум4444 =  Табл.СуммаРубПриход;  
				ИначеЕсли Сч = 5 Тогда
					ПечНакл5555 = Табл.Документ;
					ПечКл5555 =   Табл.Документ.Контрагент;
					ПечСум5555 =  Табл.СуммаРубПриход;  
				ИначеЕсли Сч = 6 Тогда
					ПечНакл6666 = Табл.Документ;
					ПечКл6666 =   Табл.Документ.Контрагент;
					ПечСум6666 =  Табл.СуммаРубПриход;  
				КонецЕсли;	
				Сч = Сч + 1; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ИтогоПогашеноКредитов = Табл.Итог("СуммаРубПриход");   
	// завершили формирование таблиц... 
	
	Таб.ВывестиСекцию("Шапка2");  
	
	Таб.ВывестиСекцию("Подвал");
	
	Таб.ПараметрыСтраницы(1,,,0,0,0,0,0,0,1);
	Таб.Опции(0,0,0,0);   
	//Таб.ТолькоПросмотр(1);
	Таб.Показать("Дневной отчёт");  
	
	
	ДокПроц = СоздатьОбъект("Документ.ВыплатаПроцентов_Розница");
	Таб1 = СоздатьОбъект("Таблица");
	Таб1.ИсходнаяТаблица("Приложение");
	Таб1.ВывестиСекцию("Шапка");  
	Сч = 1;     
	
	НовТЗ = СоздатьОбъект("ТаблицаЗначений");
	НовТЗ.НоваяКолонка("Контр");
	НовТЗ.НоваяКолонка("Сум");
	ДокПроц.ВыбратьДокументы(ДатаДок,ДатаДок); 
	Пока ДокПроц.ПолучитьДокумент() = 1 Цикл
		Если ДокПроц.Проведен() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если ДокПроц.Склад_выдачи <> Склад Тогда
			Продолжить;
		КонецЕсли;
		
		ДокПроц.ВыбратьСтроки();
		Пока ДокПроц.ПолучитьСтроку() = 1 Цикл  
			НовТЗ.НоваяСтрока();
			НовТЗ.Контр = ДокПроц.Документ_.Контрагент;
			НовТЗ.Сум =   ДокПроц.Сумма;
		КонецЦикла;
	КонецЦикла;  
	
	НовТЗ.Свернуть("Контр","Сум");
	
	НовТЗ.НоваяКолонка("Модель");
	НовТЗ.НоваяКолонка("Всего");
	НовТЗ.НоваяКолонка("ВПрокате");
	НовТЗ.НоваяКолонка("ВМагазине");
	 
	Прокат.ВыбратьСтроки();     
	Стр = 1;
	Пока Прокат.ПолучитьСтроку() = 1 Цикл
		Если Стр > НовТЗ.КоличествоСтрок() Тогда
			НовТЗ.НоваяСтрока();      
			НовТЗ.Контр =     "";
			НовТЗ.Сум =       0;
			НовТЗ.Модель =    Прокат.Модель;
			НовТЗ.Всего =     Прокат.Всего;  
			НовТЗ.ВПрокате =  Прокат.ВПрокате;  
			НовТЗ.ВМагазине = Прокат.ВМагазине;  
		Иначе
			НовТЗ.УстановитьЗначение(Стр,"Модель",Прокат.Модель);
			НовТЗ.УстановитьЗначение(Стр,"Всего",Прокат.Всего);
			НовТЗ.УстановитьЗначение(Стр,"ВПрокате",Прокат.ВПрокате);
			НовТЗ.УстановитьЗначение(Стр,"ВМагазине",Прокат.ВМагазине);
		КонецЕсли;
		Стр = Стр + 1;
	КонецЦикла;  
	
	НовТЗ.ВыбратьСтроки();
	Пока НовТЗ.ПолучитьСтроку() = 1 Цикл
		ТекКонтр =  НовТЗ.Контр;      
		ТекСум =    НовТЗ.Сум; 
		ПечМодель = НовТЗ.Модель;
		Всего =     НовТЗ.Всего;
		ВПрокате =  НовТЗ.ВПрокате;
		ВМагазине = НовТЗ.ВМагазине;
		
		Таб1.ВывестиСекцию("Строка");   
		Сч = Сч + 1;
	КонецЦикла;  
	
	Для А = 1 По (40 - Сч) Цикл 
		ТекКонтр =  "";
		ТекСум =    0;     
		ПечМодель = "";
		Всего =     0;
		ВПрокате =  0;
		ВМагазине = 0;

		Таб1.ВывестиСекцию("Строка"); 
	КонецЦикла;
	ИтПроц = НовТЗ.Итог("Сум");
	
	Таб1.ВывестиСекцию("Подвал");  
	Таб1.ПараметрыСтраницы(1,,,0,0,0,0,0,0,1);
	Таб1.Опции(0,0,0,0);   
	Таб1.Показать("Приложение №1");  
	
КонецПроцедуры
//--Ерошенко
   
//++Ерошенко 23.05.2007
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если НомерЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Основной");
	Иначе
		Форма.ИспользоватьСлой("Дополнительно");
	КонецЕсли;       
	
КонецПроцедуры // ПриВыбореЗакладки()
//--Ерошенко   

//++Ерошенко 23.05.2007
Процедура ИзменитьЗначениеВТаблице()
	Ч =     Прокат.ПолучитьЗначение(Прокат.ТекущаяСтрока(),"ВПрокате");  
	Всего = Прокат.ПолучитьЗначение(Прокат.ТекущаяСтрока(),"Всего");  
	Тов =   Прокат.ПолучитьЗначение(Прокат.ТекущаяСтрока(),"Модель");
	Если Прокат.ТекущаяКолонка() = "ВПрокате" Тогда 
		Если ВвестиЧисло(Ч,"В прокате '"+Тов+"'",15,0) = 1 Тогда
			Если Ч > Всего Тогда
				Предупреждение("За магазином числится только "+Всего+" товара '"+Тов+"'");
			Иначе
				Прокат.УстановитьЗначение(Прокат.ТекущаяСтрока(),"ВПрокате",Ч);
				Прокат.УстановитьЗначение(Прокат.ТекущаяСтрока(),"ВМагазине",Всего-Ч);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//--Ерошенко 

//++Ерошенко 23.05.2007
Процедура ИзменитьОписание()
	Если Прочее <> 0 Тогда
		Если СокрЛП(ОписаниеПрочихРасходов) = "" Тогда 
			Стр = "";
			Если ВвестиСтроку(Стр,"Опишите прочие расходы...",99,0) = 1 Тогда
				ОписаниеПрочихРасходов = Стр;
			КонецЕсли;
		КонецЕсли; 
	Иначе  
		Если СокрЛП(ОписаниеПрочихРасходов) <> "" Тогда
			Ответ = Вопрос("Очистить описание прочих расходов?","Да+Нет");
			Если Ответ = "Да" Тогда
				ОписаниеПрочихРасходов = "";
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//--Ерошенко 

Процедура кнЗакрытьСменуФР()    
	Перем НомерЛенты;  
	Перем ОписаниеРезультата;
	
	Если глФРВкл = 0 Тогда
		Предупреждение("ККМ в режиме фискального регистратора не подключена!");
	Иначе
		//Если Касса.РежимККМ = Перечисление.РежимыККМ.ФР Тогда
			Если глФРЗакрытьСмену(НомерЛенты, ОписаниеРезультата) = 0 Тогда
				// не удалось зарыть смену на ФР
				Предупреждение(ОписаниеРезультата +
				РазделительСтрок + "Попытайтесь снять отчет вручную.", 60);
			Иначе
				НомерЛентыККМ = НомерЛенты;
				Попытка
					Записать();	
				Исключение
				КонецПопытки;
			КонецЕсли;
		//КонецЕсли; 
	КонецЕсли;
КонецПроцедуры	

ТЗ_авторизация.УдалитьСтроки();

//Если ТЗ_авторизация.КоличествоКолонок()<2 Тогда	//Если мы открываем первый раз
ТЗ_авторизация.НоваяКолонка("Продавец","Справочник.Пользователи",,,,10);
ТЗ_авторизация.НоваяКолонка("Время","строка",9,,,6);
//Иначе
ТЗ	= ЗначениеИзСтрокиВнутр(СтрПродавец);
Если ПустоеЗначение(ТЗ)=0 Тогда
	ТЗ.ВыбратьСтроки();
	пока ТЗ.ПолучитьСтроку()=1 Цикл
		СписокПродавцов = СписокПродавцов+сокрЛП(ТЗ.Продавец)+". ";
		ТЗ_авторизация.НоваяСтрока();
		ТЗ_авторизация.Продавец	= ТЗ.Продавец;
		ТЗ_авторизация.Время	= ТЗ.Время;
	КонецЦикла;
КонецЕсли;
//КонецЕсли;

