Перем СписокДействий; // для механизма кнопки "Действия"
Перем НС, _Рег1, _Рег2, _Склад_темп, _ТЗ, _ТЗ2;	//Работа с остатками
//******************************************************************************
//			ПРЕДОПИСАНИЕ
Процедура СозданиеТЗизДанныеРозницы() далее
Функция ЗаполниТаблицу() далее

//******************************************************************************
//			ПРОВЕРКИ
     
Процедура ПриЗаписи()
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры	
	

//Говорит 1, если всё ОК, или -1 если нет соответствия у элемента
//	розницы и элемента опта, сообщая о каждом в строке информации
Функция ПроверьКоды()
	Перем Рез;
	состояние("Проверка соответствия кодов...");
	ТЗ.ВыбратьСтроки();
	Если УжеНовыйТип<>1 Тогда
		ТЕМП=СоздатьОбъект("Справочник.Номенклатура");
		рез=1;
		пока ТЗ.получитьСтроку()=1 цикл
			если Темп.НайтиПоРеквизиту("КодРозницы",ТЗ.КодР,1)=0 тогда
				сообщить("Для элемента: "+сокрЛП(ТЗ.НоменклатураР)+", нет соответствия в оптовой базе!");
				сообщить("Данный элемент не будет учавствовать в подборе!","!");
				ТЗ.КодР=0;	//Это для всех неправильных
				рез=-1;
			КонецЕсли;
		КонецЦикла;
		Если Рез=-1 тогда
			ТЗ.ВыбратьСтроки();
			ТЗ.Сортировать("КодР+");стр=1;
			пока (ТЗ.ПолучитьСтроку()=1) и (ТЗ.КодР=0) цикл
				стр=стр+1;
			конецЦикла;
			СчетчикЦикла = 0;
			Для СчетчикЦикла = 1 По стр Цикл
				ТЗ.УдалитьСтроку(стр-СчетчикЦикла);
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли УжеНовыйТип=1 Тогда	//Тут по новому механизму

		//ТЕМП=СоздатьОбъект("Справочник.Номенклатура");
		рез=1;
		//пока ТЗ.получитьСтроку()=1 цикл
		//	если Темп.НайтиПоКоду(число(ТЗ.КодР),0)=0 тогда
		//		сообщить("Для элемента: "+сокрЛП(ТЗ.НоменклатураР)+", нет соответствия в оптовой базе!");
		//		сообщить("Данный элемент не будет учавствовать в подборе!","!");
		//		ТЗ.КодР=0;	//Это для всех неправильных
		//		рез=-1;
		//	КонецЕсли;
		//КонецЦикла;
		//Если Рез=-1 тогда
		//	ТЗ.ВыбратьСтроки();
		//	ТЗ.Сортировать("КодР+");стр=1;
		//	пока (ТЗ.ПолучитьСтроку()=1) и (ТЗ.КодР=0) цикл
		//		стр=стр+1;
		//	конецЦикла;
		//	СчетчикЦикла = 0;
		//	Для СчетчикЦикла = 1 По стр Цикл
		//		ТЗ.УдалитьСтроку(стр-СчетчикЦикла);
		//	КонецЦикла;
		//КонецЕсли;
		
	КонецЕсли;
	
	возврат Рез;
КонецФункции


//******************************************************************************
//			НАЧАЛО БАЗОВЫХ
Процедура ВводНового()
    предупреждение("Данный документ вводится в розничной базе, путём экспорта из заявки",10);
    Форма.закрыть(0);
	СтатусВозврата(0);
	возврат;
КонецПроцедуры	//ВводНового()

Процедура ПриОткрытии()
	Автор=глПользователь;
	отв="нет";дл=0;длВся=СтрДлина(комментарий);
	пока отв="нет" цикл
		дл=дл+1;
		складТ=сред(Комментарий,длВся-дл,1);
		если складТ=":" тогда
			отв="да";
		конецЕсли;
	КонецЦикла;
	Если отв="да" Тогда
	    складТ=прав(Комментарий,дл-1);
		спр=создатьОбъект("Справочник.Склады");
		спр.ВыбратьЭлементы();
		Пока спр.получитьЭлемент()=1 Цикл
		    если сокрЛП(спр.соответствие)=складТ тогда
				склад=спр.ТекущийЭлемент();
				прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//начинаем собирать ТЗ
	СозданиеТЗизДанныеРозницы();

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");

	ТЗ_Остаток.НоваяКолонка("Склад","Справочник.Склады",,,,11);
	ТЗ_Остаток.НоваяКолонка("Остаток","число",15,2,,3);
	ТЗ_Остаток.НоваяКолонка("Резерв","число",15,2,,3);
    НС=НомерСтроки;
	
КонецПроцедуры	//ПриОткрытии()


//******************************************************************************
//			НАЧАЛО СЛУЖЕБНЫХ


//заполнение Табл. части и делает вызов всех необходимых проверок
Процедура Сопоставь()
	если ПроверьКоды()=-1 тогда    //Есть-ли смысл продолжать выборку
		возврат;
	КонецЕсли;
	
	если КоличествоСтрок()>0 тогда	//Чтобы не убивать уже набранный товар
		Если вопрос("Табличная часть уже заполнена, при продолжении все данные будут заменены."+РазделительСтрок
		+"Вы хотите продолжить?",4)=6 
		тогда
			УдалитьСтроки();
		иначе
			возврат;
		КонецЕсли;
	КонецЕсли;
	
	если ЗаполниТаблицу()=-1 тогда   //Производит заполение табличной части
		сообщить("Т.к. заполнение произошло с ошибками или была нажата кнопка отмены");
		сообщить("Табл. часть документа будет очищена!");
		удалитьСтроки();
		возврат;
	КонецЕсли;
	
КонецПроцедуры	//Сопоставь()

//Позволяет при открытии документа, провести реформацию данных розницы в ТЗ
Процедура СозданиеТЗизДанныеРозницы()
	перем стр;	//представление параметра контекста
	состояние("Восстановление исходных данных...");
	//задаём параметры ТЗ
	ТЗ.НоваяКолонка("Номер","число",6,0,"N",4);
	ТЗ.НоваяКолонка("ВажностьР","число",1,0,"Важ.",3);
	ТЗ.НоваяКолонка("КодР","число",6,0,"Код Р.",9);
	ТЗ.НоваяКолонка("Код","строка",8,0,"Код",9);
	ТЗ.НоваяКолонка("НоменклатураР","строка",100,0,"Номенклатура",80);
	ТЗ.НоваяКолонка("ЕдиницаР","строка",10,0,"Ед. Р.",6);
	ТЗ.НоваяКолонка("КолвоР","число",15,2,"Кол-во Р.",10);
	ТЗ.НоваяКолонка("ОстатокР","число",15,2,"Остаток Р.",10);
	ТЗ.НоваяКолонка("ОборотР","число",15,2,"Оборот Р.",10);
	ТЗ.ВыводитьПиктограммы("ВажностьР",1);
	
	//конвертируем данные, добавляя нумератор
	ТЕМП=СоздатьОбъект("ТаблицаЗначений");
	ТЕМП=ЗначениеИзСтроки(ДанныеРозница);
	ТЕМП.НоваяКолонка("ОстатокР","число",15,2,"Остаток Р.",10);
	ТЕМП.НоваяКолонка("ОборотР","число",15,2,"Оборот Р.",10);

	ТЕМП.ВыбратьСтроки();
	ном=0;	//нумератор
	
	если темп.количествоКолонок()=11 тогда
		Сообщить("Документ старого типа... Необходимо переимпортировать!");
		Возврат;
	КонецЕсли;
	
	
	Пока ТЕМП.ПолучитьСтроку()=1 Цикл
		ТЗ.НоваяСтрока();
		ном=ном+1;
		ТЗ.Номер		= ном;
		ТЗ.ВажностьР	= ТЕМП.ВажностьР;
		ТЗ.КодР			= ТЕМП.КодР;
		ТЗ.Код			= ТЕМП.Код;
		ТЗ.НоменклатураР= ТЕМП.ТоварР;
		ТЗ.ЕдиницаР		= ТЕМП.ЕдиницаР;
		ТЗ.КолвоР		= ТЕМП.КолвоР;
		ТЗ.ОборотР		= ТЕМП.ОборотР;
		ТЗ.ОстатокР		= ТЕМП.ОстатокР;
	КонецЦикла;
	ТЕМП="";
КонецПроцедуры //СозданиеТЗизДанныеРозницы()

//	заполняет таблицу (1  = все Ок, -1 = ошибки) 
Функция ЗаполниТаблицу()
	перем Рез; 
	Рез=1;
	ТЗ.ВыбратьСтроки();
	пока (ТЗ.ПолучитьСтроку()=1) и (Рез=1) цикл
		парам=СоздатьОбъект("СписокЗначений");
		парам.ДобавитьЗначение(ТЗ.КодР,"КодР");
		парам.ДобавитьЗначение(ТЗ.Код,"нормКод");
		парам.ДобавитьЗначение(ТЗ.КолвоР,"КолвоР");
		парам.ДобавитьЗначение(ТЗ.ОстатокР,"ОстатокР");
		парам.ДобавитьЗначение(ТЗ.ОборотР,"ОборотР");
		парам.ДобавитьЗначение(сокрЛП(ТЗ.НоменклатураР),"НазваниеР");
		
		ОткрытьФормуМодально("Обработка.ПодборСоответствия",парам); 
		Если парам.Принадлежит("Ошибка")=1 Тогда
			сообщить("Не могу открыть форму подбора соответствий или нажата ОТМЕНА!");
			Рез=-1;
		иначеесли пустоезначение(парам)=1 тогда //Если вдруг ошибка выползет
	    	
		иначеесли парам.ПолучитьЗначение(1)="==" тогда	//Это готовые данные, надо их вставить в МнЧ
			СчетчикЦикла = 0;
			стр="";
			Для СчетчикЦикла = 1 По Парам.РазмерСписка() Цикл
				значение=Парам.ПолучитьЗначение(СчетчикЦикла,стр);
				Если стр="Начало" Тогда
					НоваяСтрока();
				иначеесли стр="Код" тогда
					КодЭлемента=значение;
				иначеесли стр="Номенклатура" тогда
					Номенклатура=значение;
				иначеесли стр="Производитель" тогда
					Производитель=значение;
				иначеесли стр="Единица" тогда
					Единица=значение;
					Коэффициент=1;
				иначеесли стр="КолСклад" тогда
					КолСклад=значение;
				иначеесли стр="КолСклад2" тогда
					КолСклад2=значение;
				иначеесли стр="КолЗаказ" тогда
					КолЗаказ=значение;
				КонецЕсли;
				
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции	//ЗаполниТаблицу()



//Обработка складов
Функция ПокажиОстатки()
	Перем стр;

	Если НС=НомерСтроки Тогда
	    возврат 0;
	КонецЕсли;
	Если НазваниеНабораПрав()="Сервис" Тогда
		возврат 0;
	КонецЕсли;
        
	стр="";
	ТЗ_Остаток.УдалитьСтроки();
	_Склад_Темп.ВыбратьЭлементы();
	Пока _Склад_темп.ПолучитьЭлемент()=1 Цикл
		_Рег1.УстановитьФильтр(,Номенклатура,_Склад_темп);
		_Рег1.ВыгрузитьИтоги(_ТЗ,1,1);	//В ТЗ мы запомнили все остатки товаров на складе
		
		_рег2.УстановитьФильтр(Номенклатура,_Склад_темп);
		//	рег2.УстановитьЗначениеФильтра("Номенклатура",спТоваров,2);
		_рег2.ВыгрузитьИтоги(_ТЗ2,1,1);
		
		_ТЗ2.Свернуть("Номенклатура","Количество");
		х					= ПолучитьПустоеЗначение(х);
		у					= 1;

		а=0;
		
		Если _ТЗ2.НайтиЗначение(Номенклатура,х,у)=1 Тогда	//Сначала общий резерв
			а=1;
			ТЗ_Остаток.НоваяСтрока();
			ТЗ_Остаток.Склад=_Склад_Темп.ТекущийЭлемент();
			ТЗ_Остаток.Резерв	= _ТЗ2.ПолучитьЗначение(х,"Количество");
			х					= ПолучитьПустоеЗначение(х);
		КонецЕсли;
		//Теперь из остатков ТМЦ
		х			= ПолучитьПустоеЗначение(х);
		у			= 2;
		Если _ТЗ.НайтиЗначение(Номенклатура,х,у)=1 Тогда
			Если а=0 Тогда
	    		ТЗ_Остаток.НоваяСтрока();
				ТЗ_Остаток.Склад=_Склад_Темп.ТекущийЭлемент();
			КонецЕсли;
			ТЗ_Остаток.Остаток	= _ТЗ.ПолучитьЗначение(х,"Количество");
		КонецЕсли;
	КонецЦикла;
	НС=НомерСтроки;
	стрк="";
	возврат стрк;
КонецФункции
Процедура ПокажиДетализациюРезерва()
	Если ТЗ_Остаток.КоличествоСтрок()=0 Тогда
	    возврат;
	КонецЕсли;
	х	= ТЗ_Остаток.ТекущаяСтрока();
	скл	= ТЗ_Остаток.ПолучитьЗначение(х,"Склад");
	ном	= Номенклатура;
	ТекД= "";
	КонтРезерв	= СоздатьОбъект("СписокЗначений");	//Передача параметров в обработку "РезервыТМЦ" 
	КонтРезерв.ДобавитьЗначение(скл,"Склад");
	КонтРезерв.ДобавитьЗначение(ном,"Номенклатура");
	КонтРезерв.ДобавитьЗначение(ТекД,"ТекД");
	
	ОткрытьФормуМодально("Обработка.ПокажиРезервыТМЦ", контРезерв);
КонецПроцедуры


//Создание 2-х документов "Перемещение ТМЦ". 
//Если они уже были созданы, то происходит модификация содержимого.
//Если документы открыты, то появляется диалог с просьбой закрыть его.
Процедура ОбработайПеремещения()
	перем Пр1, Пр2;
	
	
	Если Модифицированность()=1 тогда
	    Записать();
	КонецЕсли;
	
	Скл1=0;Скл2=0;Скл3=0;	//Уже есть или еще нет документов
	ВыбратьСтроки();	//Шоб потом не упираться
	Док=СоздатьОбъект("Документ");	
	Док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
	
	Если УжеНовыйТип=0 Тогда	//Отработай по старой схеме
		Пока Док.ПолучитьДокумент()=1 цикл		//Проверяем на присутствие документов
			Если (Док.ПредставлениеВида()="Перемещение ТМЦ") и //Если есть, то заполняем заново
			(Док.Комментарий="Ввод перемещений по факту: "+комментарий) тогда
				Док.СделатьНеПроведенным();
				Док.СнятьПометкуУдаления();
				Док.Валюта=глРубли;
				Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
				Док.УдалитьСтроки();
				Если (Док.СкладПолучатель=Склад) и (Док.Склад=Константа.ОсновнойСклад) тогда	//Это пр1
					Пока ПолучитьСтроку()=1 цикл
						Если КолСклад<>0 тогда
							Док.НоваяСтрока();
							Док.Номенклатура	= Номенклатура;
							Док.Единица			= Единица;
							Док.Коэффициент		= Коэффициент;
							Док.Количество		= КолСклад;
						КонецЕсли;
					КонецЦикла;
					попытка
						Док.Записать();
						Скл1=1;
						сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
					исключение
						сообщить("Перемещение, которое вы пытаетесь изменить, уже открыто! Закройте его!");
						возврат;
					КонецПопытки;
					
				иначеЕсли (Док.СкладПолучатель=Склад) и (Док.Склад=Константа.ДополнительныйСклад) тогда	//Это Пр2
					Пока ПолучитьСтроку()=1 цикл
						Если КолСклад2<>0 тогда
							Док.НоваяСтрока();
							Док.Номенклатура	= Номенклатура;
							Док.Единица			= Единица;
							Док.Коэффициент		= Коэффициент;
							Док.Количество		= КолСклад2;
						КонецЕсли;
					КонецЦикла;
					попытка
						Док.Записать();
						Скл2=1;
						сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
					исключение
						сообщить("Перемещение, которое вы пытаетесь изменить, уже открыто! Закройте его!");
						возврат;
					КонецПопытки;
				КонецЕсли;
			Иначеесли (Док.ПредставлениеВида()="Сводный Заказ Поставщикам") и //Если есть, то заполняем заново
			(Док.Комментарий="Ввод заказа по факту: "+комментарий) тогда
				Док.СделатьНеПроведенным();
				Док.СнятьПометкуУдаления();
				Док.УдалитьСтроки();
				Пока ПолучитьСтроку()=1 цикл
					Если КолЗаказ<>0 тогда
						Док.НоваяСтрока();
						Док.Номенклатура	= Номенклатура;
						Док.Артикул			= Номенклатура.Артикул;
						Док.Производитель	= Производитель;
						Док.ВидТМЦ			= Номенклатура.ВидНоменклатуры;
						Док.Единица			= Единица;
						Док.Коэффициент		= Коэффициент;
						Док.Количество		= КолЗаказ;
						Док.КоличествоФакт	= КолЗаказ;
						Док.СрокПоставки	= РабочаяДата()+1;
						Док.СрокФакт		= РабочаяДата()+1;
						Док.ВидТМЦ 			= Перечисление.ВидыТМЦ.Товар;
					КонецЕсли;
				КонецЦикла;
				попытка
					Док.Записать();
					Скл3=1;
					сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
				исключение
					сообщить("Заказ, который вы пытаетесь изменить, уже открыт! Закройте его!");
					возврат;
				КонецПопытки;
			КонецЕсли;
			
		КонецЦикла;
		//А теперь, если доков нет, то заполним их.
		
		Если (Скл1=0) и (итог("КолСклад")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.ПеремещениеТМЦ");
			Док.Новый();
			Док.Склад=глПользователь.ОсновнойСклад;
			Док.Валюта=глРубли;
			Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.СкладПолучатель=Склад;
			Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.УстановитьНовыйНомер("Пр"+Док.СкладПолучатель.ПрефиксНомеровДокументов); 
			Док.Автор=Автор;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.ФирмаПолучатель=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод перемещений по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолСклад<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолСклад;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		
		если (Скл2=0) и (итог("КолСклад2")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.ПеремещениеТМЦ");
			Док.Новый();
			Док.Склад=Константа.ДополнительныйСклад;
			Док.Валюта=глРубли;
			Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
			Док.СкладПолучатель=Склад;
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.УстановитьНовыйНомер("Пр"+Док.СкладПолучатель.ПрефиксНомеровДокументов); 
			Док.Автор=Автор;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.ФирмаПолучатель=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод перемещений по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолСклад2<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолСклад2;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		Если (Скл3=0) и (итог("КолЗаказ")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.СолянкаПоПоставкам");
			Док.Новый();
			Док.Склад=Константа.ОсновнойСклад;
			//		Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.Автор=Автор;
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод заказа по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолЗаказ<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Артикул			= Номенклатура.Артикул;
					Док.Производитель	= Производитель;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолЗаказ;
					Док.КоличествоФакт	= КолЗаказ;
					Док.СрокПоставки	= РабочаяДата()+1;
					Док.СрокФакт		= РабочаяДата()+1;
					Док.ВидТМЦ 			= Перечисление.ВидыТМЦ.Товар;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли УжеНовыйТип=1 Тогда	//Мы должны отработать по новой схеме
		
		Пока Док.ПолучитьДокумент()=1 цикл		//Проверяем на присутствие документов
			Если (Док.ПредставлениеВида()="Перемещение ТМЦ в розницу") и //Если есть, то заполняем заново
			(Док.Комментарий="Ввод перемещений по факту: "+комментарий) тогда
				Док.СделатьНеПроведенным();
				Док.СнятьПометкуУдаления();
				Док.Валюта=глРубли;
				Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
				Док.УдалитьСтроки();
				Если (Док.СкладПолучатель=Склад) и (Док.Склад=Константа.ОсновнойСклад) тогда	//Это пр1
					Пока ПолучитьСтроку()=1 цикл
						Если КолСклад<>0 тогда
							Док.НоваяСтрока();
							Док.Номенклатура	= Номенклатура;
							Док.Единица			= Единица;
							Док.Коэффициент		= Коэффициент;
							Док.Количество		= КолСклад;
						КонецЕсли;
					КонецЦикла;
					попытка
						Док.Записать();
						Скл1=1;
						сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
					исключение
						сообщить("Перемещение, которое вы пытаетесь изменить, уже открыто! Закройте его!");
						возврат;
					КонецПопытки;
					
				иначеЕсли (Док.СкладПолучатель=Склад) и (Док.Склад=Константа.ДополнительныйСклад) тогда	//Это Пр2
					Пока ПолучитьСтроку()=1 цикл
						Если КолСклад2<>0 тогда
							Док.НоваяСтрока();
							Док.Номенклатура	= Номенклатура;
							Док.Единица			= Единица;
							Док.Коэффициент		= Коэффициент;
							Док.Количество		= КолСклад2;
						КонецЕсли;
					КонецЦикла;
					попытка
						Док.Записать();
						Скл2=1;
						сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
					исключение
						сообщить("Перемещение, которое вы пытаетесь изменить, уже открыто! Закройте его!");
						возврат;
					КонецПопытки;
				КонецЕсли;
			Иначеесли (Док.ПредставлениеВида()="Сводный Заказ Поставщикам") и //Если есть, то заполняем заново
			(Док.Комментарий="Ввод заказа по факту: "+комментарий) тогда
				Док.СделатьНеПроведенным();
				Док.СнятьПометкуУдаления();
				Док.УдалитьСтроки();
				Пока ПолучитьСтроку()=1 цикл
					Если КолЗаказ<>0 тогда
						Док.НоваяСтрока();
						Док.Номенклатура	= Номенклатура;
						Док.Артикул			= Номенклатура.Артикул;
						Док.Производитель	= Производитель;
						Док.ВидТМЦ			= Номенклатура.ВидНоменклатуры;
						Док.Единица			= Единица;
						Док.Коэффициент		= Коэффициент;
						Док.Количество		= КолЗаказ;
						Док.КоличествоФакт	= КолЗаказ;
						Док.СрокПоставки	= РабочаяДата()+1;
						Док.СрокФакт		= РабочаяДата()+1;
						Док.ВидТМЦ 			= Перечисление.ВидыТМЦ.Товар;
					КонецЕсли;
				КонецЦикла;
				попытка
					Док.Записать();
					Скл3=1;
					сообщить("Обновление содержимого документа: "+Док+", прошло успешно.");
				исключение
					сообщить("Заказ, который вы пытаетесь изменить, уже открыт! Закройте его!");
					возврат;
				КонецПопытки;
			КонецЕсли;
			
		КонецЦикла;
		//А теперь, если доков нет, то заполним их.
		
		Если (Скл1=0) и (итог("КолСклад")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
			Док.Новый();
			Док.Склад=глПользователь.ОсновнойСклад;
			Док.Валюта=глРубли;
			Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.СкладПолучатель=Склад;
			Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.УстановитьНовыйНомер("Пр"+Док.СкладПолучатель.ПрефиксНомеровДокументов); 
			Док.Автор=Автор;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.ФирмаПолучатель=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод перемещений по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолСклад<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолСклад;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		
		если (Скл2=0) и (итог("КолСклад2")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
			Док.Новый();
			Док.Склад=Константа.ДополнительныйСклад;
			Док.Валюта=глРубли;
			Док.Курс=глКурсДляВалюты(Док.Валюта,Док.ДатаДок);
			Док.СкладПолучатель=Склад;
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.УстановитьНовыйНомер("Пр"+Док.СкладПолучатель.ПрефиксНомеровДокументов); 
			Док.Автор=Автор;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.ФирмаПолучатель=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод перемещений по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолСклад2<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолСклад2;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		Если (Скл3=0) и (итог("КолЗаказ")<>0) тогда
			Док="";	//Обнулим
			Док=СоздатьОбъект("Документ.СолянкаПоПоставкам");
			Док.Новый();
			Док.Склад=Константа.ОсновнойСклад;
			//		Док.ТипЦен = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
			Док.Автор=Автор;
			Док.ЮрЛицо=глПользователь.ОсновнаяФирма.ЮрЛицо;
			Док.Фирма=глПользователь.ОсновнаяФирма;
			Док.Комментарий="Ввод заказа по факту: "+комментарий;
			Док.ДокОснование=ТекущийДокумент();
			
			Пока ПолучитьСтроку()=1 цикл
				Если КолЗаказ<>0 тогда
					Док.НоваяСтрока();
					Док.Номенклатура	= Номенклатура;
					Док.Артикул			= Номенклатура.Артикул;
					Док.Производитель	= Производитель;
					Док.Единица			= Единица;
					Док.Коэффициент		= Коэффициент;
					Док.Количество		= КолЗаказ;
					Док.КоличествоФакт	= КолЗаказ;
					Док.СрокПоставки	= РабочаяДата()+1;
					Док.СрокФакт		= РабочаяДата()+1;
					Док.ВидТМЦ 			= Перечисление.ВидыТМЦ.Товар;
				КонецЕсли;
			КонецЦикла;			
			
			попытка
				Док.Записать();
				сообщить("Запись нового документа: "+Док+", прошла успешно.");
			исключение
				сообщить("Ошибка при попытке записи нового документа!");
				возврат;
			КонецПопытки;
		КонецЕсли;
		
		
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// ПоКнопкеПодбор()
//
// Параметры:
//  нет.
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//
Процедура ПоКнопкеПодбор()
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.ДобавитьЗначение(Фирма,           "Фирма");
	Параметры.ДобавитьЗначение(Склад,           "Склад");
	Параметры.ДобавитьЗначение(0,               "ЕстьВидТМЦ");
	Параметры.ДобавитьЗначение("Нет",       "ЦенаВподборе");
	
	Если Выбран() = 0 Тогда
		Параметры.ДобавитьЗначение("Дата",      "ТипГраницы");
		Параметры.ДобавитьЗначение(ДатаДок,     "ЗначениеГраницы");
	Иначе
		Параметры.ДобавитьЗначение("Позиция",         "ТипГраницы");
		Параметры.ДобавитьЗначение(ПолучитьПозицию(), "ЗначениеГраницы");
	КонецЕсли;
	
	Параметры.ДобавитьЗначение("Подбор номенклатуры в документ " + ПредставлениеВида() + " № " + НомерДок, "Заголовок");
	глПодбор(Контекст, Параметры);
КонецПроцедуры // ПоКнопкеПодбор()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаПодбора(ВыбЗнач, КонтФормыПодбора)
	
	// возможно есть ставки налогов, нет скидки
	глОбработкаПодбора(Контекст, ВыбЗнач, 0, 0, 0);
	
КонецПроцедуры

_ТЗ			= СоздатьОбъект("ТаблицаЗначений");
_ТЗ2			= СоздатьОбъект("ТаблицаЗначений");
_Рег1		= СоздатьОбъект("Регистр.ОстаткиТМЦ");
_Рег2		= СоздатьОбъект("Регистр.РезервыТМЦ2");
_Склад_темп	= СоздатьОбъект("Справочник.Склады");
