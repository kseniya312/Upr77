Перем Результат;

Перем СписокДействий; // для механизма кнопки "Действия"
Перем НачальнаяДатаДокумента; // для механизма контроля уникальности номеров

Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;

// Для контроля необходимости пересчетов
Перем СтараяДата, СтараяФирма;
Перем СтараяВалютаИсх, СтарыйКурсИсх, СтараяВалютаКон, СтарыйКурсКон;
Перем СтарыйКонтрагент, СтарыйДоговор;
Перем ТекущийДолг;
Перем Парам;

Перем текстСписокСтатей;	//Вывод на экран полного пути текущей группы


//Показывает полный путь для элемента справочника + остальные надписи
Процедура ОбновиТекст()
	текстСписокСтатей	= СписокСтатейДР.ПолноеНаименование();
	Комментарий			= текстСписокСтатей;
	Результат			= "(in"+глФРМ(СуммаКон,ВалютаКон)+")"+"="+"(out"+глФРМ(СуммаИсх,ВалютаИсх)+")";
КонецПроцедуры
   
Процедура ПриЗаписи()
	ПриЗаписиДокумента(Контекст);	
КонецПроцедуры	

//Производит прямой или обратный 
//расчёт. В зависимости от указанной колонки
Процедура ПересчетСумм(пар=1)
	Если пар=1 Тогда	//Прямой расчет 
		Если СуммаИсх <> 0 Тогда
			СуммаКон = глПересчет(СуммаИсх, ВалютаИсх, КурсИсх, ВалютаКон, КурсКон);
		КонецЕсли;
	Иначе
		Если СуммаКон <> 0 Тогда
			СуммаИсх = глПересчет(СуммаКон, ВалютаКон, КурсКон, ВалютаИсх, КурсИсх);
		КонецЕсли;
	КонецЕсли;
	ОбновиТекст();	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст,Скопирован);
	
	Если Скопирован=1 Тогда
		ОбновиТекст();
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Касса) = 1 Тогда
	    Касса = глЗначениеПоУмолчанию("ОсновнаяКасса");
	КонецЕсли;

	ВалютаИсх	= глРубли;
	КурсИсх		= глКурсДляВалюты(ВалютаИсх,ДатаДок);
	ВалютаКон	= глДоллары;
	КурсКон		= глКурсДляВалюты(ВалютаКон,ДатаДок);
	КодОперации	= глКО.ОбменВалют;	
	ОбновиТекст();
КонецПроцедуры

Процедура ПоКнопкеОснование()
	
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;
	
	// если документа - основания нет, позволяем выбрать его
	//ДокОсн = глВыбратьОснование(Контекст);
	//Если ПустоеЗначение(ДокОсн) = 0 Тогда
	//	// Выбрали основание
	//	глЗаполнитьШапкуНаОсн(Контекст, ДокОсн);
	//	
	//    Основание = глПредставлениеДокумента(ДокОсн);
	//	
	//	ТекстВопроса = "Заполнить сумму по документу основанию?";
	//	Если Сумма <> 0 Тогда
	//		ТекстВопроса = ТекстВопроса + РазделительСтрок +" (перед заполнением сумма будет обнулена)";
	//	КонецЕсли;
	//		
	//	Если Вопрос(ТекстВопроса, "Да+Нет", 60) <> "Да" Тогда
	//		Возврат;
	//	КонецЕсли;
	//		
	//	Сумма = 0;
	//	Результат = ЗаполнениеПоДокументуОснованию();
	//	Если ПустоеЗначение(Результат) = 0 Тогда
	//		Предупреждение(Результат, 60);
	//	КонецЕсли;
	//	
	//	СтарыйКонтрагент	= Контрагент;
	//	СтарыйДоговор		= Договор;
	//		
	//	РасчетТекущегоДолга();
	//	ПересчетСуммыВзаиморасчетов();
	//	УправлениеВидимостью();
	//	УправлениеДоступностью();
	//КонецЕсли;
	
КонецПроцедуры //ПоКнопкеОснование()

//******************************************************************************
// Печать(СразуНаПринтер, КолЭкз)
//
// Параметры:
//  СразуНаПринтер - (1) если печать на принтер, (0) - с предварительным просмотром
//  КолЭкз - количество экземпляров печати
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//	Выводит печатную форму документа.
//
Процедура Печать(СразуНаПринтер = 0,КолЭкз = 1)
	                     
	Наименование			= Фирма.ЮрЛицо.ПолнНаименование;
	Руководитель			= "Бояринова Е.А.";
	ДолжностьРуководителя	= "ген. директор";
	Глбухгалтер				= Фирма.ЮрЛицо.Глбухгалтер.Получить(ДатаДок);
	Кассир					= Фирма.ЮрЛицо.Кассир.Получить(ДатаДок);
	СуммаПроп				= глСуммаПрописью(СуммаКон, ВалютаКон);
	ПринятоОт				= Подчинение1;
	Основание				= Комментарий;
	Выдать					= Подчинение1;
	Приложение				= "";
	печДатаДок				= ?(ДатаЧисло(ДатаДок)<10,"0","")+Формат(ДатаДок ,"Д ДДММММГГГГ");
	

	Таб	= СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("РКО");
	Таб.Вывести();
	
	Если СразуНаПринтер = 0 Тогда
		Таб.Опции(0,0,0,0,"ОпцииПечатиРасходногоОрдера","ОпцииПечатиРасходногоОрдера");
		
		Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
			Таб.Защита(1);
		Иначе
			Таб.Защита(0);
		КонецЕсли;
		Таб.ТолькоПросмотр(1);

		Таб.Показать(глНазваниеДокументаВжурнале(Контекст),"");  
	Иначе     
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(КолЭкз);
		Таб.Напечатать(0);
	КонецЕсли; 
	Таб	= "";
	Таб	= СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ПКО");
	Таб.Вывести();
	
	Если СразуНаПринтер = 0 Тогда
		Таб.Опции(0,0,0,0,"ОпцииПечатиПриходногоОрдера","ОпцииПечатиПриходногоОрдера");

		Если глПолучитьПолномочие("РазрешитьРедактированиеТаблиц") = 0 Тогда
			Таб.Защита(1);
		Иначе
			Таб.Защита(0);
		КонецЕсли;
		Таб.ТолькоПросмотр(1);

		Таб.Показать(глНазваниеДокументаВжурнале(Контекст),"");  
	Иначе     
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(КолЭкз);
		Таб.Напечатать(0);
	КонецЕсли; 

КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Вызывается из формул элементов диалога:
//  При нажатии на кнопку "Печать". 
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	// проверим полномочия печати непроведенных документов
	Если Проведен() = 0 Тогда
		Если глПолучитьПолномочие("РазрешитьПечатьНепроведенныхДокументов") = 0 Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!", 60);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать(СразуНаПринтер, КолЭкз);
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(глВзятьКонтекст(Контекст), "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Вызывается из формул элементов диалога:
//  При нажатии на кнопку выбора печатной формы. 
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()


Процедура ПриОткрытии()
	СтараяДата		= ДатаДок;
	СтараяФирма		= Фирма;
	СтараяВалютаИсх	= ВалютаИсх;
	СтарыйКурсИсх	= КурсИсх;
	СтараяВалютаКон	= ВалютаКон;
	СтарыйКурсКон	= КурсКон;

	НачальнаяДатаДокумента = ДатаДок;

	глПроверкаРазрешенияРедактирования(Контекст);
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ДатаДок > ПолучитьДатуТА()) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли; 
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ИмяПользователя() <> "Администратор" ) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности");
	СписокДействий.ДобавитьЗначение("Ввести на основании");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");

	// кнопка по умолчанию
	Если (Форма.ТолькоПросмотр() = 1) ИЛИ ((ДатаДок < Макс(РабочаяДата(), ПолучитьДатуТА()) ) И (Выбран() = 1)) Тогда
	    Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	глАктивизироватьРеквизит(Контекст);
		
	//Если документ еще не проведен, тогда 
	//проведение делаем только в потоке
	Если ( Проведен() = 0 ) Тогда
		ПроводитьПослеТА(1,1);
	КонецЕсли;                                           
	
	ПриЗаписиПерепроводить(1);
КонецПроцедуры

Процедура ПриИзмененииВалюты(пар=1)
	Если пар=1 тогда
		Если ПустоеЗначение(ВалютаИсх)=1 Тогда
			Возврат;
		КонецЕсли;
		// При смене валюты зачитываем текущий курс на дату
		КурсИсх = глКурсДляВалюты(ВалютаИсх, ДатаДок);
		Если СуммаИсх <> 0 Тогда
			Если Вопрос("Пересчитать исходную сумму?", "Да+Нет", 60) = "Да" Тогда
				СуммаИсх = глПересчет(СуммаИсх, СтараяВалютаИсх, СтарыйКурсИсх, ВалютаИсх, КурсИсх);
			КонецЕсли;
		КонецЕсли;
		СтараяВалютаИсх = ВалютаИсх; СтарыйКурсИсх = КурсИсх;
	Иначе
		Если ПустоеЗначение(ВалютаКон)=1 Тогда
			Возврат;
		КонецЕсли;
		// При смене валюты зачитываем текущий курс на дату
		КурсКон = глКурсДляВалюты(ВалютаКон, ДатаДок);
		Если СуммаКон <> 0 Тогда
			Если Вопрос("Пересчитать конечную сумму?", "Да+Нет", 60) = "Да" Тогда
				СуммаКон = глПересчет(СуммаКон, СтараяВалютаКон, СтарыйКурсКон, ВалютаКон, КурсКон);
			КонецЕсли;
		КонецЕсли;
		СтараяВалютаКон = ВалютаКон; СтарыйКурсКон = КурсКон;
	КонецЕсли;	
	
КонецПроцедуры // ПриИзмененииВалюты()

Процедура ПриИзмененииДаты()
	Если СтараяДата <> ДатаДок Тогда
	    СтараяДата = ДатаДок;
		// При изменении даты документа нужно проверить не изменился ли курс валюты,
		// и если изменился, то предложить пересчитать документ
		Если СуммаИсх = 0 Тогда
			// Если выбрана валюта. то меняем ее курс
			Если ПустоеЗначение(ВалютаИсх) = 0 Тогда
				КурсИсх   = глКурсДляВалюты(ВалютаИсх, ДатаДок);
			КонецЕсли;                                                    
		Иначе // Если документ уже заполнен, то предлагаем его пересчитать
			ПромКурс = глКурсДляВалюты(ВалютаИсх, ДатаДок);
			Если (ПромКурс <> КурсИсх) Тогда
				Если Вопрос("На дату документа у исходной валюты документа был задан другой курс.
						     |Установить курс документа в соответствии с курсом валюты?","Да+Нет",60) = "Да" Тогда
					КурсИсх	= ПромКурс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если СуммаКон = 0 Тогда
			// Если выбрана валюта. то меняем ее курс
			Если ПустоеЗначение(ВалютаКон) = 0 Тогда
				КурсКон   = глКурсДляВалюты(ВалютаКон, ДатаДок);
			КонецЕсли;                                                    
		Иначе // Если документ уже заполнен, то предлагаем его пересчитать
			ПромКурс = глКурсДляВалюты(ВалютаКон, ДатаДок);
			Если (ПромКурс <> КурсКон) Тогда
				Если Вопрос("На дату документа у конечной валюты документа был задан другой курс.
						     |Установить курс документа в соответствии с курсом валюты?","Да+Нет",60) = "Да" Тогда
					КурсКон	= ПромКурс;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ПриИзмененииВалюты(1);
	КонецЕсли;
КонецПроцедуры // ПриИзмененииДаты()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	Если (ТипЗначенияСтр(Форма.Параметр) = "ГрупповойКонтекст") и (Выбран()=1) Тогда
		КонтФормы = Форма.Параметр;
		КонтФормы.НадоОбновить = 1;
		КонтФормы.Форма.Обновить();
		Стр = 0;
		Если КонтФормы.ТабДокументов.НайтиЗначение(ТекущийДокумент(),Стр,"Документ")=1 Тогда
			КонтФормы.ТабДокументов.ТекущаяСтрока(Стр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()
                                            
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//******************************************************************************
//	                   
// формируем таблицу печатных форм
НомерТекущейФормы	= 0;

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Печатная форма";
ТаблицаПечФорм.Кнопка       = "Печать";
ОбновиТекст();

Парам = Форма.Параметр;
