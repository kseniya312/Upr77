////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем СписокДействий; // для механизма кнопки "Действия"   
Перем НачальнаяДатаДокумента; // для механизма контроля уникальности номеров

Перем СтараяФирма; // для контроля необходимости пересчетов

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//                                
//*****************************************************************************
// ЗаголовокФормы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Название операции
//
// Описание:
// 	Формирует название операции и заголовок формы диалога
//
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
            
	Заголовок 	= глНазваниеДокументаВЖурнале(Контекст);
	Название 	= Заголовок+" №";
	
	Если Выбран() = 1 Тогда  
		Если Проведен() = 1 Тогда
			Заголовок = Заголовок + ". Проведен";
		Иначе
			Заголовок = Заголовок + ". Не проведен";
		КонецЕсли;
	Иначе
		Заголовок = Заголовок + ". Новый";
	КонецЕсли;
	Форма.Заголовок(Заголовок);               
	Возврат Название;
	
КонецФункции // ЗаголовокФормы()

//******************************************************************************
// ПриИзмененииФирмы()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Нет
//
// Описание: 
//  Вызывается из формулы реквизита диалога "Фирма"
//
Процедура ПриИзмененииФирмы()      
	
	Если СтараяФирма <> Фирма Тогда
		// только если изменили
		глПриИзмененииФирмы(Контекст);
		СтараяФирма = Фирма; 
	КонецЕсли;

КонецПроцедуры // ПриИзмененииФирмы()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//                                
//******************************************************************************
// Предопределенная процедура.
//
Процедура ВводНового(Скопирован) 
	                  
	глЗаполнитьШапку(Контекст, Скопирован);
	
	Если Скопирован = 1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	
	КассаРуб           = 1; КассаУпр               = 1;
	БанкРуб            = 1; БанкУпр                = 1;
	ПодотчетныеЛицаРуб = 1; ПодотчетныеЛицаУпр     = 1;
	ПоставщикиРуб      = 1; ПоставщикиУпр          = 1;
	ПокупателиРуб      = 1; ПокупателиУпр          = 1;
	                        ПоставщикиРезидентыУпр = 1;
	                        ПокупателиРезидентыУпр = 1;

КонецПроцедуры // ВводНового()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	                        
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		Если ПустоеЗначение(Парам.Получить("Команда"))=1 Тогда
			Сообщить("В форму документа "+Вид()+" передан неверный параметр!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
		
		Если (Парам.Получить("Команда") = "ПечатьНаПринтер")
		или  (Парам.Получить("Команда") = "ПечатьНаЭкран") 
		Тогда
			Предупреждение("Документ не имеет печатной формы!", 60);
			СтатусВозврата(0);Возврат;
		Иначе
			Сообщить("В форму документа "+Вид()+" передана неверная команда "+Парам.Получить("Команда")+"!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;
	КонецЕсли;

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	                                                      
	глПроверкаРазрешенияРедактирования(Контекст);   

	// инициализация модульных переменных, контролирующих выполнение
	// пересчетов и обновление надписей в форме
	СтараяФирма   		  	= Фирма;
	НачальнаяДатаДокумента = ДатаДок;
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ДатаДок > ПолучитьДатуТА()) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
	    // СДЕЛАТЬ НЕДОСТУПНЫМИ КНОПКИ МОДИФИКАЦИИ ДОКУМЕНТА
		Форма.кнОК.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
		Форма.кнПровести.Доступность(0);
	КонецЕсли;
	
	СписокДействий.ДобавитьЗначение("Ввести на основании");
	
	// кнопка по умолчанию
	Если (Форма.ТолькоПросмотр() = 1) ИЛИ ((ДатаДок < Макс(РабочаяДата(), ПолучитьДатуТА()) ) И (Выбран() = 1)) Тогда
	    Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	//Если документ еще не проведен, тогда 
	//проведение делаем только в потоке
	Если ( Проведен() = 0 ) Тогда
		ПроводитьПослеТА(1,1);
	КонецЕсли;                                           

КонецПроцедуры // ПриОткрытии()
                                     
//*****************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗаписи()
	
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры // ПриЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
