////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
////////////////////////////////////////////////////////////////////////////////

//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Заполнение-очистка дополнительных полей для поиска и распределения
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура ЗаполнитьДляРаспределения(Таб)
	Таб.ВыбратьСтроки();
	Пока Таб.ПолучитьСтроку() = 1 Цикл    
		Таб.Номенклатура1 = Таб.Номенклатура;	
		Таб.Сторнировать  = 0;
	КонецЦикла;	
КонецПроцедуры	

//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Распределение колво по партиям/остаткам
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура РаспределитьКолвоСторноПоПартиям(Таб,КолвоСторно,Товар)
	тС = 0;             
    //Таб.Сортировать("-ДатаПартии, -КодПартии"); 
	//Таб.Сортировать("-ДатаПартии");
	Пока (КолвоСторно > 0) и (Таб.НайтиЗначение(Товар,тС,"Номенклатура1") = 1) Цикл
		КолРег = Таб.ПолучитьЗначение(тС,"Количество");	
		Если КолРег >0 Тогда
			Если КолРег >= КолвоСторно Тогда
				Таб.УстановитьЗначение(тС,"Сторнировать",КолвоСторно);
				КолвоСторно      = 0;
			Иначе
				Таб.УстановитьЗначение(тС,"Сторнировать",КолРег);
				КолвоСторно       = КолвоСторно - КолРег;
				Таб.УстановитьЗначение(тС,"Номенклатура1","");
			КонецЕсли;	
			тС = 0;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// запись сторно в регистр партий
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура СторноПартий(ТабДвижений,Знак = 0)
	//ТабДвижений.Сортировать("-ДатаПартии, - КодПартии");
	ТабДвижений.Сортировать("-ДатаПартии");
	ТабДвижений.ВыбратьСтроки();
	Пока ТабДвижений.ПолучитьСтроку() = 1 Цикл
		Если ТабДвижений.Сторнировать > 0 Тогда
			КоэфСписания = ТабДвижений.Сторнировать/ТабДвижений.Количество;
			Регистр.ПартииНаличие.Фирма 			= ТабДвижений.Фирма;
			Регистр.ПартииНаличие.МОЛ				= ТабДвижений.МОЛ;
			Регистр.ПартииНаличие.Номенклатура		= ТабДвижений.Номенклатура;     
			Регистр.ПартииНаличие.КодОперации		= ТабДвижений.КодОперации;
			Регистр.ПартииНаличие.СтатусПартии		= ТабДвижений.СтатусПартии;
			Регистр.ПартииНаличие.Партия			= ТабДвижений.Партия;
			Регистр.ПартииНаличие.ДатаПартии		= ТабДвижений.ДатаПартии; 
			//
			Регистр.ПартииНаличие.Количество		= ТабДвижений.Сторнировать;
			Регистр.ПартииНаличие.СуммаУпр			= КоэфСписания*ТабДвижений.СуммаУпр;
			Регистр.ПартииНаличие.СуммаРуб			= КоэфСписания*ТабДвижений.СуммаРуб;
			Регистр.ПартииНаличие.СуммаБезНДС		= КоэфСписания*ТабДвижений.СуммаБезНДС;
			//                                           
			Регистр.ПартииНаличие.ПродСтоимость 	= КоэфСписания*ТабДвижений.ПродСтоимость; 
			Регистр.ПартииНаличие.ЦенаПрод 			= ТабДвижений.ЦенаПрод;  
			Регистр.ПартииНаличие.Выручка 			= КоэфСписания*ТабДвижений.Выручка;  
			Регистр.ПартииНаличие.ПриоритетСписания	= ТабДвижений.ПриоритетСписания;  
			Если Знак = 0 Тогда
				Регистр.ПартииНаличие.ДвижениеПриходВыполнить();	
			Иначе	
				Регистр.ПартииНаличие.ДвижениеРасходВыполнить();	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

//+++ ГАВ 23/03/2008 +++++++++++++++++++++++++++++++++++++++++++++++++
// запись прихода в регистр партий
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура ПриходПартий(ТабДвижений,Знак = 0)
	//ТабДвижений.Сортировать("-ДатаПартии, - КодПартии");
	ТабДвижений.Сортировать("-ДатаПартии");
	ТабДвижений.ВыбратьСтроки();
	Пока ТабДвижений.ПолучитьСтроку() = 1 Цикл
		Если ТабДвижений.Сторнировать > 0 Тогда
			КоэфСписания = ТабДвижений.Сторнировать/ТабДвижений.Количество;
			Регистр.ПартииНаличие.Фирма 			= ТабДвижений.Фирма;
			Регистр.ПартииНаличие.МОЛ				= СкладПолучатель.МОЛ;
			Регистр.ПартииНаличие.Номенклатура		= ТабДвижений.Номенклатура;     
			Регистр.ПартииНаличие.КодОперации		= ТабДвижений.КодОперации;
			Регистр.ПартииНаличие.СтатусПартии		= ТабДвижений.СтатусПартии;
			Регистр.ПартииНаличие.Партия			= ТабДвижений.Партия;
			Регистр.ПартииНаличие.ДатаПартии		= ТабДвижений.ДатаПартии; 
			//
			Регистр.ПартииНаличие.Количество		= ТабДвижений.Сторнировать;
			Регистр.ПартииНаличие.СуммаУпр			= КоэфСписания*ТабДвижений.СуммаУпр;
			Регистр.ПартииНаличие.СуммаРуб			= КоэфСписания*ТабДвижений.СуммаРуб;
			Регистр.ПартииНаличие.СуммаБезНДС		= КоэфСписания*ТабДвижений.СуммаБезНДС;
			//                                           
			Регистр.ПартииНаличие.ПродСтоимость 	= КоэфСписания*ТабДвижений.ПродСтоимость; 
			Регистр.ПартииНаличие.ЦенаПрод 			= ТабДвижений.ЦенаПрод;  
			Регистр.ПартииНаличие.Выручка 			= КоэфСписания*ТабДвижений.Выручка;  
			Регистр.ПартииНаличие.ПриоритетСписания	= ТабДвижений.ПриоритетСписания;  
            //
			Регистр.ПартииНаличие.ДвижениеПриходВыполнить();	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// запись сторно в регистр остатков
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура СторноОстатков(ТабДвижений, Знак = 0)
	ТабДвижений.ВыбратьСтроки();
	Пока ТабДвижений.ПолучитьСтроку() = 1 Цикл
		Если ТабДвижений.Сторнировать > 0 Тогда
			Регистр.ОстаткиТМЦ.Фирма 			= ТабДвижений.Фирма;
			Регистр.ОстаткиТМЦ.Номенклатура		= ТабДвижений.Номенклатура;     
			Регистр.ОстаткиТМЦ.Склад			= ТабДвижений.Склад;
			Регистр.ОстаткиТМЦ.ЦенаПрод			= ТабДвижений.ЦенаПрод;
			//
			Регистр.ОстаткиТМЦ.Количество		= ТабДвижений.Сторнировать;
			//
			Регистр.ОстаткиТМЦ.Внутреннее		= ТабДвижений.Внутреннее;  
			Если Знак = 0 Тогда
				Регистр.ОстаткиТМЦ.ДвижениеПриходВыполнить();	
			Иначе	
				Регистр.ОстаткиТМЦ.ДвижениеРасходВыполнить();	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	


//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// запись прихода по списанным партиям основания
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура НабратьПартииНаРазницу(Колво,ДвиженияПартии,Товар)
	ЗаполнитьДляРаспределения(ДвиженияПартии);
	РаспределитьКолвоСторноПоПартиям(ДвиженияПартии,Колво,Товар);
	ПриходПартий(ДвиженияПартии,1);
КонецПроцедуры


//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// подбор для сторно колва остатков и партий
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Функция СторнированиеПроводок(СписокДок, ТЗ, ТабДвижений, ТабДвижений1)
	Попытка	
		//	
		РегПартии	= СоздатьОбъект("Регистр.ПартииНаличие");
		РегОстатки	= СоздатьОбъект("Регистр.ОстаткиТМЦ");
		СпрТовара	= СоздатьОбъект("СписокЗначений");
		ТЗ.Выгрузить(СпрТовара,,,"Номенклатура");
		РегПартии.УстановитьЗначениеФильтра("Номенклатура",СпрТовара,2);
		РегОстатки.УстановитьЗначениеФильтра("Номенклатура",СпрТовара,2);
		//
		ТабДвижений	= СоздатьОбъект("ТаблицаЗначений");
		ТабДвижений.НоваяКолонка("Фирма");
		ТабДвижений.НоваяКолонка("МОЛ");
		ТабДвижений.НоваяКолонка("Номенклатура","Справочник.Номенклатура"); 
		ТабДвижений.НоваяКолонка("КодОперации");
		ТабДвижений.НоваяКолонка("СтатусПартии");
		ТабДвижений.НоваяКолонка("Партия");		
		ТабДвижений.НоваяКолонка("ДатаПартии");	
		ТабДвижений.НоваяКолонка("Количество","Число");	
		ТабДвижений.НоваяКолонка("СуммаУпр","Число");	
		ТабДвижений.НоваяКолонка("СуммаРуб","Число");	
		ТабДвижений.НоваяКолонка("СуммаБезНДС","Число");
		ТабДвижений.НоваяКолонка("ПродСтоимость","Число");
		ТабДвижений.НоваяКолонка("ЦенаПрод","Число"); 		
		ТабДвижений.НоваяКолонка("Выручка","Число"); 		
		ТабДвижений.НоваяКолонка("ПриоритетСписания");
		ТабДвижений.НоваяКолонка("Номенклатура1","Справочник.Номенклатура"); 
		//
		ТабДвижений1 = СоздатьОбъект("ТаблицаЗначений");
		ТабДвижений1.НоваяКолонка("Фирма");
		ТабДвижений1.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
		ТабДвижений1.НоваяКолонка("Склад");
		ТабДвижений1.НоваяКолонка("ЦенаПрод","Число");
		ТабДвижений1.НоваяКолонка("Количество","Число");
		ТабДвижений1.НоваяКолонка("Внутреннее");
		ТабДвижений1.НоваяКолонка("Номенклатура1","Справочник.Номенклатура"); 
		//
		Для Сч = 1 По СписокДок.РазмерСписка() Цикл 
			ИсхДок	= СписокДок.ПолучитьЗначение(Сч);	
			нДок	= СоздатьОбъект("Документ."+ ИсхДок.Вид());	
			нДок.НайтиДокумент(ИсхДок); 
			
			РегПартии.ВыбратьДвиженияДокумента(нДок.ТекущийДокумент());
			Пока РегПартии.ПолучитьДвижение() = 1 Цикл
				Знак	= ?(РегПартии.Приход = 1,-1,1);
				ТабДвижений.НоваяСтрока();
				ТабДвижений.Фирма             = РегПартии.Фирма;
				ТабДвижений.МОЛ               = РегПартии.МОЛ;
				ТабДвижений.Номенклатура      = РегПартии.Номенклатура; 
				ТабДвижений.КодОперации       = РегПартии.КодОперации;
				ТабДвижений.СтатусПартии      = РегПартии.СтатусПартии;
				ТабДвижений.Партия            = РегПартии.Партия;		
				ТабДвижений.ДатаПартии        = РегПартии.ДатаПартии;	
				ТабДвижений.Количество        = Знак*РегПартии.Количество;	
				ТабДвижений.СуммаУпр          = Знак*РегПартии.СуммаУпр;	
				ТабДвижений.СуммаРуб          = Знак*РегПартии.СуммаРуб;	
				ТабДвижений.СуммаБезНДС       = Знак*РегПартии.СуммаБезНДС;
				ТабДвижений.ПродСтоимость     = РегПартии.ПродСтоимость;
				ТабДвижений.ЦенаПрод          = РегПартии.ЦенаПрод; 		
				ТабДвижений.Выручка           = РегПартии.Выручка; 		
				ТабДвижений.ПриоритетСписания = РегПартии.ПриоритетСписания;
			КонецЦикла;	 
			//
			РегОстатки.ВыбратьДвиженияДокумента(нДок.ТекущийДокумент());
			Пока РегОстатки.ПолучитьДвижение() = 1 Цикл
				Знак	= ?(РегОстатки.Приход = 1,-1,1);	
				ТабДвижений1.НоваяСтрока();
				ТабДвижений1.Фирма             = РегОстатки.Фирма;
				ТабДвижений1.Номенклатура      = РегОстатки.Номенклатура;
				ТабДвижений1.Склад             = РегОстатки.Склад;
				ТабДвижений1.ЦенаПрод          = РегОстатки.ЦенаПрод;
				ТабДвижений1.Количество        = Знак*РегОстатки.Количество;	
				ТабДвижений1.Внутреннее        = РегОстатки.Внутреннее;
			КонецЦикла;	
		КонецЦикла;
		ТабДвижений.Свернуть("Фирма,МОЛ,Номенклатура,Номенклатура1,КодОперации,СтатусПартии,Партия,ДатаПартии,КодОперации,ПродСтоимость,Выручка,ПриоритетСписания","Количество,СуммаУпр,СуммаРуб,СуммаБезНДС");
		ТабДвижений.НоваяКолонка("Сторнировать","Число");
		ТабДвижений1.Свернуть("Фирма,Номенклатура,Номенклатура1,Склад,ЦенаПрод,Внутреннее","Количество");
		ТабДвижений1.НоваяКолонка("Сторнировать","Число");
		ТабИтогов	= СоздатьОбъект("ТаблицаЗначений");
		ТабДвижений1.Выгрузить(ТабИтогов);
		ТабИтогов.Свернуть("Номенклатура","Количество");   
		//
		ЗаполнитьДляРаспределения(ТабДвижений);
		ЗаполнитьДляРаспределения(ТабДвижений1);
		ТЗ.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСтроку() = 1 Цикл
			БылоСнятоСУчета = 0;	
			тС = 0;	
			Если ТабИтогов.НайтиЗначение(ТЗ.Номенклатура,тС,"Номенклатура") = 1 Тогда	
				БылоСнятоСУчета	= ТабИтогов.ПолучитьЗначение(тС,"Количество");	
			КонецЕсли;	     
			Если БылоСнятоСУчета>ТЗ.Количество Тогда
				//
				РаспределитьКолвоСторноПоПартиям( ТабДвижений, (БылоСнятоСУчета - ТЗ.Количество), ТЗ.Номенклатура);
				РаспределитьКолвоСторноПоПартиям( ТабДвижений1,(БылоСнятоСУчета - ТЗ.Количество), ТЗ.Номенклатура);
				//
			ИначеЕсли БылоСнятоСУчета<ТЗ.Количество Тогда
				ТЗ.СнятьДополнительно = ТЗ.Количество - БылоСнятоСУчета;
			КонецЕсли;	
		КонецЦикла;                                      
		СторноОстатков(ТабДвижений1);     
		СторноПартий(ТабДвижений);
	Исключение  
		Возврат 0;	
	КонецПопытки;	
	Возврат 1;	
КонецФункции	


//+++ Машуниа ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// проверка остаток-резерв, правда непонятно для чего
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Функция ТоварДоступенДляПеремещения(ТаблицаДокумента)   
	Ит      = 1; 
	
	СписТов = СоздатьОбъект("СписокЗначений"); 
	ТЗ      = СоздатьОбъект("ТаблицаЗначений"); 
	ТЗРез   = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаДокумента.Выгрузить(СписТов,,,"Номенклатура");
	Если СравнитьТА() < 1 Тогда
		ДатаПо = ТекущийДокумент();
	Иначе
		ДатаПо = ПолучитьДатуТА();
	КонецЕсли;    
	
	ДатаС =  ДатаПо;   
	
	Запрос = СоздатьОбъект("Запрос");  
	ТекстЗапроса = "
	|Период с ДатаС по ДатаПо;
	|Номенклатура = Регистр.ОстаткиТМЦ.Номенклатура, Регистр.РезервыТМЦ2.Номенклатура;
	|Скл          = Регистр.ОстаткиТМЦ.Склад, Регистр.РезервыТМЦ2.Склад;
	|Колво        = Регистр.ОстаткиТМЦ.Количество;
	|Колво1       = Регистр.РезервыТМЦ2.Количество;
	|Функция КолОст =  КонОст(Колво);
	|Функция КолРез =  КонОст(Колво1);
	|Группировка Номенклатура Без Групп;  
	|Условие(Скл = Склад);
	|Условие(Номенклатура в СписТов);
	|Без Итогов;";
	Если Запрос.Выполнить(ТекстЗапроса) = 1 Тогда 
		Запрос.Выгрузить(ТЗ);	
		ТаблицаДокумента.ВыбратьСтроки();
		Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл   
			Стро =  "";  
			СвОст = 0;
			Если ТЗ.НайтиЗначение(ТаблицаДокумента.Номенклатура,Стро,"Номенклатура") = 1 Тогда
				ТекОст = ТЗ.ПолучитьЗначение(Стро,"КолОст");
				ТекРез = ТЗ.ПолучитьЗначение(Стро,"КолРез");
			Иначе	
				ТекОст = 0;
				ТекРез = 0;
			КонецЕсли;
			// остаток с учетом сторно и проверять должны доп снятие
			СвОст  =  ТекОст - ТекРез; 
			Если Константа.ПроверкаОстатковПеремещениеТМЦРозница=1 Тогда
				Если ТаблицаДокумента.Количество > СвОст Тогда
					Сообщить("Товара '"+ТаблицаДокумента.Номенклатура+"' недостаточно на '"+ДатаПо+"': запрошено "+ТаблицаДокумента.Количество+", на остатке "+ТекОст+?(ТекРез = 0,"",", из них "+ТекРез+" в резерве"),"!");
					Ит = 0;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;   
	Иначе
		Сообщить("Не удалось проверить остатки товаров на "+ ТекущийДокумент(),"!");
	КонецЕсли;
	Возврат Ит;       
КонецФункции


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Постановка доп. партий на склад
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура ПереместитьНаСклад(ТаблСписПартий,ТаблицаДокумента,СписокПараметров,СписалиПартии)     
	Если СписалиПартии = 1 Тогда
		ТаблСписПартий.ВыбратьСтроки();
		Пока  ТаблСписПартий.ПолучитьСтроку()=1 Цикл
			//измерения
			Регистр.ПартииНаличие. Фирма 			= ФирмаПолучатель;
			Регистр.ПартииНаличие. МОЛ				= СкладПолучатель.МОЛ;
			Регистр.ПартииНаличие. Номенклатура		= ТаблСписПартий.Номенклатура;     
			Регистр.ПартииНаличие. КодОперации		= глКО.Перемещение;
			Если ((ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_Купленный) или (ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_ВРознице))и (СкладПолучатель.РозничныйСклад = 1) Тогда
				Регистр.ПартииНаличие. СтатусПартии	= Перечисление.СтатусыПартии.Т_ВРознице; 
				Регистр.ПартииНаличие. КодОперации	= ?(Склад.РозничныйСклад = 0, глКО.ПередачаВРозницу,глКО.Перемещение);
			ИначеЕсли (ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_ВРознице) и (Склад.РозничныйСклад = 1) Тогда
				Регистр.ПартииНаличие. СтатусПартии	= ?(СкладПолучатель.РозничныйСклад = 0, Перечисление.СтатусыПартии.Т_Купленный,Перечисление.СтатусыПартии.Т_ВРознице);  
				Регистр.ПартииНаличие. КодОперации	= ?(СкладПолучатель.РозничныйСклад = 0, глКО.ВозвратИЗРозницы,глКО.Перемещение);
			Иначе
				Регистр.ПартииНаличие. СтатусПартии	= ТаблСписПартий.СтатусПартии;
			КонецЕсли;
			Регистр.ПартииНаличие. Партия			= ТаблСписПартий.Партия;
			Регистр.ПартииНаличие. ДатаПартии		= ТаблСписПартий.ДатаПартии; 
			Регистр.ПартииНаличие. Количество		= ТаблСписПартий.Количество;
			Регистр.ПартииНаличие. СуммаУпр			= ТаблСписПартий.СуммаУпр;
			Регистр.ПартииНаличие. СуммаРуб			= ТаблСписПартий.СуммаРуб;
			Регистр.ПартииНаличие. СуммаБезНДС		= ТаблСписПартий.СуммаБезНДС;
			Регистр.ПартииНаличие.ПродСтоимость = ТаблСписПартий.СуммаПрод; 
			Если СкладПолучатель.РозничныйСклад = 0 Тогда
				Регистр.ПартииНаличие.ЦенаПрод = 0;  
			Иначе
				// Для определения продажной цены надо получить строку документа
				ТаблицаДокумента.ПолучитьСтрокуПоНомеру(ТаблСписПартий.НомерСтрокиДокумента);
				Регистр.ПартииНаличие. ЦенаПрод	= ТаблицаДокумента.ЦенаПродПриход;
			КонецЕсли;
			Регистр.ПартииНаличие.ДвижениеПриходВыполнить();
		КонецЦикла;
	КонецЕсли;
	// оприходование
	СписокПараметров.Установить("Склад", СкладПолучатель);
	СписокПараметров.Установить("Фирма", ФирмаПолучатель);
	Если глПриходОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров)=0 Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Стандартная процедура проведения
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура ПроведениеПоРегистрам()
	
	Перем ТаблСписПартий, ТаблСписПартийКом;    
	Перем ВремРегистры;
	Перем ВремОстаткиТМЦ, ВремРезервыТМЦ, ВремПартииНаличие;
	Перем КодОперации;
	Перем ФирмаДляОстатковТМЦ;  
	
	// Удаление движений по регистрам.
	Для Номер = 1 По Метаданные.Регистр() Цикл
		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
	КонецЦикла;   
	
	// Для перемещений между оптовыми и между розничными складами используется 
	// код операции "Внутреннее перемещение"
	КодОперации 	= глКО.Перемещение;     
	
	// Для перемещения из опта в розницу и обратно используются соответствующие
	// коды операций
	Если (Склад.РозничныйСклад = 1) и (СкладПолучатель.РозничныйСклад = 0) тогда
		КодОперации = глКО.ВозвратИзРозницы;	
	ИначеЕсли (СкладПолучатель.РозничныйСклад = 1) и (Склад.РозничныйСклад = 0) Тогда
		КодОперации = глКО.ПередачаВРозницу;
	КонецЕсли;
	
	ТаблицаДокумента 	= глПодготовитьТаблицуДокумента(Контекст);            
	
	ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(Фирма);
	СписокПараметров	= СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
	СписокПараметров.ДобавитьЗначение(Склад,			"Склад");
	СписокПараметров.ДобавитьЗначение(Фирма,			"Фирма");
	СписокПараметров.ДобавитьЗначение(ФирмаДляОстатковТМЦ,"ФирмаДляОстатковТМЦ");
	СписокПараметров.ДобавитьЗначение(КодОперации,		"КодОперации");         
	
	Если (Склад.МОЛ <> СкладПолучатель.МОЛ) или (Фирма <> ФирмаПолучатель) или (Склад.РозничныйСклад = 1) или (СкладПолучатель.РозничныйСклад = 1) Тогда
		СпишемПартии = 1;
	Иначе     
		СпишемПартии = 0;
	КонецЕсли;
	
	ВремРегистры = СоздатьОбъект("Регистры");
	
	ВремОстаткиТМЦ = ВремРегистры.ОстаткиТМЦ;
	ВремРезервыТМЦ = ВремРегистры.РезервыТМЦ;
	глФильтрОстатковТМЦ(Контекст,ТаблицаДокумента, СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ);
	
	Если СпишемПартии = 1 Тогда
		ВремПартииНаличие = ВремРегистры.ПартииНаличие;
		глФильтрПартийТМЦ(Контекст,ТаблицаДокумента, СписокПараметров, ВремПартииНаличие);
	КонецЕсли;                                                                            
	
	Если ИтогиАктуальны() = 0 Тогда
		ВремРегистры.Актуальность(1);
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;
	
	//+++ Машунина
	ДокОснованиеВид = ?(ПустоеЗначение(ДокОснование) = 1, "", ДокОснование.Вид());
	
	// Основной принцип, списываем сколько указали, а приходуем ТОЛЬКО совпадающие
	
	Если ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=1)) и (ДокОснованиеВид<>"ПеремещениеТМЦ_Розница") Тогда	
		// 1-вариант со склада отгрузили, но еще не приняли ничего
		Если ТоварДоступенДляПеремещения(ТаблицаДокумента) = 0 Тогда
			сообщить("Недостаточно свободного остатка запрошенных товаров!","!");
			СтатусВозврата(0); 	
			Возврат;
		КонецЕсли;
		Если глСписаниеОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
			Возврат;
		КонецЕсли;
		Если СпишемПартии = 1 Тогда
			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
		КонецЕсли;
		
	ИначеЕсли ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=0)) и (ДокОснованиеВид<>"ПеремещениеТМЦ_Розница") Тогда	
		// 2-вариант со склада отгрузили, и приняли сколько то
		Если ТоварДоступенДляПеремещения(ТаблицаДокумента) = 0 Тогда
			сообщить("Недостаточно свободного остатка запрошенных товаров!","!");
			СтатусВозврата(0); 	
			Возврат;
		КонецЕсли;
		Если глСписаниеОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
			Возврат;
		КонецЕсли;
		Если СпишемПартии = 1 Тогда
			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
		КонецЕсли;
		// оставим только правильные строки	
		ТЗ2  = СоздатьОбъект("ТаблицаЗначений");
		ТСП2 = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаДокумента.Выгрузить(ТЗ2);
		ТаблСписПартий.Выгрузить(ТСП2);
		ТЗ2.УдалитьСтроки();
		ТСП2.УдалитьСтроки();
		ТаблицаДокумента.ВыбратьСтроки();
		Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл	
			Если ТаблицаДокумента.Количество=ТаблицаДокумента.Количество2 Тогда
				ТЗ2.НоваяСтрока();
				ТЗ2.НомерСтрокиДокумента = ТаблицаДокумента.номерСтрокиДокумента;
				ТЗ2.Номенклатура   = ТаблицаДокумента.Номенклатура;
				ТЗ2.Количество     = ТаблицаДокумента.Количество;
				ТЗ2.Количество2    = ТаблицаДокумента.Количество2;
				ТЗ2.Единица	       = ТаблицаДокумента.Единица;	
				ТЗ2.Коэффициент	   = ТаблицаДокумента.Коэффициент;
				ТЗ2.Цена           = ТаблицаДокумента.Цена;
				ТЗ2.Сумма	       = ТаблицаДокумента.Сумма; 
				ТЗ2.СтавкаНДС      = ТаблицаДокумента.СтавкаНДС;
				ТЗ2.СуммаНДС       = ТаблицаДокумента.СуммаНДС;
				ТЗ2.СтавкаНП       = ТаблицаДокумента.СтавкаНП;
				ТЗ2.СуммаНП	       = ТаблицаДокумента.СуммаНП;	
				ТЗ2.Партия         = ТаблицаДокумента.Партия; 
				ТЗ2.СуммаУпр       = ТаблицаДокумента.СуммаУпр;
				ТЗ2.СуммаРуб       = ТаблицаДокумента.СуммаРуб; 
				ТЗ2.СкидкаРуб      = ТаблицаДокумента.СкидкаРуб; 
				ТЗ2.ПродСтоимость  = ТаблицаДокумента.ПродСтоимость;
				ТЗ2.ЦенаПрод       = ТаблицаДокумента.ЦенаПрод; 
				ТЗ2.ЦенаПродПриход = ТаблицаДокумента.ЦенаПродПриход;
			КонецЕсли;
		КонецЦикла;
		ТаблСписПартий.ВыбратьСтроки();
		Ном=0;
		Пока ТаблСписПартий.ПолучитьСтроку()=1 Цикл	
			НомерСтрокиДокумента = ТаблСписПартий.НомерСтрокиДокумента;
			Если ТЗ2.НайтиЗначение(НомерСтрокиДокумента,0,1) = 1 Тогда
				Ном = Ном+1;
				ТСП2.НоваяСтрока();
				ТСП2.НомерСтроки          = Ном;	
				ТСП2.Фирма                = ТаблСписПартий.Фирма; 
				ТСП2.МОЛ	              = ТаблСписПартий.МОЛ;
				ТСП2.Номенклатура         = ТаблСписПартий.Номенклатура; 
				ТСП2.СтатусПартии         = ТаблСписПартий.СтатусПартии;
				ТСП2.Партия	              = ТаблСписПартий.Партия; 
				ТСП2.ДатаПартии           = ТаблСписПартий.ДатаПартии; 
				ТСП2.ЦенаПрод	          = ТаблСписПартий.ЦенаПрод;
				ТСП2.Количество	          = ТаблСписПартий.Количество; 
				ТСП2.СуммаУпр             = ТаблСписПартий.СуммаУпр; 
				ТСП2.СуммаРуб             = ТаблСписПартий.СуммаРуб;
				ТСП2.СуммаБезНДС          = ТаблСписПартий.СуммаБезНДС; 
				ТСП2.СтавкаНДС            = ТаблСписПартий.СтавкаНДС; 
				ТСП2.СтавкаНП             = ТаблСписПартий.СтавкаНП;
				ТСП2.СуммаПрод            = ТаблСписПартий.СуммаПрод; 
				ТСП2.СуммаПродРуб         = ТаблСписПартий.СуммаПродРуб;	
				ТСП2.СуммаПродУпр         = ТаблСписПартий.СуммаПродУпр;
				ТСП2.СуммаДокРуб          = ТаблСписПартий.СуммаДокРуб; 
				ТСП2.НДСПрод	          = ТаблСписПартий.НДСПрод; 
				ТСП2.НППрод               = ТаблСписПартий.НППрод;
				ТСП2.ДоговорКомитента     = ТаблСписПартий.ДоговорКомитента; 
				ТСП2.НомерСтрокиДокумента = ТаблСписПартий.НомерСтрокиДокумента;
				ТСП2.СкидкаРуб            = ТаблСписПартий.СкидкаРуб;
			КонецЕсли;
		КонецЦикла;
		//Запишем, что получилось :) на склад получатель
		ПереместитьНаСклад(ТСП2,ТЗ2,СписокПараметров,СпишемПартии);	
		
		//+++ Машунина 29/01/08 (добавленно)
		//Это значит - что у нас документ корректировка	
	ИначеЕсли (Набран=1)  и (ДокОснованиеВид="ПеремещениеТМЦ_Розница") Тогда	
		
		// соберем всю цепочку перемещения  
		СписокЦепочки = СоздатьОбъект("СписокЗначений");
		дДокОсн = ДокОснование;
		Пока ПустоеЗначение(дДокОсн) = 0 Цикл
			Если дДокОсн.Вид() = "ПеремещениеТМЦ_Розница" Тогда 		 	
				СписокЦепочки.ДобавитьЗначение(дДокОсн);	
				дДокОсн = дДокОсн.ДокОснование; 		 	
			Иначе 
				дДокОсн = ""; 		 	
			КонецЕсли; 
		КонецЦикла;
		
		// отсторнируем все что нужно и при этом получим что всетаки надо снять со склада		
		ТЗ_Состыковки	= СоздатьОбъект("ТаблицаЗначений");
		ТаблицаДокумента.Выгрузить(ТЗ_Состыковки,,,"Номенклатура,Количество");
		ТЗ_Состыковки.НоваяКолонка("СнятьДополнительно","Число");
		ДвиженияОстатки = СоздатьОбъект("ТаблицаЗначений");
		ДвиженияПартии  = СоздатьОбъект("ТаблицаЗначений");
		
		Если СторнированиеПроводок(СписокЦепочки, ТЗ_Состыковки,ДвиженияПартии,ДвиженияОстатки) = 0 Тогда
			Сообщить("Невозможно восстановить списаное ранее количество товара! Проведение невозможно!","!");
			СтатусВозврата(0);
			НеПроводитьДокумент();
			Возврат;
		КонецЕсли;             
		// установим только нужное количество к списанию и спишем
		ТаблицаДокумента.НоваяКолонка("НовыеПартии","Число");
		ТаблицаДокумента.ВыбратьСтроки();
		Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
			ТаблицаДокумента.НовыеПартии = ТаблицаДокумента.Количество;   	
			ТаблицаДокумента.Количество  = 0;   	
		КонецЦикла;	
		
		ТЗ_Состыковки.ВыбратьСтроки();
		Пока ТЗ_Состыковки.ПолучитьСтроку() = 1 Цикл
			Если ТЗ_Состыковки.СнятьДополнительно>0 Тогда
				КоэфСн = ТЗ_Состыковки.СнятьДополнительно/ТЗ_Состыковки.Количество;
				тС = 0;
				Если ТаблицаДокумента.НайтиЗначение(ТЗ_Состыковки.Номенклатура,тС, "Номенклатура") > 0 Тогда
					ТаблицаДокумента.УстановитьЗначение(тС, "Количество", ТЗ_Состыковки.СнятьДополнительно);
					ТаблицаДокумента.УстановитьЗначение(тС, "СуммаУпр", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"СуммаУпр")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "СуммаРуб", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"СуммаРуб")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "СкидкаРуб", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"СкидкаРуб")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "Сумма", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"Сумма")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "СуммаНДС", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"СуммаНДС")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "СуммаНП", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"СуммаНП")) );
					ТаблицаДокумента.УстановитьЗначение(тС, "ПродСтоимость", (КоэфСн*ТаблицаДокумента.ПолучитьЗначение(тС,"ПродСтоимость")) );  
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		Если ТоварДоступенДляПеремещения(ТаблицаДокумента) = 0 Тогда
			сообщить("Недостаточно свободного остатка запрошенных товаров!","!");
			СтатусВозврата(0); 	
			Возврат;
		КонецЕсли;
		Если глСписаниеОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
			Возврат;
		КонецЕсли;
		Если СпишемПартии = 1 Тогда
			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
		КонецЕсли;
		
		// 2-вариант, где мы должны приходывать только совпадающие
		Если ПустоеЗначение(Принят_к_учету)=0 Тогда	
			ТабИтогов = СоздатьОбъект("ТаблицаЗначений");
			ТаблСписПартий.Выгрузить(ТабИтогов,,,"Номенклатура,Количество");
			ТабИтогов.Свернуть("Номенклатура","Количество"); 
			  
			ДвиженияПартии.НоваяКолонка("КодПартии","Число");
			ДвиженияПартии.ВыбратьСтроки();
			Пока ДвиженияПартии.ПолучитьСтроку() = 1 Цикл
				ДвиженияПартии.КодПартии = ДвиженияПартии.Партия.Код;	  				
			КонецЦикла;
				
			ТаблицаДокумента.ВыбратьСтроки();
			Пока ТаблицаДокумента.ПолучитьСтроку() = 1 Цикл
				Если ТаблицаДокумента.НовыеПартии <> ТаблицаДокумента.Количество2 Тогда
					ТаблицаДокумента.Количество     = 0;
					ТаблицаДокумента.Количество2    = 0;
					ТаблицаДокумента.Цена           = 0; 
					ТаблицаДокумента.Сумма	        = 0; 
					ТаблицаДокумента.СуммаНДС       = 0; 
					ТаблицаДокумента.СуммаНП	    = 0;	
					ТаблицаДокумента.Партия         = ""; 
					ТаблицаДокумента.СуммаУпр       = 0;
					ТаблицаДокумента.СуммаРуб       = 0;
					ТаблицаДокумента.СкидкаРуб      = 0; 
					ТаблицаДокумента.ПродСтоимость  = 0;
					ТаблицаДокумента.ЦенаПрод       = 0;
					ТаблицаДокумента.ЦенаПродПриход = 0;
					// сразу уберем партии
					НомерНулевойСтроки = ТаблицаДокумента.НомерСтрокиДокумента;
					тС = 0;
					Пока ТаблСписПартий.НайтиЗначение(НомерНулевойСтроки,тС,"НомерСтрокиДокумента")=1 Цикл	
						ТаблСписПартий.УдалитьСтроку(тС);	
						тС = 0;
					КонецЦикла;	
				Иначе                        
					ТаблицаДокумента.Количество     = ТаблицаДокумента.НовыеПартии;
					тС   = 0;                                                                                  
					Итог = 0;
					Если ТабИтогов.НайтиЗначение(ТаблицаДокумента.Номенклатура, тС, "Номенклатура") > 0 Тогда
						Итог = ТабИтогов.ПолучитьЗначение(тС, "Количество");	
					КонецЕсли;	
					Если Итог < ТаблицаДокумента.Количество Тогда
						НабратьПартииНаРазницу((ТаблицаДокумента.Количество-Итог),ДвиженияПартии, ТаблицаДокумента.Номенклатура);	
					КонецЕсли;	
				КонецЕсли;	                                    
			КонецЦикла;	          
			ПереместитьНаСклад(ТаблСписПартий,ТаблицаДокумента,СписокПараметров,1);	
		КонецЕсли;
	КонецЕсли;
	Спр = СоздатьОбъект("Справочник.Номенклатура");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Спр.НайтиЭлемент(Номенклатура);
		Если СкладПолучатель.Магазин=1 Тогда
			Если сокрЛП(СкладПолучатель)="Энгельса" Тогда
				Спр.ПризнакОтбораЭнгельса=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Некрасова" Тогда
				Спр.ПризнакОтбораНекрасова=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Стахановцев" Тогда
				Спр.ПризнакОтбораСтахановцев=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Савушкина" Тогда
				Спр.ПризнакОтбораСавушкина=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Ленсовета" Тогда
				Спр.ПризнакОтбораЛенсовета=1;
			//ИначеЕсли сокрЛП(СкладПолучатель)="Антонова-Овсеенко" Тогда
			//	Спр.ПризнакОтбораАнтоноваОвсеенко=1; 
			ИначеЕсли сокрЛП(СкладПолучатель)="Коллонтай" Тогда
				Спр.ПризнакОтбораКоллонтай=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Радищева" Тогда
				Спр.ПризнакОтбораРадищева=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Туристская" Тогда
				Спр.ПризнакОтбораТуристская=1;
			ИначеЕсли сокрЛП(СкладПолучатель)="Ленинский" Тогда
				Спр.ПризнакОтбораЛенинский=1;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ПроведениеПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(ВидыДвижений)
	Перем чО,мО,сО,чТ,мТ,сТ;
	
	// Проверка заполненности обязательных реквизитов.
	Если глВсеРеквизитыДокументаЗаполнены(Контекст,"Фирма,ФирмаПолучатель,Склад,СкладПолучатель,Валюта")=0 Тогда
		Возврат;
	КонецЕсли;           
	
	Если (Фирма.ЮрЛицо <> ФирмаПолучатель.ЮрЛицо)	Тогда     
		глНеПроводить(Контекст,"Нельзя перемещать ТМЦ между фирмами,|имеющими различные юридические лица!");
		Возврат;
	КонецЕсли;
	
	//++ Машунина 29.01.2008 
	ДокОснованиеВид = ?(ПустоеЗначение(ДокОснование) = 1, "", ДокОснование.Вид());
	Если (Набран=1)  и (ДокОснованиеВид = "ПеремещениеТМЦ_Розница") Тогда	
		Если ДокОснование.Проведен()=0 Тогда	
			//док.основание должен быть проведен, и находится раньше корректив.
			глНеПроводить(Контекст,"Сначала проведите документ основание!!");
			Возврат;
		КонецЕсли;             
		Если (ДокОснование.ДатаДок = ДатаДок) Тогда
			Док = СоздатьОбъект("Документ." + ДокОснование.Вид());
			Если Док.НайтиДокумент(ДокОснование) = 1 Тогда
				Док.ПолучитьВремя(чО,мО,сО);
			КонецЕсли; 
			Док = СоздатьОбъект("Документ." + ТекущийДокумент().Вид());
			Если Док.НайтиДокумент(ТекущийДокумент()) = 1 Тогда
				Док.ПолучитьВремя(чТ,мТ,сТ);
			КонецЕсли; 
			Если (чТ<чО) или ((чТ=чО) и (мТ<мО)) или ((чТ=чО) и (мТ=мО) и (сТ<сО)) Тогда
				глНеПроводить(Контекст,"Документ основание находится позже корректировки! Проведение невозможно");
				Возврат;
			КонецЕсли; 
		ИначеЕсли (ДокОснование.ДатаДок > ДатаДок)  Тогда
			глНеПроводить(Контекст,"Документ основание находится позже корректировки! Проведение невозможно");
			Возврат;
		КонецЕсли;      
		Если (Фирма<>ДокОснование.Фирма) или (Склад<>ДокОснование.Склад) или (ФирмаПолучатель<>ДокОснование.ФирмаПолучатель) или (СкладПолучатель<>ДокОснование.СкладПолучатель) Тогда
			глНеПроводить(Контекст,"Не совпадение реквизитов шапки с документом-основанием! Проведение невозможно");
			Возврат;
		КонецЕсли;      
	КонецЕсли;      
	//-- Машунина 29.01.2008
	
	// Проведение по регистрам оперативного учета.	
	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
		ПроведениеПоРегистрам();
		Если СтатусВозврата() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;  
	
	 Если (ДокОснование.Вид() = "ЗаявкаПокупателя") Тогда
		Если (ДокОснование.ДокОснование.Вид() = "ЗаявкаКлиентаРозница") Тогда
			Если ДокОснование.ВидОперации = Перечисление.ВидыОперацийЗаявок.НаСклад Тогда
				//Если ДокОснование.Отгружено = 1 Тогда
					ВыбратьСтроки();
					Пока ПолучитьСтроку() = 1 Цикл
						Регистр.ЗаявкиНаСклад.Номенклатура 	= Номенклатура;
						Регистр.ЗаявкиНаСклад.Заявка 	   	= ДокОснование.ДокОснование;
						Регистр.ЗаявкиНаСклад.ЗаявкаНаСклад = ДокОснование;
						Регистр.ЗаявкиНаСклад.КоличествоОбработано = Количество;
						Регистр.ЗаявкиНаСклад.ДвижениеРасходВыполнить();
						
						Регистр.ЗаявкиНаСкладОтгружено.Номенклатура 		= Номенклатура;
						Регистр.ЗаявкиНаСкладОтгружено.Заявка 	   			= ДокОснование.ДокОснование;
						Регистр.ЗаявкиНаСкладОтгружено.ЗаявкаНаСклад 		= ДокОснование;
						Регистр.ЗаявкиНаСкладОтгружено.КоличествоОтгружено 	= Количество;
						Регистр.ЗаявкиНаСкладОтгружено.ДвижениеВыполнить();
					КонецЦикла;
				//КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	глПриПроведении(Контекст, ВидыДвижений);
	
КонецПроцедуры //ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения()
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		Сообщить("Вы не можете отменять проведение данного документа","!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


//******** ГАВ 23/03/2008 - закомментировал старый код + взял то, что было в файле
//#ЗагрузитьИзФайла E:\BASES\ОБЩАЯ 2007\Modules\ПеремещениеТМЦ_Розница.txt
////////////////////////////////////////////////////////////////////////////////////
////// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//////
////// *****************************************************************************
//////      
////
//////++Ерошенко 27.03.2007
////// добавлено для контроля резервов товара при перемещении... 
////Функция ТоварДоступенДляПеремещения()
////	
////	Ит = 1;
////	
////	СписТов = СоздатьОбъект("СписокЗначений"); 
////	ТЗ =      СоздатьОбъект("ТаблицаЗначений"); 
////	ТЗРез =   СоздатьОбъект("ТаблицаЗначений");
////	
////	ВыгрузитьТабличнуюЧасть(СписТов,"Номенклатура");
////	
////	Если ДатаДок > ПолучитьДатуТА() Тогда
////		ДатаС = ПолучитьДатуТА();
////	Иначе
////		ДатаС = ДатаДок;
////	КонецЕсли;
////	ДатаПо =  ДатаС;  
////	
////	Запрос = СоздатьОбъект("Запрос");  
////	ТекстЗапроса = "
////	|Период с ДатаС по ДатаПо;
////	|Номенклатура = Регистр.ОстаткиТМЦ.Номенклатура;
////	|Скл =          Регистр.ОстаткиТМЦ.Склад;
////	|Количество =   Регистр.ОстаткиТМЦ.Количество;
////	|Функция Кол =  КонОст(Количество);
////	|Группировка Номенклатура Без Групп;  
////	|Условие(Скл =  Склад);
////	|Условие(Номенклатура в СписТов);
////	|Без Итогов;";
////	Запрос.Выполнить(ТекстЗапроса);
////	
////	Запрос.Выгрузить(ТЗ); 
////	ТЗ.НоваяКолонка("Резерв","Число",15,5);  
////	
////	Запрос = СоздатьОбъект("Запрос");  
////	ТекстЗапроса = "
////	|Период с ДатаС по ДатаПо;
////	|Номенклатура = Регистр.РезервыТМЦ2.Номенклатура;
////	|Скл =          Регистр.РезервыТМЦ2.Склад;
////	|Количество =   Регистр.РезервыТМЦ2.Количество;
////	|Функция Кол =  КонОст(Количество);
////	|Группировка Номенклатура Без Групп;  
////	|Условие(Скл =  Склад);
////	|Условие(Номенклатура в СписТов);
////	|Без Итогов;";
////	Запрос.Выполнить(ТекстЗапроса);
////	
////	Запрос.Выгрузить(ТЗРез);   
////	
////	ТЗРез.ВыбратьСтроки();
////	Пока ТЗРез.ПолучитьСтроку() = 1 Цикл  
////		Стр = "";
////		Если ТЗ.НайтиЗначение(ТЗРез.Номенклатура,Стр,"Номенклатура") = 1 Тогда
////	        ТЗ.УстановитьЗначение(Стр,"Резерв",ТЗРез.Кол);
////		КонецЕсли; 
////	КонецЦикла;
////	
////	ВыбратьСтроки();
////	Пока ПолучитьСтроку() = 1 Цикл   
////		Стро =  "";  
////		СвОст = 0;
////		Если ТЗ.НайтиЗначение(Номенклатура,Стро,"Номенклатура") = 1 Тогда
////			ТекОст = ТЗ.ПолучитьЗначение(Стро,"Кол");
////			ТекРез = ТЗ.ПолучитьЗначение(Стро,"Резерв");
////			СвОст =  ТекОст - ТекРез;
////		    Если Количество > СвОст Тогда
////				Сообщить("Товара '"+Номенклатура+"' недостаточно: запрошено "+Количество+", на остатке "+ТекОст+?(ТекРез = 0,"",", из них "+ТекРез+" в резерве"));
////			    Ит = 0;
////			КонецЕсли;
////		Иначе
////			Сообщить("Товара '"+Номенклатура+"' нет на остатке"); 
////			Ит = 0;
////		КонецЕсли;
////	КонецЦикла;
////	
////	Возврат Ит;       
////	
////КонецФункции
//////--Ерошенко
////
//////**********************************************************
////
////Процедура ПроверьВозможностьРезерва()
//////	
////КонецПроцедуры
////
////Процедура ПереместитьНаСклад(ТаблСписПартий,ТаблицаДокумента,СписокПараметров,СписалиПартии)     
////	
////	Если СписалиПартии = 1 Тогда
////		ТаблСписПартий.ВыбратьСтроки();
////		Пока  ТаблСписПартий.ПолучитьСтроку()=1 Цикл
////			//измерения
////			Регистр.ПартииНаличие. Фирма 			= ФирмаПолучатель;
////			Регистр.ПартииНаличие. МОЛ				= СкладПолучатель.МОЛ;
////			Регистр.ПартииНаличие. Номенклатура		= ТаблСписПартий.Номенклатура;     
////			Регистр.ПартииНаличие. КодОперации		= глКО.Перемещение;
////			Если ((ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_Купленный) или (ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_ВРознице))и (СкладПолучатель.РозничныйСклад = 1) Тогда
////				Регистр.ПартииНаличие. СтатусПартии	= Перечисление.СтатусыПартии.Т_ВРознице; 
////				Если Склад.РозничныйСклад = 0 Тогда
////					Регистр.ПартииНаличие. КодОперации	= глКО.ПередачаВРозницу;
////				Иначе
////					Регистр.ПартииНаличие. КодОперации	= глКО.Перемещение;
////				КонецЕсли;
////			ИначеЕсли (ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_ВРознице) и (Склад.РозничныйСклад = 1) Тогда
////				Если СкладПолучатель.РозничныйСклад = 0 Тогда
////					Регистр.ПартииНаличие. СтатусПартии	= Перечисление.СтатусыПартии.Т_Купленный;  
////					Регистр.ПартииНаличие. КодОперации	= глКО.ВозвратИЗРозницы;
////				Иначе
////					Регистр.ПартииНаличие. СтатусПартии	= Перечисление.СтатусыПартии.Т_ВРознице;  
////					Регистр.ПартииНаличие. КодОперации	= глКО.Перемещение;
////				КонецЕсли;
////		    Иначе
////				Регистр.ПартииНаличие. СтатусПартии	= ТаблСписПартий.СтатусПартии;
////			КонецЕсли;
////			Регистр.ПартииНаличие. Партия			= ТаблСписПартий.Партия;
////			Регистр.ПартииНаличие. ДатаПартии		= ТаблСписПартий.ДатаПартии; 
////			
////			// ресурсы
////			Регистр.ПартииНаличие. Количество		= ТаблСписПартий.Количество;
////			Регистр.ПартииНаличие. СуммаУпр			= ТаблСписПартий.СуммаУпр;
////			Регистр.ПартииНаличие. СуммаРуб			= ТаблСписПартий.СуммаРуб;
////			Регистр.ПартииНаличие. СуммаБезНДС		= ТаблСписПартий.СуммаБезНДС;
////			// реквизиты                                          
////			
////			Регистр.ПартииНаличие.ПродСтоимость = ТаблСписПартий.СуммаПрод; 
////			
////			Если СкладПолучатель.РозничныйСклад = 0 Тогда
////				Регистр.ПартииНаличие.ЦенаПрод = 0;  
////			Иначе
////				// Для определения продажной цены надо получить строку документа
////				ТаблицаДокумента.ПолучитьСтрокуПоНомеру(ТаблСписПартий.НомерСтрокиДокумента);
////				Регистр.ПартииНаличие. ЦенаПрод			= ТаблицаДокумента.ЦенаПродПриход;
////			КонецЕсли;
////			
////			Регистр.ПартииНаличие.ДвижениеПриходВыполнить();
////		КонецЦикла;
////	КонецЕсли;
////	
////	// оприходование
////	СписокПараметров.Установить("Склад", СкладПолучатель);
////	СписокПараметров.Установить("Фирма", ФирмаПолучатель);
////	
////	Если глПриходОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров)=0 Тогда
////		Возврат;
////	КонецЕсли;
////	                                  
////КонецПроцедуры // ПереместитьНаСклад()
////
////Функция ищи_(а,ТЗ_врем)
////	ТЗ_врем.ВыбратьСтроки();
////	Пока ТЗ_врем.ПолучитьСтроку()=1 Цикл
////		если ТЗ_врем.НомерСтроки=а Тогда
////			Рез=1;
////			Возврат Рез;
////			Прервать;
////		КонецЕсли;
////	КонецЦикла;
////	Рез=0;
////	возврат Рез;
////КонецФункции
////
////Функция ищи_2(а,ТЗ_врем)
////	ТЗ_врем.ВыбратьСтроки();
////	Пока ТЗ_врем.ПолучитьСтроку()=1 Цикл
////		если ТЗ_врем.Номенклатура=а Тогда
////			Рез=1;
////			Возврат Рез;
////			Прервать;
////		КонецЕсли;
////	КонецЦикла;
////	Рез=0;
////	возврат Рез;
////КонецФункции
////
//////******************************************************************************
////// ПроведениеПоРегистрам()
//////
////// Параметры:
//////  Нет.
//////
////// Возвращаемое значение:
//////  Нет.
//////
////// Описание:
//////  Проведение по регистрам оперативного учета.
//////
////Процедура ПроведениеПоРегистрам()
////	
////	Перем ТаблСписПартий, ТаблСписПартийКом;    
////	Перем ВремРегистры;
////	Перем ВремОстаткиТМЦ, ВремРезервыТМЦ, ВремПартииНаличие;
////	Перем КодОперации;
////	Перем ФирмаДляОстатковТМЦ;
////	
////	// Удаление движений по регистрам.
////	Для Номер = 1 По Метаданные.Регистр() Цикл
////		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
////	КонецЦикла;
////   	
////	// Для перемещений между оптовыми и между розничными складами используется 
////	// код операции "Внутреннее перемещение"
////	КодОперации 	= глКО.Перемещение;     
////	
////	//ПроверьВозможностьРезерва();	//Если товар на резерве, то его перемещать нельзя
////	
////	// Для перемещения из опта в розницу и обратно используются соответствующие
////	// коды операций
////	Если (Склад.РозничныйСклад = 1) и (СкладПолучатель.РозничныйСклад = 0) тогда
////		КодОперации = глКО.ВозвратИзРозницы;	
////	ИначеЕсли (СкладПолучатель.РозничныйСклад = 1) и (Склад.РозничныйСклад = 0) Тогда
////	    КодОперации = глКО.ПередачаВРозницу;
////	КонецЕсли;
////	
////	ТаблицаДокумента 	= глПодготовитьТаблицуДокумента(Контекст);            
////	
////    ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(Фирма);
////	СписокПараметров	= СоздатьОбъект("СписокЗначений");
////	
////	СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
////	СписокПараметров.ДобавитьЗначение(Склад,			"Склад");
////	СписокПараметров.ДобавитьЗначение(Фирма,			"Фирма");
////	СписокПараметров.ДобавитьЗначение(ФирмаДляОстатковТМЦ,"ФирмаДляОстатковТМЦ");
////	СписокПараметров.ДобавитьЗначение(КодОперации,		"КодОперации");         
////	
////	Если (Склад.МОЛ 	<> СкладПолучатель.МОЛ)  
////	или  (Фирма <> ФирмаПолучатель) или (Склад.РозничныйСклад = 1) или (СкладПолучатель.РозничныйСклад = 1)
////	Тогда
////		СпишемПартии = 1;
////	Иначе     
////		СпишемПартии = 0;
////	КонецЕсли;
////	
////	ВремРегистры = СоздатьОбъект("Регистры");
////	
////	ВремОстаткиТМЦ = ВремРегистры.ОстаткиТМЦ;
////	ВремРезервыТМЦ = ВремРегистры.РезервыТМЦ;
////	глФильтрОстатковТМЦ(Контекст,ТаблицаДокумента, СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ);
////	
////	Если СпишемПартии = 1 Тогда
////		ВремПартииНаличие = ВремРегистры.ПартииНаличие;
////		глФильтрПартийТМЦ(Контекст,ТаблицаДокумента, СписокПараметров, ВремПартииНаличие);
////	КонецЕсли;                                                                            
////		
////	Если ИтогиАктуальны() = 0 Тогда
////		ВремРегистры.Актуальность(1);
////		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
////	КонецЕсли;
////	
////	////В партии запишем только тот товар, который не имеет расхождений, все расхождения НИКОГДА не будут записаны, пока не будут выравнены
////
////	
////	
////	Если ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=1)) и (ДокОснование.Вид()<>"ПеремещениеТМЦ_Розница") Тогда	//Тут спишем всё что можно (Этап 1)
////		// остатки ТМЦ
////		Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
////			Возврат;
////		КонецЕсли;
////		// партии ТМЦ
////		Если СпишемПартии = 1 Тогда
////			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
////		КонецЕсли;
////	ИначеЕсли ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=0)) и (ДокОснование.Вид()<>"ПеремещениеТМЦ_Розница") Тогда	//Тут нужно всё списать и потом записать "только чистые" позиции
////		// остатки ТМЦ
////		Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
////			Возврат;
////		КонецЕсли;
////		// партии ТМЦ
////		Если СпишемПартии = 1 Тогда
////			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
////		КонецЕсли;
////		ТЗ2		= СоздатьОбъект("ТаблицаЗначений");
////		ТСП2	= СоздатьОбъект("ТаблицаЗначений");
////		ТаблицаДокумента.Выгрузить(ТЗ2);
////        ТаблСписПартий.Выгрузить(ТСП2);
////		ТЗ2.УдалитьСтроки();
////		ТСП2.УдалитьСтроки();
////		ТаблицаДокумента.ВыбратьСтроки();
////		пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл	//Выкинем лишнее в ОстаткахТМЦ
////			Если ТаблицаДокумента.Количество=ТаблицаДокумента.Количество2 Тогда
////				тз2.НоваяСтрока();
////				ТЗ2.НомерСтрокиДокумента = ТаблицаДокумента.номерСтрокиДокумента; ТЗ2.Номенклатура = ТаблицаДокумента.Номенклатура;
////				ТЗ2.Количество = ТаблицаДокумента.Количество; ТЗ2.Количество2 = ТаблицаДокумента.Количество2;
////				ТЗ2.Единица	= ТаблицаДокумента.Единица;	ТЗ2.Коэффициент	= ТаблицаДокумента.Коэффициент;
////				ТЗ2.Цена = ТаблицаДокумента.Цена; ТЗ2.Сумма	= ТаблицаДокумента.Сумма; ТЗ2.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
////				ТЗ2.СуммаНДС = ТаблицаДокумента.СуммаНДС; ТЗ2.СтавкаНП = ТаблицаДокумента.СтавкаНП;
////				ТЗ2.СуммаНП	= ТаблицаДокумента.СуммаНП;	ТЗ2.Партия = ТаблицаДокумента.Партия; ТЗ2.СуммаУпр = ТаблицаДокумента.СуммаУпр;
////				ТЗ2.СуммаРуб = ТаблицаДокумента.СуммаРуб; ТЗ2.СкидкаРуб = ТаблицаДокумента.СкидкаРуб; ТЗ2.ПродСтоимость = ТаблицаДокумента.ПродСтоимость;
////				ТЗ2.ЦенаПрод = ТаблицаДокумента.ЦенаПрод; ТЗ2.ЦенаПродПриход = ТаблицаДокумента.ЦенаПродПриход;
////			КонецЕсли;
////		КонецЦикла;
////		
////		ТаблСписПартий.ВыбратьСтроки();
////		Ном=0;
////		пока ТаблСписПартий.ПолучитьСтроку()=1 Цикл	//Выкинем лишнее в ПартииТМЦ
////			а=ТаблСписПартий.НомерСтрокиДокумента;
////			х=ПолучитьПустоеЗначение(а);
////			если ТЗ2.НайтиЗначение(а,х,1)=1 Тогда
////				ТСП2.НоваяСтрока();
////				Ном=Ном+1;
////				ТСП2.НомерСтроки = Ном;	ТСП2.Фирма = ТаблСписПартий.Фирма; ТСП2.МОЛ	= ТаблСписПартий.МОЛ;
////				ТСП2.Номенклатура = ТаблСписПартий.Номенклатура; ТСП2.СтатусПартии = ТаблСписПартий.СтатусПартии;
////				ТСП2.Партия	= ТаблСписПартий.Партия; ТСП2.ДатаПартии = ТаблСписПартий.ДатаПартии; ТСП2.ЦенаПрод	= ТаблСписПартий.ЦенаПрод;
////				ТСП2.Количество	= ТаблСписПартий.Количество; ТСП2.СуммаУпр = ТаблСписПартий.СуммаУпр; ТСП2.СуммаРуб = ТаблСписПартий.СуммаРуб;
////				ТСП2.СуммаБезНДС = ТаблСписПартий.СуммаБезНДС; ТСП2.СтавкаНДС = ТаблСписПартий.СтавкаНДС; ТСП2.СтавкаНП = ТаблСписПартий.СтавкаНП;
////				ТСП2.СуммаПрод = ТаблСписПартий.СуммаПрод; ТСП2.СуммаПродРуб = ТаблСписПартий.СуммаПродРуб;	ТСП2.СуммаПродУпр = ТаблСписПартий.СуммаПродУпр;
////				ТСП2.СуммаДокРуб = ТаблСписПартий.СуммаДокРуб; ТСП2.НДСПрод	= ТаблСписПартий.НДСПрод; ТСП2.НППрод = ТаблСписПартий.НППрод;
////				ТСП2.ДоговорКомитента = ТаблСписПартий.ДоговорКомитента; ТСП2.НомерСтрокиДокумента = ТаблСписПартий.НомерСтрокиДокумента;
////				ТСП2.СкидкаРуб = ТаблСписПартий.СкидкаРуб;
////			КонецЕсли;
////		КонецЦикла;
////		//Запишем, что получилось :) на склад получатель
////		ПереместитьНаСклад(ТСП2,ТЗ2,СписокПараметров,СпишемПартии);	
////	ИначеЕсли ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=1)) и (ДокОснование.Вид()="ПеремещениеТМЦ_Розница") Тогда	//Это значит - что у нас документ корректировка
////		Если ДокОснование.Проведен()=0 Тогда	//т.к. мы хапаем регистры по предыдущему документу, то документ основание должен быть проведён!!!
////			Сообщить("Сначала проведите документ основание!");
////			СтатусВозврата(0);
////			НеПроводитьДокумент();
////			Возврат;
////		КонецЕсли;
////		ТЗ_врем	= СоздатьОбъект("ТаблицаЗначений");
////		ВыгрузитьТабличнуюЧасть(ТЗ_врем);
////		ТЗ_врем.УдалитьСтроки();
////		ТЗ_врем.НоваяКолонка("НомерСтроки_","число",5,0);	//Для корректного списания остатков
////		ном=0;
////		ДокОснование.ВыбратьСтроки();	//Найдем все несостыковавшиеся строки
////		Пока ДокОснование.ПолучитьСтроку()=1 Цикл
////			ном=ном+1;
////			если ДокОснование.Количество<>ДокОснование.Количество2 Тогда
////				ТЗ_врем.НоваяСтрока();
////				ТЗ_врем.НомерСтроки_	= ном;
////				ТЗ_врем.Номенклатура	= ДокОснование.Номенклатура;
////				ТЗ_врем.Количество		= ДокОснование.Количество;
////				ТЗ_врем.Количество2		= ДокОснование.Количество2;
////			КонецЕсли;
////		КонецЦикла;
////		рег	=СоздатьОбъект("Регистр.ПартииНаличие");
////		рег2=СоздатьОбъект("Регистр.ОстаткиТМЦ");
////		НачатьТранзакцию();
////		рег.ВыбратьДвиженияДокумента(ДокОснование);
////		рег2.ВыбратьДвиженияДокумента(ДокОснование);
////		кол=0;
////		пока рег.ПолучитьДвижение()=1 Цикл	//Подготовим таблицу "сторно"
////			а	= рег.НомерСтроки();
////			х	= ПолучитьПустоеЗначение(а);
////			если (ТЗ_врем.НайтиЗначение(а,х,"НомерСтроки_")=1) и (рег.расход=1) Тогда	//Значит это наше - надо его сторнировать
////				Регистр.ПартииНаличие.Фирма 			= рег.Фирма;
////				Регистр.ПартииНаличие.МОЛ				= рег.МОЛ;
////				Регистр.ПартииНаличие.Номенклатура		= рег.Номенклатура;     
////				Регистр.ПартииНаличие.КодОперации		= рег.КодОперации;
////				Регистр.ПартииНаличие.СтатусПартии		= рег.СтатусПартии;
////				Регистр.ПартииНаличие.Партия			= рег.Партия;
////				Регистр.ПартииНаличие.ДатаПартии		= рег.ДатаПартии; 
////				// ресурсы
////				Регистр.ПартииНаличие.Количество		= рег.Количество;
////				Регистр.ПартииНаличие.СуммаУпр			= рег.СуммаУпр;
////				Регистр.ПартииНаличие.СуммаРуб			= рег.СуммаРуб;
////				Регистр.ПартииНаличие.СуммаБезНДС		= рег.СуммаБезНДС;
////				// реквизиты                                          
////				Регистр.ПартииНаличие.ПродСтоимость 	= рег.ПродСтоимость; 
////				Регистр.ПартииНаличие.ЦенаПрод 			= рег.ЦенаПрод;  
////				Регистр.ПартииНаличие.Выручка 			= рег.Выручка;  
////				Регистр.ПартииНаличие.ПриоритетСписания	= рег.ПриоритетСписания;  
////				
////				Регистр.ПартииНаличие.ДвижениеПриходВыполнить();	//Возвращаем всё - что было занесено временно 
////				
////				
////				кол=рег.Количество+кол;
////			КонецЕсли;
////		КонецЦикла;
////		пока рег2.ПолучитьДвижение()=1 Цикл	//Подготовим таблицу "сторно"
////			а	= рег2.Номенклатура;
////			х	= ПолучитьПустоеЗначение(а);
////			кол2= 0;
////			если (ТЗ_врем.НайтиЗначение(а,х,"Номенклатура")=1) и (рег2.расход=1) Тогда	//Значит это наше - надо его сторнировать
////				Регистр.ОстаткиТМЦ.Фирма 			= рег2.Фирма;
////				Регистр.ОстаткиТМЦ.Номенклатура		= рег2.Номенклатура;     
////				Регистр.ОстаткиТМЦ.Склад			= рег2.Склад;
////				Регистр.ОстаткиТМЦ.ЦенаПрод			= рег2.ЦенаПрод;
////				// ресурсы
////				Регистр.ОстаткиТМЦ.Количество		= рег2.Количество;
////				// реквизиты                                          
////				Регистр.ОстаткиТМЦ.Внутреннее		= рег2.Внутреннее;  
////				
////				Регистр.ОстаткиТМЦ.ДвижениеПриходВыполнить();	//Возвращаем всё - что было занесено временно 
////				//прервать;
////			КонецЕсли;
////		КонецЦикла;
////		ЗафиксироватьТранзакцию();
////        
////		//Теперь загоним новые данные в регистры учёта
////		Если глСписаниеОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
////			Возврат;
////		КонецЕсли;
////		// партии ТМЦ
////		Если СпишемПартии = 1 Тогда
////			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
////		КонецЕсли;
////
////	ИначеЕсли ((Набран=1) и (ПустоеЗначение(Принят_к_учету)=0) и (ДокОснование.Вид()="ПеремещениеТМЦ_Розница")) Тогда	//Это значит - что у нас документ корректировка
////		Если ДокОснование.Проведен()=0 Тогда	//т.к. мы хапаем регистры по предыдущему документу, то документ основание должен быть проведён!!!
////			Сообщить("Сначала проведите документ основание!");
////			СтатусВозврата(0);
////			НеПроводитьДокумент();
////			Возврат;
////		КонецЕсли;
////		ТЗ_врем	= СоздатьОбъект("ТаблицаЗначений");
////		ВыгрузитьТабличнуюЧасть(ТЗ_врем);
////		ТЗ_врем.УдалитьСтроки();
////		ТЗ_врем.НоваяКолонка("НомерСтроки_","число",5,0);	//Для корректного списания остатков
////
////		ном=0;
////		ДокОснование.ВыбратьСтроки();	//Найдем все несостыковавшиеся строки
////		Пока ДокОснование.ПолучитьСтроку()=1 Цикл
////			ном=ном+1;
////			если ДокОснование.Количество<>ДокОснование.Количество2 Тогда
////				ТЗ_врем.НоваяСтрока();
////				ТЗ_врем.НомерСтроки_	= ном;
////				ТЗ_врем.Номенклатура	= ДокОснование.Номенклатура;
////				ТЗ_врем.Количество		= ДокОснование.Количество;
////				ТЗ_врем.Количество2		= ДокОснование.Количество2;
////			КонецЕсли;
////		КонецЦикла;
////		рег	=СоздатьОбъект("Регистр.ПартииНаличие");
////		рег2=СоздатьОбъект("Регистр.ОстаткиТМЦ");
////		НачатьТранзакцию();
////		рег.ВыбратьДвиженияДокумента(ДокОснование);
////		рег2.ВыбратьДвиженияДокумента(ДокОснование);
////		кол=0;
////		пока рег.ПолучитьДвижение()=1 Цикл	//Подготовим таблицу "сторно"
////			а	= рег.НомерСтроки();
////			х	= ПолучитьПустоеЗначение(а);
////			//если (ищи_(а,ТЗ_врем)=1) и (рег.расход=1) Тогда	//Значит это наше - надо его сторнировать
////			если (ТЗ_врем.НайтиЗначение(а,х,"НомерСтроки_")=1) и (рег.расход=1) Тогда //Значит это наше - надо его сторнировать
////				Регистр.ПартииНаличие.Фирма 			= рег.Фирма;
////				Регистр.ПартииНаличие.МОЛ				= рег.МОЛ;
////				Регистр.ПартииНаличие.Номенклатура		= рег.Номенклатура;     
////				Регистр.ПартииНаличие.КодОперации		= рег.КодОперации;
////				Регистр.ПартииНаличие.СтатусПартии		= рег.СтатусПартии;
////				Регистр.ПартииНаличие.Партия			= рег.Партия;
////				Регистр.ПартииНаличие.ДатаПартии		= рег.ДатаПартии; 
////				// ресурсы
////				Регистр.ПартииНаличие.Количество		= рег.Количество;
////				Регистр.ПартииНаличие.СуммаУпр			= рег.СуммаУпр;
////				Регистр.ПартииНаличие.СуммаРуб			= рег.СуммаРуб;
////				Регистр.ПартииНаличие.СуммаБезНДС		= рег.СуммаБезНДС;
////				// реквизиты                                          
////				Регистр.ПартииНаличие.ПродСтоимость 	= рег.ПродСтоимость; 
////				Регистр.ПартииНаличие.ЦенаПрод 			= рег.ЦенаПрод;  
////				Регистр.ПартииНаличие.Выручка 			= рег.Выручка;  
////				Регистр.ПартииНаличие.ПриоритетСписания	= рег.ПриоритетСписания;  
////				
////				Регистр.ПартииНаличие.ДвижениеПриходВыполнить();	//Возвращаем всё - что было занесено временно 
////								
////				кол		= рег.Количество+кол;
////			КонецЕсли;
////		КонецЦикла;
////		пока рег2.ПолучитьДвижение()=1 Цикл	//Подготовим таблицу "сторно"
////			а	= рег2.Номенклатура;
////			х	= ПолучитьПустоеЗначение(а);
////			кол2= 0;
////			если (ТЗ_врем.НайтиЗначение(а,х,"Номенклатура")=1) и (рег2.расход=1) Тогда	//Значит это наше - надо его сторнировать
////				Регистр.ОстаткиТМЦ.Фирма 			= рег2.Фирма;
////				Регистр.ОстаткиТМЦ.Номенклатура		= рег2.Номенклатура;     
////				Регистр.ОстаткиТМЦ.Склад			= рег2.Склад;
////				Регистр.ОстаткиТМЦ.ЦенаПрод			= рег2.ЦенаПрод;
////				// ресурсы
////				Регистр.ОстаткиТМЦ.Количество		= рег2.Количество;
////				// реквизиты                                          
////				Регистр.ОстаткиТМЦ.Внутреннее		= рег2.Внутреннее;  
////				
////				Регистр.ОстаткиТМЦ.ДвижениеПриходВыполнить();	//Возвращаем всё - что было занесено временно 
////				//прервать;
////			КонецЕсли;
////		КонецЦикла;
////		ЗафиксироватьТранзакцию();
////		// остатки ТМЦ
////		Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров, ВремОстаткиТМЦ, ВремРезервыТМЦ)=0 Тогда
////			Возврат;
////		КонецЕсли;
////		// партии ТМЦ
////		Если СпишемПартии = 1 Тогда
////			глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
////		КонецЕсли;
////		ТЗ2		= СоздатьОбъект("ТаблицаЗначений");
////		ТСП2	= СоздатьОбъект("ТаблицаЗначений");
////		ТаблицаДокумента.Выгрузить(ТЗ2);
////        ТаблСписПартий.Выгрузить(ТСП2);
////		ТЗ2.УдалитьСтроки();
////		ТСП2.УдалитьСтроки();
////		ТаблицаДокумента.ВыбратьСтроки();
////		пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл	//Выкинем лишнее в ОстаткахТМЦ
////			Если ТаблицаДокумента.Количество=ТаблицаДокумента.Количество2 Тогда
////				тз2.НоваяСтрока();
////				ТЗ2.НомерСтрокиДокумента = ТаблицаДокумента.номерСтрокиДокумента; ТЗ2.Номенклатура = ТаблицаДокумента.Номенклатура;
////				ТЗ2.Количество = ТаблицаДокумента.Количество; ТЗ2.Количество2 = ТаблицаДокумента.Количество2;
////				ТЗ2.Единица	= ТаблицаДокумента.Единица;	ТЗ2.Коэффициент	= ТаблицаДокумента.Коэффициент;
////				ТЗ2.Цена = ТаблицаДокумента.Цена; ТЗ2.Сумма	= ТаблицаДокумента.Сумма; ТЗ2.СтавкаНДС = ТаблицаДокумента.СтавкаНДС;
////				ТЗ2.СуммаНДС = ТаблицаДокумента.СуммаНДС; ТЗ2.СтавкаНП = ТаблицаДокумента.СтавкаНП;
////				ТЗ2.СуммаНП	= ТаблицаДокумента.СуммаНП;	ТЗ2.Партия = ТаблицаДокумента.Партия; ТЗ2.СуммаУпр = ТаблицаДокумента.СуммаУпр;
////				ТЗ2.СуммаРуб = ТаблицаДокумента.СуммаРуб; ТЗ2.СкидкаРуб = ТаблицаДокумента.СкидкаРуб; ТЗ2.ПродСтоимость = ТаблицаДокумента.ПродСтоимость;
////				ТЗ2.ЦенаПрод = ТаблицаДокумента.ЦенаПрод; ТЗ2.ЦенаПродПриход = ТаблицаДокумента.ЦенаПродПриход;
////			КонецЕсли;
////		КонецЦикла;
////		
////		ТаблСписПартий.ВыбратьСтроки();
////		Ном=0;
////		пока ТаблСписПартий.ПолучитьСтроку()=1 Цикл	//Выкинем лишнее в ПартииТМЦ
////			а=ТаблСписПартий.НомерСтрокиДокумента;
////			х=ПолучитьПустоеЗначение(а);
////			если ТЗ2.НайтиЗначение(а,х,1)=1 Тогда
////				ТСП2.НоваяСтрока();
////				Ном=Ном+1;
////				ТСП2.НомерСтроки = Ном;	ТСП2.Фирма = ТаблСписПартий.Фирма; ТСП2.МОЛ	= ТаблСписПартий.МОЛ;
////				ТСП2.Номенклатура = ТаблСписПартий.Номенклатура; ТСП2.СтатусПартии = ТаблСписПартий.СтатусПартии;
////				ТСП2.Партия	= ТаблСписПартий.Партия; ТСП2.ДатаПартии = ТаблСписПартий.ДатаПартии; ТСП2.ЦенаПрод	= ТаблСписПартий.ЦенаПрод;
////				ТСП2.Количество	= ТаблСписПартий.Количество; ТСП2.СуммаУпр = ТаблСписПартий.СуммаУпр; ТСП2.СуммаРуб = ТаблСписПартий.СуммаРуб;
////				ТСП2.СуммаБезНДС = ТаблСписПартий.СуммаБезНДС; ТСП2.СтавкаНДС = ТаблСписПартий.СтавкаНДС; ТСП2.СтавкаНП = ТаблСписПартий.СтавкаНП;
////				ТСП2.СуммаПрод = ТаблСписПартий.СуммаПрод; ТСП2.СуммаПродРуб = ТаблСписПартий.СуммаПродРуб;	ТСП2.СуммаПродУпр = ТаблСписПартий.СуммаПродУпр;
////				ТСП2.СуммаДокРуб = ТаблСписПартий.СуммаДокРуб; ТСП2.НДСПрод	= ТаблСписПартий.НДСПрод; ТСП2.НППрод = ТаблСписПартий.НППрод;
////				ТСП2.ДоговорКомитента = ТаблСписПартий.ДоговорКомитента; ТСП2.НомерСтрокиДокумента = ТаблСписПартий.НомерСтрокиДокумента;
////				ТСП2.СкидкаРуб = ТаблСписПартий.СкидкаРуб;
////			КонецЕсли;
////		КонецЦикла;
////		//Запишем, что получилось :) на склад получатель
////		ПереместитьНаСклад(ТСП2,ТЗ2,СписокПараметров,СпишемПартии);	
////		
////		
////	КонецЕсли;
////	
////	Спр = СоздатьОбъект("Справочник.Номенклатура");
////	ВыбратьСтроки();
////	Пока ПолучитьСтроку() = 1 Цикл
////		Спр.НайтиЭлемент(Номенклатура);
////		Если СкладПолучатель.Магазин=1 Тогда
////			если сокрЛП(СкладПолучатель)="Энгельса" Тогда
////				спр.ПризнакОтбораЭнгельса=1;
////			ИначеЕсли сокрЛП(СкладПолучатель)="Некрасова" Тогда
////				спр.ПризнакОтбораНекрасова=1;
////			ИначеЕсли сокрЛП(СкладПолучатель)="Стахановцев" Тогда
////				спр.ПризнакОтбораСтахановцев=1;
////			ИначеЕсли сокрЛП(СкладПолучатель)="Савушкина" Тогда
////				спр.ПризнакОтбораСавушкина=1;
////			ИначеЕсли сокрЛП(СкладПолучатель)="Ленсовета" Тогда
////				спр.ПризнакОтбораЛенсовета=1;
////			КонецЕсли;
////		КонецЕсли;
////	КонецЦикла;
////КонецПроцедуры // ПроведениеПоРегистрам()
////
////////////////////////////////////////////////////////////////////////////////////
////// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//////
//////******************************************************************************
////// Предопределенная процедура.
//////
////Процедура ОбработкаПроведения(ВидыДвижений)
////	
////	// Проверка заполненности обязательных реквизитов.
////   	Если глВсеРеквизитыДокументаЗаполнены(Контекст,
////		"Фирма,ФирмаПолучатель,Склад,СкладПолучатель,Валюта")=0 Тогда
////		Возврат;
////	КонецЕсли;           
////	
////   	Если (Фирма.ЮрЛицо <> ФирмаПолучатель.ЮрЛицо)	Тогда     
////		глНеПроводить(Контекст,"Нельзя перемещать ТМЦ между фирмами,
////		                       |имеющими различные юридические лица!");
////		Возврат;
////	КонецЕсли;
////	
////	//++Ерошенко 27.03.2007
////	// добавлено для контроля резервов товара...
////	Если ТоварДоступенДляПеремещения() = 0 Тогда
////		глНеПроводить(Контекст,"Недостаточно свободного остатка запрошенных товаров!");
////		Возврат;
////	КонецЕсли;
////	//--Ерошенко
////	
////	// Проведение по регистрам оперативного учета.	
////	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
////		ПроведениеПоРегистрам();
////		
////		Если СтатусВозврата() = 0 Тогда
////			Возврат;
////		КонецЕсли;
////	КонецЕсли;
////	
////	глПриПроведении(Контекст, ВидыДвижений);
////	
////КонецПроцедуры //ОбработкаПроведения()
////
////Процедура ОбработкаУдаленияПроведения()
////	Если НазваниеНабораПрав()="Продавец_розница" Тогда
////		Сообщить("Вы не можете отменять проведение данного документа");
////		СтатусВозврата(0);
////		Возврат;
////	КонецЕсли;
////КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////////
////// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
