Перем НадоПереформироватьДокументы,ТекДней,ТекНедель,ОсталосьДней,
ОсталосьНедель,ТабПерем,ТабВозвр,ТабЗаказ,СписПерем,СписЗаказ,СписРодителей;
//***************************************

Функция СоздатьДокументПеремещение(Пар, ДокТек = "") Далее

// Добавлено: Валерий МЭТР
Функция ПолучитьКоэффициентСезонности(Склад, НомерМесяца)
	
	СпрКоэффициентыСезонности = СоздатьОбъект("Справочник.КоэффициентыСезонностиСкладов");
	
	СпрКоэффициентыСезонности.ИспользоватьВладельца(Склад);
	СпрКоэффициентыСезонности.ВыбратьЭлементы();
	Пока СпрКоэффициентыСезонности.ПолучитьЭлемент() = 1 Цикл
		Если СпрКоэффициентыСезонности.ТекущийЭлемент().ПометкаУдаления() = 0 Тогда
			Если НомерМесяца = 1 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Январь;
			ИначеЕсли НомерМесяца = 2 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Февраль; 
			ИначеЕсли НомерМесяца = 3 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Март;
			ИначеЕсли НомерМесяца = 4 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Апрель;
			ИначеЕсли НомерМесяца = 5 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Май;
			ИначеЕсли НомерМесяца = 6 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Июнь;
			ИначеЕсли НомерМесяца = 7 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Июль;
			ИначеЕсли НомерМесяца = 8 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Август;
			ИначеЕсли НомерМесяца = 9 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Сентябрь;
			ИначеЕсли НомерМесяца = 10 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Октябрь; 
			ИначеЕсли НомерМесяца = 11 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Ноябрь;
			ИначеЕсли НомерМесяца = 12 Тогда
				Возврат СпрКоэффициентыСезонности.ТекущийЭлемент().Декабрь;
			КонецЕсли;
			
			Прервать;
		КонецЕсли;		
	КонецЦикла;

	Возврат 1;	
	
КонецФункции

Функция КатегорияТовара(Номенклатура,Коэффициент)
    Кат = "";
    ТекСв = СокрЛП(Номенклатура.ОсновноеСвойство.ЗначениеСвойства);
    Если ТекСв = "A" Тогда
        Кат =         "A";  
        Коэффициент = Константа.КоэффА;
    ИначеЕсли ТекСв = "B" Тогда
        Кат =         "B";
        Коэффициент = Константа.КоэффВ;
    ИначеЕсли ТекСв = "C" Тогда                               
        Кат =         "C";  
        Коэффициент = Константа.КоэффС;
    ИначеЕсли ТекСв = "D" Тогда
        Кат =         "D";  
        Коэффициент = Константа.КоэффD;
    КонецЕсли;    
    Возврат Кат;
КонецФункции   

//*******************************************  

Функция Раскрас()
    Ит = "";
    Если ЗагруженFormex = 1 Тогда  
        // отображение маркетинговой категории...
        Если КатегорияТовара(Номенклатура,0) = "A" Тогда   
            Ит = "FONT["+ПолучитьЦвет(61,52,67)+"] BRUSH["+ПолучитьЦвет(255,128,128)+"]";
        Иначе
            Ит = "FONT["+ПолучитьЦвет(0,0,0)+"] BRUSH["+ПолучитьЦвет(255,255,255)+"]";
        КонецЕсли;
        Возврат Ит;
    Иначе 
        Ит = "FONT["+ПолучитьЦвет(0,0,0)+"] BRUSH["+ПолучитьЦвет(255,255,255)+"]"; 
        Возврат 0;
    КонецЕсли;
КонецФункции 

//*******************************************

Функция СписокТоваровПоУсловиям()
    
    СписокТоваров = СоздатьОбъект("СписокЗначений");
    СписокГрупп   = СоздатьОбъект("СписокЗначений");
    ТЗ              = СоздатьОбъект("ТаблицаЗначений");
    СпрЗнач       = СоздатьОбъект("Справочник.ЗначенияСвойств");
    
    Если БратьГруппуA = 1 Тогда
        СпрЗнач.НайтиПоНаименованию("A",0,0);
        СписокГрупп.ДобавитьЗначение(СпрЗнач.ТекущийЭлемент());
    КонецЕсли;
    Если БратьГруппуB = 1 Тогда
        СпрЗнач.НайтиПоНаименованию("B",0,0);
        СписокГрупп.ДобавитьЗначение(СпрЗнач.ТекущийЭлемент());
    КонецЕсли;
    Если БратьГруппуC = 1 Тогда
        СпрЗнач.НайтиПоНаименованию("C",0,0);
        СписокГрупп.ДобавитьЗначение(СпрЗнач.ТекущийЭлемент());
    КонецЕсли;
    Если БратьГруппуD = 1 Тогда
        СпрЗнач.НайтиПоНаименованию("D",0,0);
        СписокГрупп.ДобавитьЗначение(СпрЗнач.ТекущийЭлемент());
    КонецЕсли;
    
    RS = СоздатьОбъект("ODBCRecordSet");
    RS.УстБД1С();
    ТекстЗапроса = "
    |SELECT Номенклатура.ID [Ссылка $Справочник.Номенклатура]
    |FROM $Справочник.Номенклатура AS Номенклатура
    |    LEFT OUTER JOIN $Справочник.СвойстваНоменклатуры AS СвойстваНоменклатуры ON Номенклатура.ID = СвойстваНоменклатуры.PARENTEXT
    |    LEFT OUTER JOIN $Справочник.ЗначенияСвойств AS ЗначенияСвойств ON $СвойстваНоменклатуры.ЗначениеСвойства = ЗначенияСвойств.ID
    |WHERE (ЗначенияСвойств.ID IN (SELECT val FROM #Группа)) 
    |    AND (Номенклатура.IsMark=0) 
    |    AND (Номенклатура.IsFolder=2)
    |GROUP BY Номенклатура.ID";
    
    RS.УложитьСписокОбъектов(СписокГрупп,"#Группа","ЗначенияСвойств");
    RS.Отладка(0);
    ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса); 
	
	// Валерий МЭТР:
	Если ТЗ <> 0 Тогда
		ТЗ.Выгрузить(СписокТоваров,,,"Ссылка");
	КонецЕсли;                   
        
    Возврат СписокТоваров; 
    
КонецФункции       

//*******************************************
Функция ОстатокНаСкладеКорреспонденте(Номенклатура,Резерв)
    
    Ит =   0;  
    Табл = СоздатьОбъект("ТаблицаЗначений");
    Рег =  СоздатьОбъект("Регистр.ОстаткиТМЦ");
    Рег.УстановитьФильтр(,Номенклатура,ВыбСкладКорреспондент);
    Рег.ВыгрузитьИтоги(Табл,1); 
    
    Ит = Табл.Итог("Количество");
    
    Табл.Очистить();
    Рег =  СоздатьОбъект("Регистр.РезервыТМЦ2");
    Рег.УстановитьФильтр(Номенклатура,ВыбСкладКорреспондент);
    Рег.ВыгрузитьИтоги(Табл,1); 
    
    Резерв = Табл.Итог("Количество");
    
    Ит = Ит - Резерв; 
    
    Возврат Ит;
    
КонецФункции    // ОстатокНаСкладеКорреспонденте

//*******************************************         

Процедура ОтобразитьСтроки()      
    
    ТекДней =        ДатаПо - ДатаС;  
    ТекНедель =      Окр(ТекДней/7,0,1);
    Если ТекНедель < 1 Тогда
        ТекНедель = 1;  
    КонецЕсли;
    ОсталосьДней =   ДатаПоставки - ДатаПо;
    ОсталосьНедель = Окр(ОсталосьДней/7,0,1);
    Форма.ТекстПериодАнализа.Заголовок(""+ТекНедель); 
    Форма.ТекстПериодПоставки.Заголовок(""+ОсталосьНедель);  
    Форма.НадписьСклад.Заголовок("Магазин (к="+ВыбСклад.КоэффПлощади+"):");
    
КонецПроцедуры    // ОтобразтьСроки 
                                   
//******************************************* 

Процедура ПроверкаФлагов()
    // проверка маркетинговых групп в фильтрах.. 
    Если (БратьГруппуA = 0) И 
    (БратьГруппуB = 0) И 
    (БратьГруппуC = 0) И 
    (БратьГруппуD = 0) Тогда
        БратьГруппуA = 1;
    КонецЕсли; 
    
    // проверка флагов формирования документов.. 
    Если (ФормироватьВозврат = 0) И 
    (ФормироватьЗаказ = 0) И 
    (ФормироватьПеремещение = 0) Тогда
        Предупреждение("Необходимо указать хотя бы один формируемый документ!"); 
        ФормироватьЗаказ = 1;
    КонецЕсли;
КонецПроцедуры

//******************************************* 

Процедура ПровМаксПроц()
    Если ПроцМаксСделки > 100 Тогда
        ПроцМаксСделки = 100;
    КонецЕсли;
    Если ПроцМаксСделки < 0 Тогда
        ПроцМаксСделки = 0;
    КонецЕсли;
КонецПроцедуры

//******************************************* 

Процедура ПланируемыйОстаток(ТЗ1)
    
    Состояние("Расчёт остатков по продажам...");
    
    ОтобразитьСтроки();
        
    ТЗ1.ВыбратьСтроки();
    Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
        
        ТекСредненедельнаяПродажа  = ?(ТекНедель = 0,0,ТЗ1.Расход / ТекНедель);
        ТЗ1.СредненедельнаяПродажа = ТекСредненедельнаяПродажа;  
        
        ТекСреднедневнаяПродажа    = ?(ТекДней = 0,0,ТЗ1.Расход / ТекДней);
        ТЗ1.СреднедневнаяПродажа   = ТекСреднедневнаяПродажа; 
        
        РасчОст                    = Окр(ТЗ1.Остаток - (ТекСредненедельнаяПродажа * ОсталосьНедель),0,1);
        ТЗ1.РасчОстаток            = РасчОст;
        
        //++ По согласованию с Ивановой Т. 23.03.2007
        
        ТекПотребность             = Окр((ТекСредненедельнаяПродажа * ОсталосьНедель * ТЗ1.Коэффициент) + ТЗ1.МинОстаток - ТЗ1.Остаток,0,1);
        ТЗ1.Потребность            = ТекПотребность;
                
        // остаток на складе-корреспонденте с учётом резервов... 
        ТекКоррОст = Окр(ТЗ1.КоррОст - ТЗ1.КоррРез,0,1);                   
        Если ТекКоррОст < 0 Тогда // на случай, если резерв перекрывает остаток.. 
            ТекКоррОст = 0;
        КонецЕсли;
        
        Если ФормироватьПеремещение = 1 Тогда
            Если ТекКоррОст >=  ТекПотребность Тогда
                ТекПеремещение = Окр(ТекПотребность,0,1);
            Иначе
                ТекПеремещение = Окр(ТекКоррОст,0,1);
            КонецЕсли;
        Иначе
            ТекПеремещение = 0;
        КонецЕсли;
        
        // обработка флагов форирования документов.. 
        Если ФормироватьПеремещение = 1 Тогда
            ТЗ1.Перемещение = ?(ТекПеремещение < 0,0,ТекПеремещение); 
        КонецЕсли;
        
        Если ФормироватьЗаказ = 1 Тогда   
            Если ФормироватьПеремещение = 1 Тогда
                ТекЗаказ  = Окр(ТекПотребность - ТекПеремещение,0,1);
                ТЗ1.Заказ = ?(ТекЗаказ < 0,0,ТекЗаказ); 
            Иначе
                ТЗ1.Заказ = Окр(ТекПотребность,0,1); 
            КонецЕсли;
        КонецЕсли;
        
    КонецЦикла; 
    
	УдалитьСтроки();
     
    ТЗ1.ВыбратьСтроки();
    Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
        
        Если ТЗ1.Потребность = 0 Тогда
            Продолжить;
        КонецЕсли;
        
        НоваяСтрока();
        Номенклатура = ТЗ1.Номенклатура;
        Артикул      = ТЗ1.Номенклатура.Артикул;
        Группа       = ТЗ1.Группа;
        Коэффициент  = ТЗ1.Коэффициент;
        МинОстаток   = ТЗ1.МинОстаток;
        Расход       = ТЗ1.Расход;
        Остаток      = ТЗ1.Остаток;
        СредненедельнаяПродажа = ТЗ1.СредненедельнаяПродажа;
        РасчОстаток  = ТЗ1.РасчОстаток;    
        Сделок       = ТЗ1.Сделок;
        МаксСделка   = ТЗ1.МаксСделка;
        КоррОст      = ТЗ1.КоррОст;
        Потребность  = ТЗ1.Потребность; 
        
        //++Ерошенко 06.06.2007
        // по заданию Ивановой для округления
        // количества товара до упаковки...  
        Если ВыполнятьОкруглениеДоУпаковки = 0 Тогда
            Перемещение =  ТЗ1.Перемещение;
            Заказ       =  ТЗ1.Заказ;   
        Иначе
            Перемещение =  ?(ТЗ1.Перемещение = 0,0,глОкрДоУпаковки(ТЗ1.Номенклатура,ТЗ1.Перемещение));
            Заказ       =  ?(ТЗ1.Заказ = 0,0,глОкрДоУпаковки(ТЗ1.Номенклатура,ТЗ1.Заказ));   
        КонецЕсли;
        
        Если ФормироватьВозврат = 1 Тогда
            Если ТЗ1.Потребность < 0 Тогда
                ВозвратНаКоррСклад = -ТЗ1.Потребность;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
        
    // промежуточный анализ...  
    // ситуация не должна выполняться, однако, на случай ошибок,
    // связанных с погрешностью округлния, целесообразно использовать (на период отладки)
    ВыбратьСтроки();   
    Н = 0;
    Пока ПолучитьСтроку() = 1 Цикл
        Н = Н + 1;
        Если (ВозвратНаКоррСклад <> 0) И (Заказ <> 0) И (Перемещение <> 0) Тогда
            Сообщить("Некорректный расчёт по товару '"+Номенклатура+"', строка №"+Н);
        КонецЕсли;
    КонецЦикла;    
КонецПроцедуры    //ПланируемыйОстаток(ТЗ1)

//*******************************************  

Процедура Сформировать()
    ТЗКорр   = СоздатьОбъект("ТаблицаЗначений");
    ТЗРезерв = СоздатьОбъект("ТаблицаЗначений");
    ТЗОст = СоздатьОбъект("ТаблицаЗначений");
    МожноФормировать = 1;
    
    Если КоличествоСтрок() > 0 Тогда
        Ответ = Вопрос("Табличная часть документа не пуста! Ппродолжение действия очистит её. Продолжить?","Да+Нет");
        Если Ответ = "Нет" Тогда
            МожноФормировать = 0;   
        КонецЕсли;
    КонецЕсли;
    
    Спис = СписокТоваровПоУсловиям();
    Если Спис.РазмерСписка() = 0 Тогда
        МожноФормировать = 0; 
        Сообщить("Нет товаров для отчёта");
    КонецЕсли;
    Если ВыбСклад.Выбран() = 0 Тогда
        МожноФормировать = 0;    
        Сообщить("Не выбран склад");
    КонецЕсли;         
    
    // ещё раз озвучим условия формирования.. 
    Если МожноФормировать = 1 Тогда 
        
        ТовГр = ""+?(БратьГруппуA = 1,"A","")+?(БратьГруппуB = 1,",В","")+?(БратьГруппуC = 1,",С","")+?(БратьГруппуD = 1,",D","");
        ПрНел = ""+?(НеУчитыватьНеликвиды = 1," не",""); 
        ФПер =  ""+?(ФормироватьПеремещение = 1,"","не ");
        ФЗак =  ""+?(ФормироватьЗаказ = 1,"","не ");
        ФВоз =  ""+?(ФормироватьВозврат = 1,"","не ");
        
        ТекстВопроса = "Введены условия:  
        |Магазин: "+ВыбСклад+", склад-корреспондент: "+ВыбСкладКорреспондент+",
        |период анализа: с "+ДатаС+" по "+ДатаПо+",
        |ожидаемая поставка: "+ДатаПоставки+",
        |в анализе участвуют товары групп: "+ТовГр+",
        |% мах сделки равен "+ПроцМаксСделки+",
        |"+ФПер+"формировать перемещение со склада-корреспондента,
        |"+ФЗак+"формировать заказ,
        |"+ФВоз+"формировать возврат на склад-корреспондент";  
        
        Ответ = Вопрос(ТекстВопроса,"Да+Нет");
        Если Ответ = "Нет" Тогда
            МожноФормировать = 0;
        КонецЕсли;
        
    КонецЕсли;
    
    Если МожноФормировать = 1 Тогда
        
        ТЗ = СоздатьОбъект("ТаблицаЗначений");
        
        Если ПустоеЗначение(ДатаПо) = 1 Тогда
            ДатаПо = ПолучитьДатуТА();
            Сообщить("Установлена дата окончания периода анализа..");
        Иначе
            Если ДатаПо > ПолучитьДатуТА() Тогда
                ДатаПо = ПолучитьДатуТА(); 
                Сообщить("Изменена дата окончания периода анализа..");
            КонецЕсли;
        КонецЕсли;  
        Если ПустоеЗначение(ДатаС) = 1 Тогда
            ДатаС = ДатаПо - 7; 
            Сообщить("Установлена дата начала периода анализа..");
        Иначе
            Если ДатаС > ДатаПо Тогда
                ДатаС = ДатаПо - 7; 
                Сообщить("Изменена дата начала периода анализа..");
            КонецЕсли;
        КонецЕсли;    
        Если ПустоеЗначение(ДатаПоставки) = 1 Тогда
            ДатаПоставки = ДатаПо + 7; 
            Сообщить("Установлена дата планируемой поставки..");
        Иначе
            Если ДатаПоставки < ДатаПо Тогда
                ДатаПоставки = ДатаПо + 7; 
                Сообщить("Изменена дата планируемой поставки..");
            КонецЕсли;  
        КонецЕсли;
        Состояние("Расчёт продаж...");
        
        RS = СоздатьОбъект("ODBCRecordSet");
        RS.УстБД1С();
        ТекстЗапроса = "
        |SELECT ОстаткиТМЦОбороты.Номенклатура [Номенклатура $Справочник.Номенклатура]
        |    , Sum(ОстаткиТМЦОбороты.КоличествоРасход) КоличествоРасход
        |    , 0 as КоличествоКонОст
        |    , 0 as КоррРез 
        |    , 0 as КоррОст 
        |    , 0 as КолСделок
        |FROM $РегистрОбороты.ОстаткиТМЦ(:ДатаС,:ДатаПо,,,
        |    (Номенклатура IN (SELECT val FROM #Группа))
        |    AND (Склад = :ВыбСклад)
        |    AND (Внутреннее = 0),
        |    Номенклатура,) AS ОстаткиТМЦОбороты
        |GROUP BY ОстаткиТМЦОбороты.Номенклатура
        |UNION ALL
        |SELECT ОстаткиТМЦОстатки.Номенклатура
        |    , 0 as КоличествоРасход
        |    , Sum(ОстаткиТМЦОстатки.КоличествоОстаток) КоличествоКонОст
        |    , 0 as КоррРез 
        |    , 0 as КоррОст
        |    , 0 as КолСделок
        |FROM $РегистрОстатки.ОстаткиТМЦ(:ДатаПо,,
        |    (Номенклатура IN (SELECT val FROM #Группа))
        |    AND (Склад = :ВыбСклад),
        |    Номенклатура,) AS ОстаткиТМЦОстатки
        |GROUP BY ОстаткиТМЦОстатки.Номенклатура
        |UNION ALL
        |SELECT РезервыТМЦОстатки.Номенклатура
        |    , 0 as КоличествоРасход
        |    , 0 as КоличествоКонОст
        |    , Sum(РезервыТМЦОстатки.КоличествоОстаток) КоррРез
        |    , 0 as КоррОст 
        |    , 0 as КолСделок
        |FROM $РегистрОстатки.РезервыТМЦ(:ДатаПо,,
        |    (Номенклатура IN (SELECT val FROM #Группа))
        |    AND (Склад = :ВыбКоррСклад),
        |    Номенклатура,) AS РезервыТМЦОстатки
        |GROUP BY РезервыТМЦОстатки.Номенклатура
        |UNION ALL
        |SELECT ОстаткиТМЦОстатки.Номенклатура
        |    , 0 as КоличествоРасход
        |    , 0 as КоличествоКонОст
        |    , 0 as КоррРез
        |    , Sum(ОстаткиТМЦОстатки.КоличествоОстаток) КоррОст
        |    , 0 as КолСделок
        |FROM $РегистрОстатки.ОстаткиТМЦ(:ДатаПо,,
        |    (Номенклатура IN (SELECT val FROM #Группа))
        |    AND (Склад = :ВыбКоррСклад),
        |    Номенклатура,) AS ОстаткиТМЦОстатки
        |GROUP BY ОстаткиТМЦОстатки.Номенклатура
        |UNION ALL
        |SELECT $ОстаткиТМЦ.Номенклатура
        |    , 0 as КоличествоРасход
        |    , 0 as КоличествоКонОст
        |    , 0 as КоррРез
        |    , 0 as КоррОст
        |    , (Count( * )) КолСделок
        |FROM $Регистр.ОстаткиТМЦ AS ОстаткиТМЦ
        |INNER JOIN
        |    _1SJourn Жур ON Жур.IDDoc = ОстаткиТМЦ.IDDoc
        |WHERE (ОстаткиТМЦ.DEBKRED = 1)
        |    AND ($ОстаткиТМЦ.Номенклатура IN (SELECT val FROM #Группа))
        |    AND ($ОстаткиТМЦ.Склад = :ВыбСклад)
        |    AND (Жур.DATE_TIME_IDDOC BETWEEN :ДатаС AND :ДатаПо~)
        |GROUP BY $ОстаткиТМЦ.Номенклатура";
        
        RS.УложитьСписокОбъектов(Спис, "#Группа", "Номенклатура");
        RS.УстановитьТекстовыйПараметр("ВыбСклад", ВыбСклад);
        RS.УстановитьТекстовыйПараметр("ВыбКоррСклад", ВыбСкладКорреспондент);
        RS.УстановитьТекстовыйПараметр("ДатаС",ДатаС);
        RS.УстановитьТекстовыйПараметр("ДатаПо",ДатаПо);
        RS.Отладка(0);
        ТЗ    = RS.ВыполнитьИнструкцию(ТекстЗапроса);
        
        ТЗ.Свернуть("Номенклатура","КоличествоРасход,КоличествоКонОст,КоррРез,КоррОст,КолСделок");                
        
        Для сч=1 по Спис.РазмерСписка() Цикл
            ТекущаяНоменклатура=Спис.ПолучитьЗначение(сч);
            Если ТекущаяНоменклатура.МинОстаток = 0 Тогда
                Продолжить;
            КонецЕсли;
            Если ТЗ.НайтиЗначение(ТекущаяНоменклатура,,"Номенклатура") = 1 Тогда
                Продолжить;
            КонецЕсли;
            ТЗ.НоваяСтрока();
            ТЗ.Номенклатура = ТекущаяНоменклатура.ТекущийЭлемент();
        КонецЦикла;
          
        ТЗ.Сортировать("Номенклатура+");  
                    
        Состояние("Формирование таблицы...");
        
        Если ТЗ.КоличествоСтрок() > 0 Тогда 
            ТЗ1 = СоздатьОбъект("ТаблицаЗначений");
            ТЗ1.Очистить(); 
            ТЗ1.НоваяКолонка("Номенклатура","Справочник.Номенклатура",,,,11);  
            ТЗ1.НоваяКолонка("Группа",,,,,1);
            ТЗ1.НоваяКолонка("Коэффициент","Число",10,3,,3); 
            ТЗ1.НоваяКолонка("МинОстаток","Число",10,3,"Мин.ост.",3);
            ТЗ1.НоваяКолонка("Расход","Число",10,3,,3);
            ТЗ1.НоваяКолонка("Остаток","Число",10,3,,3);
            ТЗ1.НоваяКолонка("КоличествоКонОст","Число",10,3,,3);
            ТЗ1.НоваяКолонка("СредненедельнаяПродажа","Число",10,3,"Ср.нед.прод.",3);
            ТЗ1.НоваяКолонка("СреднедневнаяПродажа","Число",10,3,"Ср.дн.прод.",3);
            ТЗ1.НоваяКолонка("РасчОстаток","Число",10,3,"Расч.ост.",3);
            ТЗ1.НоваяКолонка("Сделок","Число",10,0,,3);
            ТЗ1.НоваяКолонка("МаксСделка","Число",10,3,"MAX в сделке",3);  
            ТЗ1.НоваяКолонка("КоррОст","Число",10,3,"Ост. на скл.корр.",3);
            ТЗ1.НоваяКолонка("КоррРез","Число",10,3,"Рез. на скл.корр.",3);
            ТЗ1.НоваяКолонка("Потребность","Число",10,3,"Потребность",3);
            ТЗ1.НоваяКолонка("Перемещение","Число",10,3,"Перемещ.",3);
            ТЗ1.НоваяКолонка("Заказ","Число",10,3,"Заказ.",3);
            
			//++Валерий МЭТР:
			СпрОстаткиНоменклатуры = СоздатьОбъект("Справочник.ОстаткиНоменклатуры");
			КоэффициентСезонности = ПолучитьКоэффициентСезонности(ВыбСклад, ДатаМесяц(ДатаПоставки));
			//--Валерий МЭТР
						
            ТЗ.ВыбратьСтроки(); 
            Пока ТЗ.ПолучитьСтроку() = 1 Цикл    
                ТЗ1.НоваяСтрока();
                ТЗ1.Расход       = ТЗ.КоличествоРасход;
                ТЗ1.Остаток      = ТЗ.КоличествоКонОст;   
                ТЗ1.Сделок       = ТЗ.КолСделок; 
                ТЗ1.МаксСделка   = ТЗ.КоличествоРасход;  
                ТекКоэфф         = 0;
                ТЗ1.Номенклатура = ТЗ.Номенклатура; 
                ТЗ1.Группа       = КатегорияТовара(ТЗ.Номенклатура,ТекКоэфф);
                ТЗ1.Коэффициент  = ТекКоэфф;
				
				//++Валерий МЭТР:
                //ТЗ1.МинОстаток   = ТЗ.Номенклатура.МинОстаток * ВыбСклад.КоэффПлощади;
				СпрОстаткиНоменклатуры.ИспользоватьВладельца(ТЗ.Номенклатура);
				СпрОстаткиНоменклатуры.ВыбратьЭлементы();
				Пока СпрОстаткиНоменклатуры.ПолучитьЭлемент() = 1 Цикл
					Если (СпрОстаткиНоменклатуры.ТекущийЭлемент().Склад = ВыбСклад)
						И (СпрОстаткиНоменклатуры.ТекущийЭлемент().ПометкаУдаления() = 0) Тогда
						ТЗ1.МинОстаток = СпрОстаткиНоменклатуры.ТекущийЭлемент().МаксимальныйОстаток * КоэффициентСезонности * 0.75; 
						Прервать;
					КонецЕсли;		
				КонецЦикла; 
				//--Валерий МЭТР
				
                ТЗ1.КоррОст      = ТЗ.КоррОст;
                ТЗ1.КоррРез      = ТЗ.КоррРез;
            КонецЦикла;  
            
            //++Ерошенко 24.05.2007
            // для переподстановки Родителя...
            ТЗ1.НоваяКолонка("Родитель");
            ТЗ1.ВыбратьСтроки();
            Пока ТЗ1.ПолучитьСтроку() = 1 Цикл
                ТЗ1.Родитель = ТЗ1.Номенклатура.Родитель;
            КонецЦикла;
            ТЗ1.Сортировать("Родитель,Номенклатура");
            
            //--Ерошенко

            ПланируемыйОстаток(ТЗ1); 
                        
            Если (ДокВозврат.Выбран() = 1) ИЛИ 
            (ДокПеремещениеА.Выбран() = 1) ИЛИ 
            (ДокПеремещениеВ.Выбран() = 1) ИЛИ 
            (ДокПеремещениеС.Выбран() = 1) ИЛИ 
            (ДокЗаказ.Выбран() = 1) Тогда
                НадоПереформироватьДокументы = 1;   
            КонецЕсли;
            
            Форма.ИспользоватьСлой("Анализ,Кнопки");
            Форма.Закладки.ТекущаяСтрока(1);

		КонецЕсли;
    КонецЕсли;
КонецПроцедуры

//*******************************************

Процедура РасшифровкаПоДокументам()
    
    Ном = "";
    Ном = Номенклатура;
    
    Запрос = СоздатьОбъект("Запрос");  
    ТекстЗапроса = "
    |Период с ДатаС по ДатаПо;
    |Без Итогов;
    |Номенклатура = Регистр.ОстаткиТМЦ.Номенклатура;
    |Склад =        Регистр.ОстаткиТМЦ.Склад;
    |Количество =   Регистр.ОстаткиТМЦ.Количество;
    |Функция КоличествоНачОст = НачОст(Количество);
    |Функция КоличествоПриход = Приход(Количество);
    |Функция КоличествоРасход = Расход(Количество);
    |Функция КоличествоКонОст = КонОст(Количество);
    |Группировка Номенклатура Без Групп;  
    |Группировка Документ;
    |Условие(Склад = ВыбСклад);
    |Условие(Номенклатура = Ном);
    |Без Итогов;";
    Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
        Возврат;
    КонецЕсли; 
    
    ТЗ0 = СоздатьОбъект("ТаблицаЗначений");
    Запрос.Выгрузить(ТЗ0);  
    
    Таб = СоздатьОбъект("Таблица");
    
    Таб.ВывестиСекцию("Шапка");
    ТЗ0.ВыбратьСтроки();
    Пока ТЗ0.ПолучитьСтроку() = 1 Цикл 
        Если СокрЛП(ТЗ0.Документ) <> "" Тогда
            Таб.ВывестиСекцию("Стр");          
        КонецЕсли;
    КонецЦикла; 
    Таб.Опции(0,0,6,0);
    Таб.Защита(1);
    Таб.Показать("Движения товара '"+Ном+"' на складе '"+ВыбСклад+"' за период с "+ДатаС+" по "+ДатаПо);
    
КонецПроцедуры

//*******************************************

Процедура ПриОткрытии() 
    
    ПриЗаписиПерепроводить(1);   
    ОтобразитьСтроки(); 
    
	глПроверкаРазрешенияРедактирования(Контекст);
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ДатаДок > ПолучитьДатуТА()) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли; 
	
	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ИмяПользователя() <> "Администратор" ) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
    
	Форма.ИспользоватьЗакладки(1);
    Форма.Закладки.ДобавитьЗначение("Анализ");
    Форма.Закладки.ДобавитьЗначение("Настройки"); 
    
    Форма.ИспользоватьСлой("Анализ,Кнопки");       
    
    ВыводитьВозврат =     1;
    ВыводитьПеремещение = 1;
    ВыводитьЗаказ =       1;
    
КонецПроцедуры  

//*******************************************
       
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
    
    Если НомерЗакладки = 1 Тогда
        Форма.ИспользоватьСлой("Анализ,Кнопки");
    Иначе
        Форма.ИспользоватьСлой("Настройки,Кнопки");
    КонецЕсли;       
    
КонецПроцедуры // ПриВыбореЗакладки()

//*******************************************

Процедура ВводНового(Скопирован) 
    
    Если Скопирован = 1 Тогда
        УдалитьСтроки();
    КонецЕсли; 
    
    глЗаполнитьШапку(Контекст,Скопирован);
    ДатаС        =           ДатаДок - 30;
    ДатаПо       =           ДатаДок; 
	
	//++Валерий МЭТР:
    //ДатаПоставки =           ДатаДок + 7;
	ДатаПоставки = ДатаДок + 20;
	//--Валерий МЭТР         	
    
    БратьГруппуA =           1;
    БратьГруппуB =           1;
    БратьГруппуC =           1;      
    
    ФормироватьПеремещение = 1;
    ФормироватьЗаказ       = 1;
    ФормироватьВозврат     = 1;     
    
    ПроцМаксСделки =         30;
    
    ВыбСклад              = глЗначениеПоУмолчанию("ОсновнойСклад");
    ВыбСкладКорреспондент = Константа.СкладОтделаПродаж2;
    
КонецПроцедуры  

//*******************************************

Процедура Подбор()
    
    СпрТЦ = СоздатьОбъект("Справочник.ТипыЦен");
    Если СпрТЦ.НайтиПоНаименованию("Розничная") = 1 Тогда
        ТипЦен = СпрТЦ.ТекущийЭлемент();
    Иначе
        ТипЦен = "";
    КонецЕсли;  
    
    Валюта = глЗначениеПоУмолчанию("ОсновнаяВалютаВзаиморасчетов");
    
    Параметры = СоздатьОбъект("СписокЗначений");
    Параметры.ДобавитьЗначение(глЗначениеПоУмолчанию("ОсновнаяФирма"),"Фирма");
    Параметры.ДобавитьЗначение(ВыбСклад,           "Склад");
    Параметры.ДобавитьЗначение("ИзСправочника", "ЦенаВподборе");
    Параметры.ДобавитьЗначение(ТипЦен,          "ТипЦен");      
    Параметры.ДобавитьЗначение(Валюта,"Валюта");
    Параметры.ДобавитьЗначение(Валюта.Курс.Получить(ДатаДок),"Курс");
    
    Если Выбран() = 0 Тогда
        Параметры.ДобавитьЗначение("Дата",  "ТипГраницы");
        Параметры.ДобавитьЗначение(ДатаДок, "ЗначениеГраницы");
    Иначе
        Параметры.ДобавитьЗначение("Позиция",         "ТипГраницы");
        Параметры.ДобавитьЗначение(ПолучитьПозицию(), "ЗначениеГраницы");
    КонецЕсли;
    
    Параметры.ДобавитьЗначение("Подбор номенклатуры в документ " + ПредставлениеВида() + " № " + НомерДок, "Заголовок");
    глПодбор(Контекст, Параметры);
    
КонецПроцедуры 

//*********************************************************************

Процедура ОбработкаПодбора(ВыбЗнач, КонтФормыПодбора)
    
    Перем ТаблЧасть, ТаблицаПодбора;
    
    ТаблицаПодбора = ВыбЗнач.Получить("ТаблицаПодбора");
    ТаблицаПодбора.ВыбратьСтроки();
    Пока ТаблицаПодбора.ПолучитьСтроку() = 1 Цикл
        
        ТекНом = ТаблицаПодбора.Номенклатура;
        ТекКол = ТаблицаПодбора.Количество;
        
        НашлиВДокументе = 0;
        ВыбратьСтроки();
        Пока ПолучитьСтроку() = 1 Цикл
            Если Номенклатура = ТекНом Тогда
                НашлиВДокументе = 1;
                ДанныеМагазина = ДанныеМагазина + ТекКол;
                Прервать;
            КонецЕсли;
        КонецЦикла;
        Если НашлиВДокументе = 0 Тогда  
            НоваяСтрока();  
            Номенклатура 	= ТекНом;
            Артикул      	= ТекНом.Артикул;
            Резерв       	= 0;
            КоррОст      	= ОстатокНаСкладеКорреспонденте(ТекНом,Резерв);
            КоррРез         = Резерв;
            ДанныеМагазина  = ТекКол;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры // ОбработкаПодбора()  

//*********************************************************************    
// добавлено для усложнения ввода дублей строк..
Процедура ПриВводеСтроки()     
    
    Предупреждение("Добавление новых строк - через 'Подбор'"); 
    СтатусВозврата(0);   
    
КонецПроцедуры      

//*********************************************************************

Процедура СоздатьСолянкуПоПоставкам()
    Если ДокЗаказ.Выбран() = 0 Тогда
        Док = СоздатьОбъект("Документ.СолянкаПоПоставкам");
        Док.Новый();
        Док.Склад            = Константа.ОсновнойСклад;
        Док.Автор            = Автор;
        Док.ЮрЛицо           = глПользователь.ОсновнаяФирма.ЮрЛицо;
        Док.Фирма            = глПользователь.ОсновнаяФирма;
        Док.Комментарий      = "Ввод заказа по автозаказу №: "+сокрЛП(номерДок);
        Док.ДокОснование     = ТекущийДокумент();
        
        ВыбратьСтроки();
        Пока ПолучитьСтроку() = 1 Цикл
            Если Заказ > 0 Тогда       
                Док.НоваяСтрока();
                Док.Номенклатура    = Номенклатура;
                Док.Артикул         = Номенклатура.Артикул;
                Док.Производитель   = Номенклатура.Производитель;
                Док.Единица         = Номенклатура.БазоваяЕдиница;
                Док.Коэффициент     = Номенклатура.БазоваяЕдиница.Коэффициент;
                Док.Количество      = Заказ;
                Док.КоличествоФакт  = Заказ;
                Док.СрокПоставки    = РабочаяДата() + 1;
                Док.СрокФакт        = РабочаяДата() + 1;
                Док.ВидТМЦ          = Перечисление.ВидыТМЦ.Товар;
            КонецЕсли;
        КонецЦикла;
        Попытка
            Док.Записать();  
            ДокЗаказ = Док.ТекущийДокумент();
            Записать();
            Сообщить("Записан новый документ: '"+Док+"'");
        Исключение
            Сообщить("Ошибка при попытке записи нового документа!");
            Возврат;
        КонецПопытки;
    Иначе
        Док    = СоздатьОбъект("Документ.СолянкаПоПоставкам");
        Если Док.НайтиПоНомеру(ДокЗаказ.НомерДок,ДатаДок) = 1 Тогда
            Док.Склад            = Константа.ОсновнойСклад;
            Док.Автор            = Автор;
            Док.ЮрЛицо           = глПользователь.ОсновнаяФирма.ЮрЛицо;
            Док.Фирма            = глПользователь.ОсновнаяФирма;
            Док.Комментарий      = "Ввод заказа по автозаказу №: "+сокрЛП(номерДок);
            Док.ДокОснование     = ТекущийДокумент();  
            
            ВыбратьСтроки();
            Пока ПолучитьСтроку() = 1 Цикл
                Если Заказ > 0 Тогда       
                    Док.НоваяСтрока();
                    Док.Номенклатура    = Номенклатура;
                    Док.Артикул         = Номенклатура.Артикул;
                    Док.Производитель   = Номенклатура.Производитель;
                    Док.Единица         = Номенклатура.БазоваяЕдиница;
                    Док.Коэффициент     = Номенклатура.БазоваяЕдиница.Коэффициент;
                    Док.Количество      = Заказ;
                    Док.КоличествоФакт  = Заказ;
                    Док.СрокПоставки    = РабочаяДата() + 1;
                    Док.СрокФакт        = РабочаяДата() + 1;
                    Док.ВидТМЦ          = Перечисление.ВидыТМЦ.Товар;
                КонецЕсли;
            КонецЦикла;
            
            Попытка
                Док.Записать();  
                ДокЗаказ = Док.ТекущийДокумент();    
                Записать();
                Сообщить("Перезаписан документ: '"+Док+"'");
            Исключение
                Сообщить("Ошибка при попытке перезаписи документа!");
                Возврат;
            КонецПопытки;
        КонецЕсли;
    КонецЕсли;
    
    Попытка
        ОткрытьФорму(Док.ТекущийДокумент());
    Исключение
    КонецПопытки;
    
КонецПроцедуры     
//*********************************************************************

Процедура СоздатьПеремещениеНовый(пар,ТабВремПерем,ВидГруппа="")
	
	Док = СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
	
	~в_начало_нач: 
	
	ВремРодитель = ТабВремПерем.ПолучитьЗначение(1,"Родитель");
	
	Если СписПерем.РазмерСписка() <> 0 Тогда
		Док.НайтиДокумент(СоздатьДокументПеремещение(пар, СписПерем.ПолучитьЗначение(1)));
		СписПерем.УдалитьЗначение(1);
	Иначе
		Док.НайтиДокумент(СоздатьДокументПеремещение(пар, ""));
	КонецЕсли;
	
	Если ТабВремПерем.КоличествоСтрок() > 60 Тогда
		Если ВидГруппа = "A" Тогда                                         
			ТабВремПерем.ВыбратьСтроки();
			Пока ТабВремПерем.ПолучитьСтроку() = 1 Цикл
				~в_начало:
				Если ТабВремПерем.Группа = ВидГруппа Тогда
					Док.НоваяСтрока();
					Док.Номенклатура = ТабВремПерем.Номенклатура;
					Док.Единица      = ТабВремПерем.Номенклатура.БазоваяЕдиница;
					Док.Коэффициент  = ТабВремПерем.Номенклатура.БазоваяЕдиница.Коэффициент;
					Если пар = 0 Тогда
						Док.Количество   = ТабВремПерем.Перемещение;
						Док.Количество2  = ТабВремПерем.Перемещение;
					Иначе	
				        Док.Количество   = ТабВремПерем.ВозвратНаКоррСклад;
						Док.Количество2  = ТабВремПерем.ВозвратНаКоррСклад;
					КонецЕсли;	
					ТабВремПерем.УдалитьСтроку();
					Если ТабВремПерем.НомерСтроки <> 0 Тогда
						Перейти ~в_начало;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если Док.КоличествоСтрок() > 0 Тогда
				Попытка
					Док.Записать();
					ОткрытьФорму(Док.ТекущийДокумент());
					Сообщить("Записан новый документ: '" + Док + "'");
				Исключение
					Сообщить("Ошибка при попытке записи нового документа!");
					Возврат;
				КонецПопытки;
			КонецЕсли;
		Иначе
			сч = 0;
			ТабВремПерем.ВыбратьСтроки();
			ТабПерем.Сортировать("Родитель+");
			Пока ТабВремПерем.ПолучитьСтроку() = 1 Цикл
				~в_начало_1:
				Если сч <= 60 Тогда
					Если ТабВремПерем.Родитель = ВремРодитель Тогда
						Док.НоваяСтрока();
						сч = сч + 1;
						Док.Номенклатура = ТабВремПерем.Номенклатура;
						Док.Единица      = ТабВремПерем.Номенклатура.БазоваяЕдиница;
						Док.Коэффициент  = ТабВремПерем.Номенклатура.БазоваяЕдиница.Коэффициент;
						Если пар = 0 Тогда
							Док.Количество   = ТабВремПерем.Перемещение;
							Док.Количество2  = ТабВремПерем.Перемещение;
						Иначе	
							Док.Количество   = ТабВремПерем.ВозвратНаКоррСклад;
							Док.Количество2  = ТабВремПерем.ВозвратНаКоррСклад;
						КонецЕсли;
					
						ТабВремПерем.УдалитьСтроку();
						Если ТабВремПерем.НомерСтроки <> 0 Тогда
							Перейти ~в_начало_1;
						КонецЕсли;
					Иначе
						стр="";
						СписРодителей.НайтиЗначение(ТабВремПерем.Родитель,стр,"Родитель");
						КолРодитель =  СписРодителей.ПолучитьЗначение(стр,"КолРодитель");
						Если (Док.КоличествоСтрок()+КолРодитель)<=60 Тогда
						    ВремРодитель = ТабВремПерем.Родитель;
							Перейти ~в_начало_1;
						Иначе
							Если Док.КоличествоСтрок() > 0 Тогда
								Попытка
									Док.Записать();
									ОткрытьФорму(Док.ТекущийДокумент());
									Сообщить("Записан новый документ: '" + Док + "'");
								Исключение
									Сообщить("Ошибка при попытке записи нового документа!");
									Возврат;
								КонецПопытки;
							КонецЕсли;
							Перейти ~в_начало_нач;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если Док.КоличествоСтрок() > 0 Тогда
						Попытка
							Док.Записать();
							ОткрытьФорму(Док.ТекущийДокумент());
							Сообщить("Записан новый документ: '" + Док + "'");
						Исключение
							Сообщить("Ошибка при попытке записи нового документа!");
							Возврат;
						КонецПопытки;
					КонецЕсли;
					Перейти ~в_начало_нач;
				КонецЕсли;
			КонецЦикла;
			
			Если Док.КоличествоСтрок() > 0 Тогда
				Попытка
					Док.Записать();
					ОткрытьФорму(Док.ТекущийДокумент());
					Сообщить("Записан новый документ: '" + Док + "'");
				Исключение
					Сообщить("Ошибка при попытке записи нового документа!");
					Возврат;
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Пока ТабВремПерем.ПолучитьСтроку() = 1 Цикл
			Док.НоваяСтрока();
			Док.Номенклатура = ТабВремПерем.Номенклатура;
			Док.Единица      = ТабВремПерем.Номенклатура.БазоваяЕдиница;
			Док.Коэффициент  = ТабВремПерем.Номенклатура.БазоваяЕдиница.Коэффициент;
			Если пар = 0 Тогда
				Док.Количество   = ТабВремПерем.Перемещение;
				Док.Количество2  = ТабВремПерем.Перемещение;
			Иначе	
				Док.Количество   = ТабВремПерем.ВозвратНаКоррСклад;
				Док.Количество2  = ТабВремПерем.ВозвратНаКоррСклад;
			КонецЕсли;
		КонецЦикла;
		Если Док.КоличествоСтрок() > 0 Тогда
			Попытка                                
				Док.Записать(); 
				ОткрытьФорму(Док.ТекущийДокумент());
				Сообщить("Записан новый документ: '" + Док + "'");
			Исключение
				Сообщить("Ошибка при попытке записи нового документа!");
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*********************************************************************
Процедура СформироватьДокументы()
	
	Если  (НазваниеНабораПрав()<>"Администратор") и (НазваниеНабораПрав()<>"Руководитель_розница") Тогда
		Предупреждение("У вас не достаточно прав для формирования документов");
		Возврат;
	КонецЕсли;	
	
	Док = СоздатьОбъект("Документ");
	ТЗ  = СоздатьОбъект("ТаблицаЗначений");
	
	
	ВыгрузитьТабличнуюЧасть(ТЗ);
	
	ТабПерем.Загрузить(ТЗ);
    ТабВозвр.Загрузить(ТЗ);
    ТабЗаказ.Загрузить(ТЗ);
    
	ТабПерем.НоваяКолонка("Родитель");
	ТабВозвр.НоваяКолонка("Родитель");
	ТабПерем.НоваяКолонка("КолРодитель");
	ТабВозвр.НоваяКолонка("КолРодитель");
	
    ТабПерем.УдалитьСтроки();
    ТабВозвр.УдалитьСтроки();
    ТабЗаказ.УдалитьСтроки();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ((Перемещение+Заказ+ВозвратНаКоррСклад)<>0) Тогда
			Если Перемещение<>0 Тогда
				ТабПерем.НоваяСтрока();
				ТабПерем.Номенклатура = Номенклатура;
				ТабПерем.Родитель     = Номенклатура.Родитель;
				ТабПерем.КолРодитель  = 1;
				ТабПерем.Группа       = Группа;
				ТабПерем.Перемещение  = Перемещение;
			КонецЕсли;
			Если ВозвратНаКоррСклад<>0 Тогда
				ТабВозвр.НоваяСтрока();
				ТабВозвр.Группа             = Группа;
				ТабВозвр.Номенклатура       = Номенклатура;
				ТабВозвр.Родитель           = Номенклатура.Родитель;
				ТабВозвр.КолРодитель        = 1;
				ТабВозвр.ВозвратНаКоррСклад = ВозвратНаКоррСклад;
			КонецЕсли;
			Если Заказ<>0 Тогда
				ТабЗаказ.НоваяСтрока();
				ТабЗаказ.Группа       = Группа;
				ТабЗаказ.Заказ        = Заказ;
				ТабЗаказ.Номенклатура = Номенклатура;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Если Выбран() = 0 Тогда
		Предупреждение("Сначала следует записать текущий документ!");
	Иначе
		Если Вопрос("Все ранее сформированные документы будут удалены." + РазделительСтрок + "Продолжить ?", "Да+Нет") = "Да" Тогда
			Док.ВыбратьПодчиненныеДокументы(, , ТекущийДокумент());
			Пока Док.ПолучитьДокумент() = 1 Цикл
				Если  Док.Вид() = "ПеремещениеТМЦ_Розница" Тогда
					Если Док.Проведен() = 1 Тогда Док.СделатьНеПроведенным(); КонецЕсли;
					Если Док.ПометкаУдаления() = 0 Тогда Док.Удалить(0); КонецЕсли;
					Док.УдалитьСтроки();
					СписПерем.ДобавитьЗначение(Док.ТекущийДокумент());
				ИначеЕсли Док.Вид() = "СолянкаПоПоставкам" Тогда
					Если Док.Проведен() = 1 Тогда Док.СделатьНеПроведенным(); КонецЕсли;
					Если Док.ПометкаУдаления() = 1 Тогда Док.Удалить(0); КонецЕсли;
					Док.УдалитьСтроки();
					СписЗаказ.ДобавитьЗначение(Док.ТекущийДокумент());
				КонецЕсли;
			КонецЦикла;
			Если ФормироватьПеремещение = 1 Тогда
				ТабПерем.ВыбратьСтроки();
				ТабПерем.Сортировать("Родитель+");                        
				ТабПерем.ВыбратьСтроки();                          
				ТабВремПерем = СоздатьОбъект("ТаблицаЗначений");
				ТабВремПерем.Загрузить(ТабПерем);
				ТабВремПерем.Свернуть("Родитель","КолРодитель");
				ТабВремПерем.Выгрузить(СписРодителей);
				ТабПерем.Выгрузить(ТабВремПерем);
				Если ТабВремПерем.КоличествоСтрок() <> 0 Тогда
					СоздатьПеремещениеНовый(0,ТабВремПерем,"A");
					СоздатьПеремещениеНовый(0,ТабВремПерем,"");	
				КонецЕсли;
			КонецЕсли;
			Если ФормироватьЗаказ = 1 Тогда
				Если Итог("Заказ") > 0 Тогда
					СоздатьСолянкуПоПоставкам(); // заказ
					НадоПереформироватьДокументы = 0;
				КонецЕсли;
			Иначе
				Если ДокЗаказ.Выбран() = 1 Тогда
					Док    = СоздатьОбъект("Документ.СолянкаПоПоставкам");
					Если Док.НайтиПоНомеру(ДокЗаказ.НомерДок, ДатаДок) = 1 Тогда
						Док.Удалить(0);
						ДокЗаказ = "";
						Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если ФормироватьВозврат = 1 Тогда
				ТабВозвр.ВыбратьСтроки();
				ТабВозвр.Сортировать("Родитель+");                        
				ТабВозвр.ВыбратьСтроки();                          
				ТабВремПерем = СоздатьОбъект("ТаблицаЗначений");
				ТабВремПерем.Загрузить(ТабВозвр);
				ТабВремПерем.Свернуть("Родитель","КолРодитель");
				ТабВремПерем.Выгрузить(СписРодителей);
				ТабВозвр.Выгрузить(ТабВремПерем);
				Если ТабВремПерем.КоличествоСтрок() <> 0 Тогда
					СоздатьПеремещениеНовый(1,ТабВремПерем,"A");
					СоздатьПеремещениеНовый(1,ТабВремПерем,"");	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;	
КонецПроцедуры

//****************************************************************************************

Функция СоздатьДокументПеремещение(Пар, ДокТек = "")
	Док = СоздатьОбъект("Документ.ПеремещениеТМЦ_Розница");
	Если ДокТек = "" Тогда
		Док.Новый();
		Если Пар = 0 Тогда
			Док.Склад = ВыбСкладКорреспондент;
			Док.СкладПолучатель = ВыбСклад;
		Иначе
			Док.Склад = ВыбСклад;
			Док.СкладПолучатель = ВыбСкладКорреспондент;
		КонецЕсли;
		Док.УстановитьНовыйНомер("Пр" + Док.СкладПолучатель.ПрефиксНомеровДокументов);
	Иначе
		Док.НайтиДокумент(ДокТек);
		Если Док.ПометкаУдаления()=1 Тогда
			Док.СнятьПометкуУдаления();
		КонецЕсли;	
		Если Пар = 0 Тогда
			Док.Склад = ВыбСкладКорреспондент;
			Док.СкладПолучатель = ВыбСклад;
		Иначе
			Док.Склад = ВыбСклад;
			Док.СкладПолучатель = ВыбСкладКорреспондент;
		КонецЕсли;
		Док.УстановитьНовыйНомер("Пр" + Док.СкладПолучатель.ПрефиксНомеровДокументов);
	КонецЕсли;
    
    
    Док.Валюта           = глРубли;
    Док.Курс             = глКурсДляВалюты(Док.Валюта, Док.ДатаДок);
    Док.ЮрЛицо           = глПользователь.ОсновнаяФирма.ЮрЛицо;
    Док.ТипЦен           = глЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");
    Док.Автор            = Автор;
    Док.Фирма            = глПользователь.ОсновнаяФирма;
    Док.ФирмаПолучатель  = глПользователь.ОсновнаяФирма;
    Док.ДокОснование     = ТекущийДокумент();
	Док.УдалитьСтроки();
	Док.Записать();
    
    Возврат Док.ТекущийДокумент();

КонецФункции

//****************************************************************************************

Процедура Печать()
    
	Меню	= СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение("Печать всех позиций");
	Меню.ДобавитьЗначение("Печать измененных позиций");
	флПечати	= "";
	Если Меню.ВыбратьЗначение(,,флПечати,,1)=0 Тогда
		Возврат;
	КонецЕсли;	
	
    Таб = СоздатьОбъект("Таблица");
    Таб.ИсходнаяТаблица("ПечФорма"); 
    
    ТовГр = ""+?(БратьГруппуA = 1,"A","")+?(БратьГруппуB = 1,",В","")+?(БратьГруппуC = 1,",С","")+?(БратьГруппуD = 1,",D","");
    ПрНел = ""+?(НеУчитыватьНеликвиды = 1," не",""); 
    ФПер =  ""+?(ФормироватьПеремещение = 1,"","не ");
    ФЗак =  ""+?(ФормироватьЗаказ = 1,"","не ");
    ФВоз =  ""+?(ФормироватьВозврат = 1,"","не ");
    
    ТекстУсловий = "Введены условия:  
    |Магазин: "+ВыбСклад+", склад-корреспондент: "+ВыбСкладКорреспондент+",
    |период анализа: с "+ДатаС+" по "+ДатаПо+",
    |ожидаемая поставка: "+ДатаПоставки+",
    |в анализе участвуют товары групп: "+ТовГр+",
    |% мах сделки равен "+ПроцМаксСделки+",
    |"+ФПер+"формировать перемещение со склада-корреспондента,
    |"+ФЗак+"формировать заказ,
    |"+ФВоз+"формировать возврат на склад-корреспондент";  
    
    Таб.ВывестиСекцию("Шапка|База"); 
    
    Если ВыводитьЗаказ = 1 Тогда   
        Если Итог("Заказ") > 0 Тогда
            Таб.ПрисоединитьСекцию("Шапка|Заказ"); 
        Иначе
            Сообщить("Нет позиций к заказу!"); 
            ВыводитьЗаказ = 0;
        КонецЕсли;
    КонецЕсли;
    Если ВыводитьПеремещение = 1 Тогда 
        Если Итог("Перемещение") > 0 Тогда
            Таб.ПрисоединитьСекцию("Шапка|Перемещение"); 
        Иначе
            Сообщить("Нет позиций к перемещению!"); 
            ВыводитьПеремещение = 0;
        КонецЕсли;
    КонецЕсли;
    Если ВыводитьВозврат = 1 Тогда    
        Если Итог("ВозвратНаКоррСклад") > 0 Тогда
            Таб.ПрисоединитьСекцию("Шапка|ВозвратНаКоррСклад"); 
        Иначе
            Сообщить("Нет позиций к возврату!"); 
            ВыводитьВозврат = 0;
        КонецЕсли;
    КонецЕсли;
    Если ВыводитьПродажи = 1 Тогда 
        Если Итог("Расход") > 0 Тогда
            Таб.ПрисоединитьСекцию("Шапка|Расход");
        Иначе
            Сообщить("Нет продаж!"); 
            ВыводитьПродажи = 0;
        КонецЕсли;
    КонецЕсли;
    Если ВыводитьОстатки = 1 Тогда    
        Если Итог("Остаток") > 0 Тогда
            Таб.ПрисоединитьСекцию("Шапка|Остаток");
        Иначе
            Сообщить("Нет остатков!"); 
            ВыводитьОстатки = 0;
        КонецЕсли;
    КонецЕсли;
    Если ВыводитьСрНедПр = 1 Тогда
        Таб.ПрисоединитьСекцию("Шапка|СредненедельнаяПродажа");
    КонецЕсли;
    Если ВыводитьСделок = 1 Тогда
        Таб.ПрисоединитьСекцию("Шапка|СредненедельнаяПродажа");
    КонецЕсли;
    Если ВыводитьМаксСделка = 1 Тогда
        Таб.ПрисоединитьСекцию("Шапка|МаксСделка");
    КонецЕсли;
    
    ВыбратьСтроки(); 
    Ном = 0;
    Пока ПолучитьСтроку() = 1 Цикл
		Если (флПечати = 2) и (ПустоеЗначение(ДанныеМагазина)=1) Тогда
			Продолжить;
		КонецЕсли;	
		
        Ном = Ном + 1;
        Таб.ВывестиСекцию("Строка|База"); 
        
        Если ВыводитьЗаказ = 1 Тогда   
            Если Итог("Заказ") > 0 Тогда
                Таб.ПрисоединитьСекцию("Строка|Заказ"); 
            КонецЕсли;
        КонецЕсли;
        Если ВыводитьПеремещение = 1 Тогда 
            Если Итог("Перемещение") > 0 Тогда
                Таб.ПрисоединитьСекцию("Строка|Перемещение"); 
            КонецЕсли;
        КонецЕсли;
        Если ВыводитьВозврат = 1 Тогда    
            Если Итог("ВозвратНаКоррСклад") > 0 Тогда
                Таб.ПрисоединитьСекцию("Строка|ВозвратНаКоррСклад"); 
            КонецЕсли;
        КонецЕсли;
        Если ВыводитьПродажи = 1 Тогда 
            Если Итог("Расход") > 0 Тогда
                Таб.ПрисоединитьСекцию("Строка|Расход");
            КонецЕсли;
        КонецЕсли;
        Если ВыводитьОстатки = 1 Тогда    
            Если Итог("Остаток") > 0 Тогда
                Таб.ПрисоединитьСекцию("Строка|Остаток");
            КонецЕсли;
        КонецЕсли;
        Если ВыводитьСрНедПр = 1 Тогда
            Таб.ПрисоединитьСекцию("Строка|СредненедельнаяПродажа");
        КонецЕсли;
        Если ВыводитьСделок = 1 Тогда
            Таб.ПрисоединитьСекцию("Строка|СредненедельнаяПродажа");
        КонецЕсли;
        Если ВыводитьМаксСделка = 1 Тогда
            Таб.ПрисоединитьСекцию("Строка|МаксСделка");
        КонецЕсли;
        
    КонецЦикла;
    Таб.Опции(0,0,5,0); 
    Таб.ПараметрыСтраницы(1,,,,,,,,,,,);    
    Таб.ТолькоПросмотр(1);
    Таб.Показать(""+ТекущийДокумент());
КонецПроцедуры 


       

//*********************************************************************

Процедура ПриЗаписи() 
    Если НадоПереформироватьДокументы = 1 Тогда
        Предупреждение("Данные были изменены! Надо переформировать документы!");
        СтатусВозврата(0);
	КонецЕсли;
	
	проба		= СоздатьОбъект("Справочник.ОтборРознДокум");
	ЭР			= сокрЛП(Перечисление.ВидДокументаРозница.ПлановаяЗаявка)+сокрЛП(ВыбСклад);
	Если проба.НайтиПоНаименованию(сокрЛП(ЭР),0,1)=1 Тогда
	    ЭтоРозница=проба.ТекущийЭлемент();
	Иначе
		проба.новый();
		проба.наименование=ЭР;
		проба.записать();
		ЭтоРозница=проба.ТекущийЭлемент();
	КонецЕсли;
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры 

//*********************************************************************

Процедура ПроставитьЗначение(НачСтр,КонСтр,Колонка,Значение)
      
     ВыбратьСтроки();
     Пока ПолучитьСтроку() = 1 Цикл
                 
         Если НомерСтроки < НачСтр Тогда
             Продолжить;
         КонецЕсли;
         Если НомерСтроки > КонСтр Тогда
             Продолжить;
         КонецЕсли;
         Если Колонка = "Перемещение" Тогда
             Перемещение = Значение;
         ИначеЕсли Колонка = "Заказ" Тогда
             Заказ = Значение;
         ИначеЕсли Колонка = "ВозвратНаКоррСклад" Тогда
             ВозвратНаКоррСклад = Значение;
         КонецЕсли;
         
     КонецЦикла;
    
КонецПроцедуры 

//*********************************************************************

Процедура ЗаполнитьЗначениями()
    
    НачСтр = НомерСтроки; 
    
    Спис = СоздатьОбъект("СписокЗначений");
    Спис.ДобавитьЗначение("Перемещение","в перемещение");
    Спис.ДобавитьЗначение("Заказ","в заказ");
    Спис.ДобавитьЗначение("ВозвратНаКоррСклад","к возврату"); 
    Значен = "";
    Если Спис.ВыбратьЗначение(Значен,"",,,1) = 1 Тогда 
        Значен1 = "";
        Спис1 = СоздатьОбъект("СписокЗначений");
        Спис1.ДобавитьЗначение("Вверх","Заполнять вверх");
        Спис1.ДобавитьЗначение("Вниз","Заполнять вниз");
        Если Спис1.ВыбратьЗначение(Значен1,"",,,1) = 1 Тогда 
            Если Значен1 = "Вверх" Тогда
                КонСтр = 1;
            ИначеЕсли Значен1 = "Вниз" Тогда
                КонСтр = КоличествоСтрок();
            КонецЕсли;
            Если ВвестиЧисло(КонСтр,"До какой строки вводить значение?",10,0) = 1 Тогда
                Зн = 0; 
                НС = Мин(НачСтр,КонСтр);
                КС = Макс(НачСтр,КонСтр);
                Если ВвестиЧисло(Зн,"Введите значение для подстановки в строки с "+НС+" по "+КС,10,0) = 1 Тогда
                    Ответ = Вопрос("Проставить в колонке '"+Значен+"' в строках с "+НС+" по "+КС+" значение "+Зн+" ?","Да+Нет");
                    Если Ответ = "Да" Тогда
                        ПроставитьЗначение(НС,КС,Значен,Зн);
                    КонецЕсли;
                КонецЕсли;
            КонецЕсли; 
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры       

//*********************************************************************

Процедура ОткрытьПеремещение()
    Спис = СоздатьОбъект("СписокЗначений");
    Док  = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(, , ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если  Док.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;	
		Если  Док.Вид() = "ПеремещениеТМЦ_Розница" Тогда
			Если Док.Склад = ВыбСкладКорреспондент Тогда
				Спис.ДобавитьЗначение(Док.ТекущийДокумент());
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;				
    ТекД = "";
    Поз =  "";
    Если Спис.ВыбратьЗначение(ТекД,"",Поз,,1) <> 1 Тогда
        Возврат;
    КонецЕсли; 
    ОткрытьФорму(ТекД);
КонецПроцедуры  

Процедура ОткрытьПеремещениеВозврат()
 Спис = СоздатьОбъект("СписокЗначений");
    Док  = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(, , ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если  Док.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		Если  Док.Вид() = "ПеремещениеТМЦ_Розница" Тогда
			Если Док.Склад = ВыбСклад Тогда
				Спис.ДобавитьЗначение(Док.ТекущийДокумент());
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;				
    ТекД = "";
    Поз =  "";
    Если Спис.ВыбратьЗначение(ТекД,"",Поз,,1) <> 1 Тогда
        Возврат;
    КонецЕсли; 
    ОткрытьФорму(ТекД);
КонецПроцедуры 	
	
Процедура ОткрытьБЦД()
    Спис1 = СоздатьОбъект("СписокЗначений");
    спр2 = СоздатьОбъект("Справочник.Перемещение_Автозаявка");
    спр2.ВыбратьЭлементы();
    Пока Спр2.ПолучитьЭлемент() =1 Цикл 
        Если Спр2.Автозаявка <> ТекущийДокумент() тогда
            продолжить;
        КонецЕсли;
        Спис1.добавитьЗначение(Спр2.перемещение,);
    КонецЦикла;
    
    ТекД = "";
    Поз =  "";
    Если Спис1.ВыбратьЗначение(ТекД,"",Поз,,1) <> 1 Тогда
        Возврат;
    КонецЕсли; 
    ОткрытьФорму(ТекД);
КонецПроцедуры 

Процедура Обнови()
	
	Если  (НазваниеНабораПрав()<>"Администратор") и (НазваниеНабораПрав()<>"Руководитель_розница") Тогда
		Предупреждение("У вас не достаточно прав !");
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос("Данные будут пересчитаны по данным магазина?"+РазделительСтрок+"	  Продолжить?","Да+Нет");
	Если Ответ = "Да" Тогда
		сч = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПустоеЗначение(ДанныеМагазина)=1 Тогда
				Продолжить;
			КонецЕсли;
			Потребность		= ДанныеМагазина;
			
			// остаток на складе-корреспонденте с учётом резервов... 
			ТекКоррОст = Окр(КоррОст - КоррРез,0,1);                   
			Если ТекКоррОст < 0 Тогда // на случай, если резерв перекрывает остаток.. 
				ТекКоррОст = 0;
			КонецЕсли;
			
			Если ФормироватьПеремещение = 1 Тогда
				Если ТекКоррОст >=  Потребность Тогда
					ТекПеремещение = Окр(Потребность,0,1);
				Иначе
					ТекПеремещение = Окр(ТекКоррОст,0,1);
				КонецЕсли;
			Иначе
				ТекПеремещение = 0;
			КонецЕсли;
			
			// обработка флагов форирования документов.. 
			Если ФормироватьПеремещение = 1 Тогда
				Перемещение = ?(ТекПеремещение < 0,0,ТекПеремещение); 
			КонецЕсли;
			
			Если ФормироватьЗаказ = 1 Тогда   
				Если ФормироватьПеремещение = 1 Тогда
					ТекЗаказ  = Окр(Потребность - ТекПеремещение,0,1);
					Заказ = ?(ТекЗаказ < 0,0,ТекЗаказ); 
				Иначе
					Заказ = Окр(Потребность,0,1); 
				КонецЕсли;
			КонецЕсли;
			сч = сч + 1;
		КонецЦикла;
		Сообщить("Табличная часть пересчитана по данным магазина");
		Сообщить("Пересчитано позиций: "+сч);
	КонецЕсли;
КонецПроцедуры

ТабЗаказ= СоздатьОбъект("ТаблицаЗначений");
ТабВозвр = СоздатьОбъект("ТаблицаЗначений");
ТабПерем = СоздатьОбъект("ТаблицаЗначений");
СписРодителей = СоздатьОбъект("ТаблицаЗначений");
СписПерем = СоздатьОбъект("СписокЗначений");
СписЗаказ = СоздатьОбъект("СписокЗначений");
