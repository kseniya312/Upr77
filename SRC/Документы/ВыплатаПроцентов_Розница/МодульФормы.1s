Перем ТекДолги;

Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	если глПроверкаПравДоступа(Контекст)=0 Тогда
		Предупреждение("У вас нет прав на доступ к данному документу!",30);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		форма.НомерДок.Доступность(0);
		форма.ДатаДок.Доступность(0);
		форма.Документ_.Доступность(0);
		форма.Склад.Доступность(0);
		форма.Сумма.Доступность(0);
		Форма.Контрагент.Доступность(0);                 
	КонецЕсли; 
	
	//Валерий МЭТР
	глПроверкаРазрешенияРедактирования(Контекст);
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст,Скопирован);
	Если НазваниеНабораПрав()="Продавец_розница" Тогда
		Автор		= ПолучитьПустоеЗначение(Автор);
		Контрагент	= ПолучитьПустоеЗначение(Контрагент);
		Форма.Контрагент.Доступность(0);
	КонецЕсли;

	Склад_выдачи=глПользователь.ОсновнойСклад;
	Если Скопирован=1 Тогда	//Нефиг старые данные видеть
		УдалитьСтроки();
	КонецЕсли;

КонецПроцедуры

//Екатерина Мэтр +
Функция РассчитатьСкидку(док) 
	СкидкаКонтрагента = Контрагент.Скидка_Розница.Получить(док.ДатаДок);
	скидка=док.ДокОснование.Скидка;
	Если док.ВыданоСоСкидкой = 0 Тогда
		Скидка = 0;
	КонецЕсли;	
	СкидкаНакопление = СкидкаКонтрагента - Скидка;
	итого=0;
	
	Если СкидкаНакопление > 0 Тогда
		
		
		Если док.ДатаДок > Дата("03.10.08") Тогда
			
			док.ВыбратьСтроки();
			Пока док.ПолучитьСтроку() = 1 Цикл
				
				Если док.Номенклатура.Скидка.Получить(док.ДатаДок) = 0 Тогда
					СуммаСкидки	= док.Цена*(СкидкаНакопление/100)*док.Количество;
				ИначеЕсли СкидкаКонтрагента >= док.Номенклатура.Скидка.Получить(док.ДатаДок) Тогда
					ПоделеннаяПриоритетнаяСкидка = док.Номенклатура.Скидка.Получить(док.ДатаДок);
					Если СкидкаКонтрагента <> 0 Тогда
						ПоделеннаяПриоритетнаяСкидка = док.Номенклатура.Скидка.Получить(док.ДатаДок)*СкидкаНакопление/СкидкаКонтрагента; 
					КонецЕсли;
					СуммаСкидки	= док.Цена*(ПоделеннаяПриоритетнаяСкидка/100)*док.Количество;
					
				ИначеЕсли СкидкаКонтрагента < док.Номенклатура.Скидка.Получить(док.ДатаДок) Тогда
					Если (док.Номенклатура.ПриоритетнаяСкидка = 1) И (СкидкаКонтрагента > 0) Тогда
						ПоделеннаяПриоритетнаяСкидка = док.Номенклатура.Скидка.Получить(док.ДатаДок);
						Если СкидкаКонтрагента <> 0 Тогда
							ПоделеннаяПриоритетнаяСкидка = док.Номенклатура.Скидка.Получить(док.ДатаДок)*СкидкаНакопление/СкидкаКонтрагента; 
						КонецЕсли;
						СуммаСкидки	= док.Количество*док.Цена*(ПоделеннаяПриоритетнаяСкидка/100);
					Иначе
						СуммаСкидки	= док.Цена*(СкидкаНакопление/100)*док.Количество;
					КонецЕсли;
				КонецЕсли;
				
				Итого=СуммаСкидки+Итого;			
			КонецЦикла;
			
		Иначе
			итого	=  док.итог("Сумма")/100*Контрагент.Скидка_Розница.Получить(док.ДатаДок);
		КонецЕсли;
		
	КонецЕсли; 
	возврат Итого;
КонецФункции



Процедура НайдиБонусы()
	Перем Запрос, ТекстЗапроса;
	Запрос 	= СоздатьОбъект("Запрос");
	ТЗ_Долги= СоздатьОбъект("ТаблицаЗначений");
	УдалитьСтроки();
	Состояние("Расчёт таблицы текущих бонусов...");
	
	ВЗ		= Перечисление.ВидВзаимодействия.Проценты;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеБонусы)
	|Без итогов;
	|Клиент 			= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин			= Регистр.Покупатели_розница.Магазин;
	|КредДокумент		= Регистр.Покупатели_розница.КредДокумент;
	|СуммаРуб 				= Регистр.Покупатели_розница.СуммаРуб;
	|АналитикаСчетБезнал 	= Регистр.Покупатели_розница.АналитикаСчетБезнал;
	|АналитикаПродажи 		= Регистр.Покупатели_розница.АналитикаПродажи;
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Группировка Клиент без групп;
	|Группировка Магазин без Групп;
	|Группировка КредДокумент без Групп;
	|Группировка АналитикаСчетБезнал без Групп;
	|Группировка АналитикаПродажи без Групп;
	|Условие(Клиент = Контрагент);
	|Условие(ВидВзаимодействия = ВЗ);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Обрабатываем информацию о текущих бонусах...");
	Запрос.Выгрузить(ТЗ_Долги);
	
	
	//ТЗ_Проценты = глНайтиПроцентыИзДок2(Контрагент,"",Дата(0),Дата(0),ТекущийДокумент());
	//ТЗ_Проценты.ВыбратьСтроки();
	//Пока ТЗ_Проценты.ПолучитьСтроку()=1 цикл
	//	Если ТЗ_Проценты.Сумма<>0 тогда
	//		НоваяСтрока();
	//		Документ_	= ТЗ_Проценты.Документ;
	//		Склад		= ТЗ_Проценты.Склад;
	//		Сумма		= ТЗ_Проценты.Сумма;
	//	КонецЕсли;
	//КонецЦикла;
	
	//Если ТЗ_Долги.Итог("СуммаРубКонОст")=0 Тогда
	//	Сообщить("Непогашеных бонусов, у данного клиента, не найдено!");
	//Иначе
	//    УдалитьСтроки();
	ТЗ_Долги.ВыбратьСтроки();
	Пока ТЗ_Долги.ПолучитьСтроку()=1 Цикл
		//Если ТЗ_Долги.КредДокумент.Вид()<>"РасходнаяНакладнаяРозницаБезнал" тогда
		НоваяСтрока();
		Документ_			= ТЗ_Долги.КредДокумент;
		Если ТЗ_Долги.КредДокумент.Проведен() = 0 Тогда
			Если ПустоеЗначение(ТЗ_Долги.АналитикаПродажи.Магазин) = 0 Тогда
				Склад = ТЗ_Долги.АналитикаПродажи.Магазин;
			Иначе
				Склад = ТЗ_Долги.Магазин;
			КонецЕсли;
		Иначе
			Склад = ТЗ_Долги.Магазин;
		КонецЕсли;
		Сумма				= ТЗ_Долги.СуммаРубКонОст;
		АналитикаСчетБезнал = ТЗ_Долги.АналитикаСчетБезнал;
		АналитикаПродажи 	= ТЗ_Долги.АналитикаПродажи;
		//КонецЕсли;
	КонецЦикла;
	//КонецЕсли;
	

КонецПроцедуры 


Процедура НайдиБонусы2()
	Перем Запрос, ТекстЗапроса;
	Запрос 	= СоздатьОбъект("Запрос");
	ТЗ_Долги= СоздатьОбъект("ТаблицаЗначений");
	УдалитьСтроки();
	Состояние("Расчёт таблицы текущих бонусов...");
	
	ВЗ		= Перечисление.ВидВзаимодействия.Проценты;
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеБонусы)
	|Без итогов;
	|Клиент 			= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин			= Регистр.Покупатели_розница.Магазин;
	|КредДокумент		= Регистр.Покупатели_розница.КредДокумент;
	|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Группировка Клиент без групп;
	|Группировка Магазин без Групп;
	|Группировка КредДокумент без Групп;
	|Условие(Клиент = Контрагент);
	|Условие(ВидВзаимодействия = ВЗ);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Обрабатываем информацию о текущих бонусах...");
	Запрос.Выгрузить(ТЗ_Долги);
	
	
//Екатерина Мэтр +
	ДокБезнал = СоздатьОбъект("Документ");
	ТаблицаРеализаций = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаРеализацийМаг = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаРеализаций.НоваяКолонка("Док","Документ");
	ТаблицаРеализаций.НоваяКолонка("СуммаСкидок","Число");
	ТаблицаРеализаций.НоваяКолонка("Магазин");
	
	Запрос = СоздатьОбъект("Запрос");
	ДокСчетаЗапрос = СоздатьОбъект("Запрос");
	НачПериода=Дата("01.01.2011");
	КонПериода=РабочаяДата();
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеБонусы)
	|Период с НачПериода по КонПериода;
	|Обрабатывать НеПомеченныеНаУдаление;
	|ОбрабатыватьДокументы Проведенные;
	|док	 			= Документ.СчетБнРозница.ТекущийДокумент, Документ.ЗаявкаПокупателя.ТекущийДокумент, Документ.ЗаявкаКлиентаРозница.ТекущийДокумент;
	|Кнтр			 	= Документ.СчетБнРозница.Контрагент, 	  Документ.ЗаявкаПокупателя.Контрагент, 	 Документ.ЗаявкаКлиентаРозница.Контрагент;
	|Группировка док;
	|Условие(Кнтр =  Контрагент);";
	
	Если ДокСчетаЗапрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	ТекДок=Текущийдокумент();
	//ТекстЗапроса = 
	//"//{{ЗАПРОС(ТекущиеБонусы)
	//|Период с НачПериода по КонПериода;
	//|Обрабатывать НеПомеченныеНаУдаление;
	//|ОбрабатыватьДокументы Проведенные;
	//|док	 				= Документ.ВыплатаПроцентов_Розница.ТекущийДокумент;
	//|Кнтр			 		= Документ.ВыплатаПроцентов_Розница.Контрагент;
	//|Магазин				= Документ.ВыплатаПроцентов_Розница.Склад;
	//|СуммаРуб				= Документ.ВыплатаПроцентов_Розница.Сумма;
	//|Функция ВсегоСуммаРуб	= Сумма(СуммаРуб);
	//|Группировка Кнтр без групп;
	//|Условие(Кнтр = Контрагент);
	//|Условие(док <> ТекДок);
	//|"//}}ЗАПРОС
	//; 
	сп	= СоздатьОбъект("Документ");//.СчетБнРозница");
	сп1	= СоздатьОбъект("Документ");
	Пока ДокСчетаЗапрос.Группировка(1)=1 цикл
		сп.НайтиДокумент(ДокСчетаЗапрос.Док);
		
		
		суммаОпДог = глСуммаОплатыПоДоговору(сп.ТекущийДокумент());
		если суммаОпДог>0 тогда		
			сп1.ВыбратьПодчиненныеДокументы(,,сп.ТекущийДокумент()); 
			
			
			Выход = 0;
			
			
			Пока сп1.ПолучитьДокумент() = 1 Цикл
				Если сп1.Проведен() = 0 Тогда Продолжить КонецЕсли;  
				Если (сп1.Вид() = "РасходнаяНакладнаяРозницаБезнал") Тогда
					ДокБезнал.ВыбратьПодчиненныеДокументы(,,сп1.ТекущийДокумент());
					Пока ДокБезнал.ПолучитьДокумент() = 1 Цикл
						Если (ДокБезнал.Вид() = "Реализация") Тогда   
							Если (ДокБезнал.Проведен() = 1) Тогда // Сообщить(ДокБезнал.СуммаВзаиморасчетов);Сообщить("-----------------"); 
								Если (суммаОпДог < ДокБезнал.СуммаВзаиморасчетов) тогда
									Выход =1;
									прервать;
								КонецЕсли; 
								ТаблицаРеализаций.НоваяСтрока();
								ТаблицаРеализаций.Док=ДокБезнал.ТекущийДокумент();
								ТаблицаРеализаций.Магазин=ДокБезнал.Склад;
								ТаблицаРеализаций.СуммаСкидок=РассчитатьСкидку(ДокБезнал);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Если Выход = 1 Тогда Прервать КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		конецЕсли;		
	КонецЦикла;   
	
	
	ТаблицаРеализаций.Сортировать("Док+,Магазин+",1);	
	ТаблицаРеализацийМаг.Загрузить(ТаблицаРеализаций);
	ТаблицаРеализацийМаг.Свернуть("Магазин","СуммаСкидок");
	ТаблицаРеализацийМаг.Сортировать("Магазин+");
	ТаблицаРеализацийМаг.ВыбратьСтроки();
	Пока ТаблицаРеализацийМаг.ПолучитьСтроку()=1 цикл
		Если ТаблицаРеализацийМаг.СуммаСкидок>0 тогда
			
			
			ТекстЗапроса = 
			"//{{ЗАПРОС(ТекущиеБонусы)
			|Период с НачПериода по КонПериода;
			|Обрабатывать НеПомеченныеНаУдаление;
			|ОбрабатыватьДокументы Проведенные;
			|док	 				= Документ.ВыплатаПроцентов_Розница.ТекущийДокумент;
			|Кнтр			 		= Документ.ВыплатаПроцентов_Розница.Контрагент;
			|Магазин				= Документ.ВыплатаПроцентов_Розница.Склад;
			|СуммаРуб				= Документ.ВыплатаПроцентов_Розница.Сумма;
			|Функция ВсегоСуммаРуб	= Сумма(СуммаРуб);
			|Группировка Кнтр без групп;
			|Условие(Кнтр = Контрагент);
			|Условие(док <> ТекДок);
			|"//}}ЗАПРОС
			; 
			
			
			текстЗапроса=текстЗапроса+"Условие(Магазин =  ТаблицаРеализацийМаг.Магазин);";
			Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
				Возврат;
			КонецЕсли;
			СуммаСкидокПоДок=0;
			Если Запрос.Группировка(1)=1 тогда
				СуммаСкидокПоДок=Запрос.ВсегоСуммаРуб;
			КонецЕсли; 
			ТаблицаРеализаций.ВыбратьСтроки();
			Пока ТаблицаРеализаций.ПолучитьСтроку()=1 цикл 
				Если ТаблицаРеализаций.Магазин=ТаблицаРеализацийМаг.Магазин тогда
					х=ТаблицаРеализаций.СуммаСкидок;
					ТаблицаРеализаций.СуммаСкидок=макс(ТаблицаРеализаций.СуммаСкидок-СуммаСкидокПоДок,0);
					СуммаСкидокПоДок=макс(СуммаСкидокПоДок-х,0); 
					Если ТаблицаРеализаций.СуммаСкидок<>0 ТОгда
						НоваяСтрока() ;
						Документ_	= ТаблицаРеализаций.Док.ДокОснование;
						Склад		= ТаблицаРеализаций.Магазин; 
						Сумма		= ТаблицаРеализаций.СуммаСкидок;//ДокБезнал.СуммаВзаиморасчетов;
						
					КонецЕсли;
				конецесли;
			конецЦикла;
		конецесли;
	конецЦикла;
	ВыгрузитьТабличнуюЧасть(ТаблицаРеализаций);
	ТаблицаРеализаций.свернуть("Документ_,Склад","Сумма");
	ЗагрузитьТабличнуюЧасть(ТаблицаРеализаций);
//Екатерина Мэтр -
	
	
	//Если ТЗ_Долги.Итог("СуммаРубКонОст")=0 Тогда
	//	Сообщить("Непогашеных бонусов, у данного клиента, не найдено!");
	//Иначе
	//    УдалитьСтроки();
	ТЗ_Долги.ВыбратьСтроки();
	Пока ТЗ_Долги.ПолучитьСтроку()=1 Цикл
		Если ТЗ_Долги.КредДокумент.Вид()<>"РасходнаяНакладнаяРозницаБезнал" тогда
			НоваяСтрока();
			Документ_	= ТЗ_Долги.КредДокумент;
			Склад		= ТЗ_Долги.Магазин;
			Сумма		= ТЗ_Долги.СуммаРубКонОст;
		КонецЕсли;
	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры


Процедура ПриИзмененииКонтрагента()
	Если Контрагент.РозничныйКлиент<>1 Тогда
		Сообщить("Клиент ("+Контрагент+") не является розничным покупателем - его нельзя добавлять в этот документ!","!");
		Контрагент = ПолучитьПустоеЗначение(Контрагент);
		Возврат;
	КонецЕсли; 
	//////  зад
	Если Контрагент.НеВклВРасчетПроцентов = 1 Тогда
		УдалитьСтроки();
		Предупреждение(Контрагент.Наименование + " имееет опцию 'Не включать в расчет процентов'" +
		РазделительСтрок + "Выдача процентов невозможна!"); 
		Контрагент = ПолучитьПустоеЗначение(Контрагент);  
		Возврат;
	КонецЕсли;
	////////	зад
	НайдиБонусы();
КонецПроцедуры 

//Обрабатываем данные с ридера
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные);
	Scaner.EventNumber=Число(Данные);
	Карта=Scaner.ScanData;	//Данные со штрихкода
	Scaner.DeleteEvent();
	Scaner.DataEventEnabled = 1;
	
	Если ПустоеЗначение(Карта)=0 тогда
		//Если первые 2 символа "00" тогда - это контрагент 
		Если (лев(карта,2)="00") тогда	
			Контр=СоздатьОбъект("Справочник.Контрагенты");
			если Контр.ВыбратьЭлементыПоРеквизиту("ШтрихКарта", сокрЛП(карта), 0)=1 тогда
				контр.ПолучитьЭлемент();
				Контрагент	= Контр.ТекущийЭлемент();
			КонецЕсли;
		иначеЕсли (лев(карта,2)="99") тогда	
			Прод=СоздатьОбъект("Справочник.Пользователи");
			если Прод.ВыбратьЭлементыПоРеквизиту("КартаАвторизации", сокрЛП(карта), 0)=1 тогда
				прод.ПолучитьЭлемент();
				Автор= прод.ТекущийЭлемент();
			КонецЕсли;
		Иначе
			сообщить("Карта не опознана!");
			возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура РассчитайДолги()
	Перем Запрос, ТекстЗапроса;
	ВЗ		= Перечисление.ВидВзаимодействия.ДолгЗаТовары;
	Запрос 	= СоздатьОбъект("Запрос");
	ТЗ_Долги= СоздатьОбъект("ТаблицаЗначений");
	ТекстЗапроса = 
	"//{{ЗАПРОС(ТекущиеДолги)
	|Без итогов;
	|Клиент 			= Регистр.Покупатели_розница.Контрагент;
	|ВидВзаимодействия 	= Регистр.Покупатели_розница.ВидВзаимодействия;
	|Магазин			= Регистр.Покупатели_розница.Магазин;
	|СуммаРуб 			= Регистр.Покупатели_розница.СуммаРуб;
	|Функция СуммаРубКонОст = КонОст(СуммаРуб);
	|Группировка Клиент без групп;
	|Группировка Магазин без Групп;
	|Условие(Клиент = Контрагент);
	|Условие(ВидВзаимодействия = ВЗ);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Обрабатываем информацию о текущих долгах...");
	Запрос.Выгрузить(ТЗ_Долги);
	Если ТЗ_Долги.Итог("СуммаРубКонОст")=0 Тогда
		ТекДолги = ТЗ_Долги.Итог("СуммаРубКонОст");		
		//Сообщить("Непогашеных долгов, у данного клиента, не найдено!");	//не будем говорить об этом, т.к. это плюс в данном случае
	Иначе
		ТекДолги = ТЗ_Долги.Итог("СуммаРубКонОст");		
	КонецЕсли;
КонецПроцедуры


Процедура ПриЗаписи()
	
	//Валерий МЭТР:
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	РассчитайДолги();
	Если (ПустоеЗначение(Автор)=1)
	и (глПользователь.Наименование<>"Кожемякин") тогда
		сообщить("Проведите карточкой продавца по считывателю!");
		статусВозврата(0);
		возврат;
	иначеесли ПустоеЗначение(Контрагент)=1 тогда
		сообщить("Проведите карточкой клиента по считывателю!");
		статусВозврата(0);
		возврат;
   	иначеЕсли ПустоеЗначение(Склад_выдачи)=1 тогда
		сообщить("У указанного продавца, не задан склад, на котором он работает!");
		Сообщить("		возможно он не прошел авторизацию");
		статусВозврата(0);
		возврат;
	ИначеЕсли (Итог("Сумма")<=(-1)*ТекДолги)
	и (Итог("Сумма") > 0) Тогда
		Предупреждение("Внимание!
						|		Сумма долгов у клиента ("+глФРМ((-1)*ТекДолги,глРубли)+"), превышает сумму бонусов ("+глФРМ(Итог("Сумма"),глРубли)+").
						|		Выдача бонусов будет возможна, только после погашения задолженности!",30);
		статусВозврата(0);
		возврат;
	КонецЕсли;
	проба		= СоздатьОбъект("Справочник.ОтборРознДокум");
	ЭР			= сокрЛП(Перечисление.ВидДокументаРозница.ВыплатаПроцентовРозница)+сокрЛП(склад_выдачи);
	Если проба.НайтиПоНаименованию(сокрЛП(ЭР),0,1)=1 Тогда
	    ЭтоРозница=проба.ТекущийЭлемент();
	Иначе
		проба.новый();
		проба.наименование=ЭР;
		проба.записать();
		ЭтоРозница=проба.ТекущийЭлемент();
	КонецЕсли;
	//АвтоВремяПослеТА();
	//ПроводитьПослеТА(1,1);
	//Провести(3);
	//Форма.Закрыть(0);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (Документ_.Вид() = "РасходнаяНакладнаяРозницаБезнал") или (Документ_.Вид() = "РасходнаяНакладнаяРозница") Тогда
			//Если ПустоеЗначение(АналитикаПродажи) = 1 Тогда
			Если Документ_.Комментарий <> "Для ввода остатков" Тогда
				АналитикаПродажи 	= Документ_.АналитикаПроценты;
			КонецЕсли;
		КонецЕсли;
		Если Документ_.Вид() = "РасходнаяНакладнаяРозницаБезнал" Тогда
			//Если ПустоеЗначение(АналитикаСчетБезнал) = 1 Тогда 
			Если Документ_.Комментарий <> "Для ввода остатков" Тогда
				АналитикаСчетБезнал = Документ_.АналитикаСчетБезналПроценты;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры

Процедура Печать()
	
	Таблица = СоздатьОбъект("Таблица");
	Таблица.ИсходнаяТаблица("Таблица");
	Таблица.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		Таблица.ВывестиСекцию("Строка");
	КонецЦикла;
	
	Таблица.ВывестиСекцию("Подвал");
	Таблица.ТолькоПросмотр(1);
	Таблица.Показать("Выдача процентов (магазин)");
	
КонецПроцедуры