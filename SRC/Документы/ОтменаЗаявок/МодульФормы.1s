////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//
Перем СписокДействий; // для механизма кнопки "Действия"

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ЗаполнитьТабличнуюЧасть()
//
// Парметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  Заполняет табличную часть документа на основании списка заявок, переданного, 
//  в качестве параметра при открытии формы
//
Процедура ЗаполнитьТабличнуюЧасть()
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
	    Возврат;
	КонецЕсли;
	СписокЗаявок = Форма.Параметр;
	СчетчикЦикла = 0;
	Для СчетчикЦикла = 1 По СписокЗаявок.РазмерСписка() Цикл
		НоваяСтрока();
		Заявка = СписокЗаявок.ПолучитьЗначение(СчетчикЦикла);		
	КонецЦикла;                                              
КонецПроцедуры // ЗаполнитьТабличнуюЧасть()
  
Процедура ПриЗаписи()
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры	

//******************************************************************************
// ПоКнопкеЗаполнить()
//
// Парметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Описание: 
//	Вызывается при нажатии кнопки "Заполнить" и вызывает форму отчета "Оплата заявок"
//  для заполнения табличной части документа
//
Процедура ПоКнопкеЗаполнить()    
	Если КоличествоСтрок() <> 0 Тогда  
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Если Вопрос(ТекстВопроса, "Да+Нет", 60) <> "Да" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;    
	УдалитьСтроки();
	Расшифровка = СоздатьОбъект("СписокЗначений");
	Расшифровка.Установить("Отчет", "ОплатаЗаявок");
	Расшифровка.Установить("Просроченные", 1);
	Расшифровка.Установить("ДатаНачала", НачГода(ДатаДок));
	Расшифровка.Установить("ДатаКонца", Макс(ДатаДок, ПолучитьДатуТА()));
	Расшифровка.Установить("ВидРазделителя", 1);
	Расшифровка.Установить("ВыбРазделитель1", Фирма);    
	
	Если СравнитьТА() <> -2  Тогда
		Расшифровка.Установить("ДокументОтменыЗаявок", ТекущийДокумент());     
	Иначе
		Расшифровка.Установить("ДокументОтменыЗаявок", "");    
	КонецЕсли;

	Группировки = СоздатьОбъект("СписокЗначений");
	Группировки.ДобавитьЗначение("Фирма", 		"Фирма");
	Группировки.ДобавитьЗначение("СвойствоПок", "Свойство покупателя");
	Группировки.ДобавитьЗначение("Контрагент", 	"Покупатель");
	Группировки.ДобавитьЗначение("Договор","Договор");
	Группировки.ДобавитьЗначение("Заявка","Заявка");
	Группировки.ДобавитьЗначение("Док", 	"Кредитный документ");
	
	Группировки. Пометка(3, 1);                                
	Группировки. Пометка(4, 1);                                
	Группировки. Пометка(5, 1);                                
	
	СостоянияОплаты = СоздатьОбъект("СписокЗначений");
	СостоянияОплаты.ДобавитьЗначение("Неоплаченные",	"Неоплаченные");
	СостоянияОплаты.ДобавитьЗначение("Оплаченные", "Оплаченные полностью");
	СостоянияОплаты.ДобавитьЗначение("ЧастичноОплаченные", 	"Частично оплаченные");
	                                                  
	СостоянияОтгрузки = СоздатьОбъект("СписокЗначений");
	СостоянияОтгрузки.ДобавитьЗначение("Неотгруженные", 	"Неотгруженные");  
	СостоянияОтгрузки.ДобавитьЗначение("Отгруженные", 	"Отгруженные полностью");  
	СостоянияОтгрузки.ДобавитьЗначение("ЧастичноОтгруженные", 	"Частично отгруженные");  
	
	СостоянияОплаты. Пометка(1, 1);         
	
	СостоянияОтгрузки. Пометка(1, 1);         
	
	Расшифровка.Установить("СостоянияОплаты", СостоянияОплаты);
	Расшифровка.Установить("СостоянияОтгрузки", СостоянияОтгрузки);

	Расшифровка.Установить("Группировки", Группировки);
	
	ОткрытьФорму("Отчет.ОплатаЗаявок", Расшифровка);
КонецПроцедуры // ПоКнопкеЗаполнить()    


//******************************************************************************
// ПоКнопкеПодбор()
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Нет
//
// Вызывается из формул элементов диалога:
// Кнопка "Подбор".
//
// Описание:
// Открывает подбор.
//
Процедура ПоКнопкеПодбор()
	ОткрытьПодбор("Документ.ЗаявкаПокупателя");
КонецПроцедуры // ПоКнопкеПодбор()


////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
// 

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);     
	глПроверкаРазрешенияРедактирования(Контекст);
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		Если ПустоеЗначение(Парам.Получить("Команда"))=0 Тогда
			Если (Парам.Получить("Команда") = "ПечатьНаПринтер")
			или  (Парам.Получить("Команда") = "ПечатьНаЭкран") 
			Тогда
				Предупреждение("Для данного документа печатная форма не предусмотрена!", 60);
				СтатусВозврата(0);Возврат;
			Иначе
				Сообщить("В форму документа "+Вид()+" передана неверная команда "+Парам.Получить("Команда")+"!","I");
				СтатусВозврата(0);Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// если дата проведенного документа больше ТА, то открываем только на просмотр,
	// так как его все равно не удастся сохранить после редактирования.
	Если (Проведен() = 1) И (ДатаДок > ПолучитьДатуТА()) Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
	    // СДЕЛАТЬ НЕДОСТУПНЫМИ КНОПКИ МОДИФИКАЦИИ ДОКУМЕНТА
		Форма.кнОК.Доступность(0);
		Форма.кнХПроект.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);  
	Иначе 
		
		// если новый документ, и передали список для знаполнения, то заполним
		Если Выбран() = 0 Тогда
			ЗаполнитьТабличнуюЧасть();
		КонецЕсли;
	КонецЕсли;   
	
	// кнопка по умолчанию
	Если (Форма.ТолькоПросмотр() = 1) ИЛИ ((ДатаДок < Макс(РабочаяДата(), ПолучитьДатуТА()) ) И (Выбран() = 1)) Тогда
	    Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	Если Выбран() = 0 Тогда
		глАктивизироватьРеквизит(Контекст);
    КонецЕсли;
КонецПроцедуры // ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ВводНового(Скопирован)
	глЗаполнитьШапку(Контекст, Скопирован,"Продажа");
КонецПроцедуры // ВводНового()


//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриПовторномОткрытии()
	ЗаполнитьТабличнуюЧасть();
КонецПроцедуры // ПриПовторномОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеРедактированияСтроки()
	Если Заявка.Выбран() = 0  Тогда
		Если Форма.ТекущаяКолонка() = "ТекстЗаявка" Тогда
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение("ВидДокумента", "ВидОтбора");
			СписокПараметров.ДобавитьЗначение("ЗаявкаПокупателя", "Параметр");
			ОткрытьФормуМодально("Журнал.ЖурналОбщий.ФормаСОтбором#"+ ЗначениеВСтрокуВнутр("ЗаявкаПокупателя"), СписокПараметров);
			Если (ТипЗначенияСтр(СписокПараметров) = "Документ") и (Фирма.Выбран() = 1) Тогда
				Если СписокПараметров.Фирма <> Фирма Тогда    
				    Предупреждение("Можно выбирать заявки только фирмы (" +СокрЛП(Фирма)+"), от которой оформляется документ.",60); 
				Иначе
					Заявка = СписокПараметров;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	   	Возврат;
	КонецЕсли;
	Если (Форма.ТекущаяКолонка() = "ОткрытьЗаявку") Тогда
		ОткрытьФорму(Заявка);
	ИначеЕсли (Форма.ТекущаяКолонка() = "Покупатель") Тогда
		Если Заявка.Контрагент.Выбран() = 1 Тогда
			ОткрытьФорму(Заявка.Контрагент);
		КонецЕсли;
	ИначеЕсли (Форма.ТекущаяКолонка() = "Договор") Тогда
		Если Заявка.Контрагент.Выбран() = 1 Тогда
			ОткрытьФорму(Заявка.Договор);
		КонецЕсли;
	ИначеЕсли Форма.ТекущаяКолонка() = "ТекстЗаявка" Тогда 
		СписокПараметров = СоздатьОбъект("СписокЗначений");
		СписокПараметров.ДобавитьЗначение("ВидДокумента", "ВидОтбора");
		СписокПараметров.ДобавитьЗначение("ЗаявкаПокупателя", "Параметр");
		ОткрытьФормуМодально("Журнал.ЖурналОбщий.ФормаСОтбором#"+ ЗначениеВСтрокуВнутр("ЗаявкаПокупателя"), СписокПараметров);
		Если (ТипЗначенияСтр(СписокПараметров) = "Документ") и (Фирма.Выбран() = 1) Тогда
			Если СписокПараметров.Фирма <> Фирма Тогда    
			    Предупреждение("Можно выбирать заявки только фирмы (" +СокрЛП(Фирма)+"), от которой оформляется документ.",60); 
			Иначе
				Заявка = СписокПараметров;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;     
КонецПроцедуры // ПриНачалеРедактированияСтроки()              

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриРедактированииНовойСтроки()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ВидДокумента", "ВидОтбора");
	СписокПараметров.ДобавитьЗначение("ЗаявкаПокупателя", "Параметр");
	ОткрытьФормуМодально("Журнал.ЖурналОбщий.ФормаСОтбором#"+ ЗначениеВСтрокуВнутр("ЗаявкаПокупателя"), СписокПараметров);
	Если (ТипЗначенияСтр(СписокПараметров) = "Документ") и (Фирма.Выбран() = 1) Тогда
		Если СписокПараметров.Фирма <> Фирма Тогда    
		    Предупреждение("Можно выбирать заявки только фирмы (" +СокрЛП(Фирма)+"), от которой оформляется документ.",60); 
		Иначе
			Заявка = СписокПараметров;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриРедактированииНовойСтроки()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПодбора(ВыбЗнач, КонтФормыПодбора)       
	Если ВыбЗнач.Фирма <> Фирма Тогда    
	    Предупреждение("Можно выбирать заявки только фирмы (" +СокрЛП(Фирма)+"), от которой оформляется документ.",60); 
	Иначе   
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Заявка = ВыбЗнач Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
		НоваяСтрока();
		Заявка = ВыбЗнач;
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()	
	
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
//Инициализирум список действий по кнопке "Действия"
СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Перейти в журнал");
СписокДействий.ДобавитьЗначение("Ввести на основании");
