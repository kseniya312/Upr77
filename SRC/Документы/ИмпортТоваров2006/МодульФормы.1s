Перем ТЗ, КодПроверки;

//Добавляет товар в промежуточную таблицу, и потом из неё уже будем делать выборку в результирующую
Процедура АнализПриходовНаСклад(ТекЭлем,Колво)
	перем а;
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать22)
	|Период с НачДата по КонДата;
	|Обрабатывать НеПомеченныеНаУдаление;
	|Без итогов;
	|Номенклатура = Регистр.ПартииНаличие.Номенклатура;
	|ЗакупочнаяЦена = Регистр.ПартииНаличие.Партия.ЗакупочнаяЦена;
	|ТекущийДокумент = Регистр.ПартииНаличие.ТекущийДокумент.ПеремещениеТМЦ.ТекущийДокумент;
	|СкладПолучатель = Регистр.ПартииНаличие.ТекущийДокумент.ПеремещениеТМЦ.СкладПолучатель;
	|Количество = Регистр.ПартииНаличие.Количество;
	|СкладУп = Регистр.ПартииНаличие.ТекущийДокумент.ПеремещениеТМЦ.Склад;
	|Функция ЗакупочнаяЦенаСумма = Сумма(ЗакупочнаяЦена);
//	|Функция КоличествоПриход = Приход(Количество);
	|Функция КоличествоРасход = Расход(Количество);
//	|Группировка Номенклатура без групп все ВошедшиеВЗапрос;
	|Группировка ТекущийДокумент без групп;
	|Условие(СкладУп в ВыбСкладУп);
	|Условие(СкладПолучатель в Склад);
	|Условие(Номенклатура в ТекЭлем);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ_товара=СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗ_товара,0,0);
	КодПроверки=0;
	Если ТЗ_товара.КоличествоСтрок()>0 Тогда
		НоваяСтрока();
		Номенклатура	= ТекЭлем;
		Единица			= ТекЭлем.БазоваяЕдиница;
		Себестоимость	= ТЗ_товара.итог("ЗакупочнаяЦенаСумма")/ТЗ_товара.итог("КоличествоРасход");
		Производитель	= ТекЭлем.Производитель;
		Количество		= Колво;
		Сумма			= ТЗ_товара.итог("ЗакупочнаяЦенаСумма");//*ТЗ_товара.итог("КоличествоРасход");
		Код				= ТекЭлем.Код;
		КодИзРозницы	= ТекЭлем.КодРозницы;
		КодПроверки		= ТекЭлем.КодРозницы;
	КонецЕсли;	
КонецПроцедуры
     
Процедура ПриЗаписи()
	ПриЗаписиДокумента(Контекст);
КонецПроцедуры	

Функция РаспределиТовар(КодРозницы,Колво)
	Рез=0;
	спр=СоздатьОбъект("Справочник.Номенклатура");
	если спр.ВыбратьЭлементыПоРеквизиту("КодРозницы",КодРозницы,0,0)=1 Тогда
		Рез=1;	//Соответствие найдено
	Иначе
		Рез=0;	//Нет соответствия!!!
		Возврат Рез;
	КонецЕсли;
	
//******************************************************************************
	б=0;
	Пока спр.ПолучитьЭлемент()=1 Цикл
		б=1;
		Если спр.ЭтоГруппа()=0 Тогда
			АнализПриходовНаСклад(спр.ТекущийЭлемент(),Колво);
			Если КодПроверки<>0 Тогда
				б=0;
				Возврат Рез;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если б=1 Тогда	//не было движений, ставим самый первый из списка!!!
		НоваяСтрока();
		спр.ВыбратьЭлементыПоРеквизиту("КодРозницы",КодРозницы,0,0);
		спр.ПолучитьЭлемент();
		Номенклатура	= спр.ТекущийЭлемент();
		Единица			= Номенклатура.БазоваяЕдиница;
		Себестоимость	= Номенклатура.ПоследняяЦенаПрихода.Получить(ДатаДок);
		Производитель	= Номенклатура.Производитель;
		Количество		= Колво;
		Сумма			= Себестоимость*Колво;
		Код				= Номенклатура.Код;
		КодИзРозницы	= Номенклатура.КодРозницы;
	КонецЕсли;
	
	Возврат Рез;
КонецФункции


//Тут происходит сопоставление розничных товаров и их соответствующих апологетов в оптовой базе
Функция ОбработайТЗ()
	спр=СоздатьОбъект("Справочник.Номенклатура");
	Рез=0;

//	т.к. времени осталось мало - и я опять не успеваю, придётся сделать тупо, но быстро
//	товар идёт по максимуму на Tiemme, а все остальное, как придётся

	ТЗ.ВыбратьСтроки();
	ап=0;
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
	    ап=ап+1;
		а=распределиТовар(ТЗ.КодРозницы,ТЗ.Количество);
		Состояние(ап+", Тек. товар: "+ТЗ.НоменклНаим);
		если а=0 Тогда
			Сообщить("Не найдено соответствие для: "+ТЗ.КодРозницы+"
					|	данные по этому товару придётся добавить самим!!!","!!!");
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции


Процедура Сопоставление()	//Тут загружаем исх данные из файла
	а=Вопрос("Вы уверены, что желаете продолжить? Эта операция
	|НЕОБРАТИМА и должна запускаться лишь УПОЛНОМОЧЕННЫМИ лицами.
	|Запуск наобум приведет к разрушению логических связей в базе!!!",4,999);
	Если а<>6 Тогда
		возврат;
	КонецЕсли;
	
	УдалитьСтроки();
	
	ТЗ	= "";
	ТЗ	= СоздатьОбъект("ТаблицаЗначений");
	состояние("Восстановление исходных данных...");
	//задаём параметры ТЗ
	ТЗ.НоваяКолонка("КодРозницы"	,"число"	,6);
	ТЗ.НоваяКолонка("Единица"		,"строка"	,10);
	ТЗ.НоваяКолонка("Количество"	,"число"	,14	,3);
	ТЗ.НоваяКолонка("Цена_продажи"	,"число"	,14	,3);
	ТЗ.НоваяКолонка("НоменклНаим"	,"строка"	,100);
	ТЗ.НоваяКолонка("Скл"			,"строка"	,25);
	
	//конвертируем данные, добавляя нумератор
	//ТЕМП	= СоздатьОбъект("ТаблицаЗначений");
	ТЕМП	=	"";
//	имяФайла		= ДанныеРозница;
	имяФайла			= "C:\2.bak";

	ЗначениеИзФайла(имяФайла,ТЕМП,0);
	ТЕМП.ВыбратьСтроки();
	Сообщить("Строк:"+темп.КоличествоСтрок());
	Пока ТЕМП.ПолучитьСтроку()=1 Цикл
		ТЗ.НоваяСтрока();
		ТЗ.КодРозницы	= ТЕМП.Код;
		ТЗ.Единица		= ТЕМП.Единица;
		ТЗ.Количество	= ТЕМП.Количество;
		ТЗ.Цена_продажи	= ТЕМП.Цена_продажи;
		ТЗ.НоменклНаим	= ТЕМП.НоменклНаим;
		ТЗ.Скл			= ТЕМП.Скл;
	КонецЦикла;
	ТЕМП="";

	состояние("Начинаем разгребать товар - создадим таблицу соответствий для каждого розничного товара...");
	Если ОбработайТЗ()=0 Тогда
	    Сообщить("ТЗ не обработана!!!");
		Возврат;
	КонецЕсли;

КонецПроцедуры	//сопоставление()
   
Процедура ВводНового()
	Сообщить("Нельзя этот документ вводить, он должен быть импортирован из др. базы");
	форма.закрыть(0);
	СтатусВозврата(0);
КонецПроцедуры

Процедура Сформируй()

КонецПроцедуры  

Процедура Коэфф()
	ВыбратьСтроки();
	пока ПолучитьСтроку()=1 цикл
		Коэффициент=1;
	КонецЦикла;
КонецПроцедуры

ТЗ=СоздатьОбъект("ТаблицаЗначений");
